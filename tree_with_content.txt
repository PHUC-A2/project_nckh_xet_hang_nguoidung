src/
│   ├── main/
│   │   ├── java/
│   │   │   ├── com/
│   │   │   │   ├── example/
│   │   │   │   │   ├── xephangnguoidung/
│   │   │   │   │   │   ├── XephangnguoidungApplication.java

--------------------------------------------------
│--- Nội dung file: XephangnguoidungApplication.java ---
│ package com.example.xephangnguoidung;
│ 
│ import org.springframework.boot.SpringApplication;
│ import org.springframework.boot.autoconfigure.SpringBootApplication;
│ 
│ @SpringBootApplication
│ // (exclude = org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration.class)
│ public class XephangnguoidungApplication {
│ 
│     public static void main(String[] args) {
│         SpringApplication.run(XephangnguoidungApplication.class, args);
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   ├── application/
│   │   │   │   │   │   │   ├── config/
│   │   │   │   │   │   │   │   ├── CustomAuthenticationSuccessHandler.java

--------------------------------------------------
│--- Nội dung file: CustomAuthenticationSuccessHandler.java ---
│ package com.example.xephangnguoidung.application.config;
│ 
│ import java.io.IOException;
│ import java.util.Collection;
│ 
│ import jakarta.servlet.ServletException;
│ import jakarta.servlet.http.HttpServletRequest;
│ import jakarta.servlet.http.HttpServletResponse;
│ 
│ import org.springframework.security.core.Authentication;
│ import org.springframework.security.core.GrantedAuthority;
│ import org.springframework.security.web.authentication.AuthenticationSuccessHandler;
│ import org.springframework.stereotype.Component;
│ 
│ @Component
│ public class CustomAuthenticationSuccessHandler implements AuthenticationSuccessHandler {
│ 
│     @Override
│     public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,
│             Authentication authentication) throws IOException, ServletException {
│ 
│         Collection<? extends GrantedAuthority> authorities = authentication.getAuthorities();
│         String redirectURL = "/"; // Mặc định về trang chủ nếu không có vai trò nào phù hợp
│ 
│         if (authorities.stream().anyMatch(auth -> auth.getAuthority().equals("ROLE_ADMIN"))) {
│             redirectURL = "/admin";
│         } else if (authorities.stream().anyMatch(auth -> auth.getAuthority().equals("ROLE_USER"))) {
│             redirectURL = "/user/hoso";
│         }
│ 
│         response.sendRedirect(redirectURL);
│     }
│ }
--------------------------------------------------

│   │   │   │   │   │   │   │   ├── SecurityConfiguration.java

--------------------------------------------------
│--- Nội dung file: SecurityConfiguration.java ---
│ package com.example.xephangnguoidung.application.config;
│ 
│ import org.springframework.context.annotation.Bean;
│ import org.springframework.context.annotation.Configuration;
│ import org.springframework.security.authentication.AuthenticationManager;
│ import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
│ import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
│ import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
│ import org.springframework.security.config.annotation.web.builders.HttpSecurity;
│ import org.springframework.security.core.userdetails.UserDetailsService;
│ import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
│ import org.springframework.security.crypto.password.PasswordEncoder;
│ import org.springframework.security.web.SecurityFilterChain;
│ import org.springframework.security.web.authentication.AuthenticationFailureHandler;
│ import org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler;
│ 
│ import com.example.xephangnguoidung.application.service.CustomUserDetailsService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ 
│ import jakarta.servlet.DispatcherType;
│ 
│ @Configuration
│ @EnableMethodSecurity(securedEnabled = true)
│ public class SecurityConfiguration {
│ 
│         // Bean để mã hóa mật khẩu sử dụng BCrypt
│         @Bean
│         public PasswordEncoder passwordEncoder() {
│                 return new BCryptPasswordEncoder();
│         }
│ 
│         // Bean để cung cấp dịch vụ UserDetailsService tùy chỉnh
│         @Bean
│         public UserDetailsService userDetailsService(NguoiDungService nguoiDungService) {
│                 return new CustomUserDetailsService(nguoiDungService);
│         }
│ 
│         // Bean để cấu hình AuthenticationManager
│         @Bean
│         public AuthenticationManager authenticationManager(HttpSecurity http,
│                         PasswordEncoder passwordEncoder,
│                         UserDetailsService userDetailsService) throws Exception {
│                 AuthenticationManagerBuilder authenticationManagerBuilder = http
│                                 .getSharedObject(AuthenticationManagerBuilder.class);
│                 authenticationManagerBuilder
│                                 .userDetailsService(userDetailsService)
│                                 .passwordEncoder(passwordEncoder);
│                 return authenticationManagerBuilder.build();
│         }
│ 
│         // Bean để cấu hình DaoAuthenticationProvider
│         @Bean
│         public DaoAuthenticationProvider authProvider(PasswordEncoder passwordEncoder,
│                         UserDetailsService userDetailsService) {
│                 DaoAuthenticationProvider authProvider = new DaoAuthenticationProvider();
│                 authProvider.setUserDetailsService(userDetailsService);
│                 authProvider.setPasswordEncoder(passwordEncoder);
│                 return authProvider;
│         }
│ 
│         // Bean để xử lý lỗi đăng nhập
│         @Bean
│         public AuthenticationFailureHandler authenticationFailureHandler() {
│                 return new SimpleUrlAuthenticationFailureHandler("/login?error=true");
│         }
│ 
│         // Bean để cấu hình SecurityFilterChain
│         @Bean
│         public SecurityFilterChain securityFilterChain(HttpSecurity http,
│                         CustomAuthenticationSuccessHandler successHandler) throws Exception {
│                 http
│                                 .authorizeHttpRequests(auth -> auth
│                                                 // Cho phép các yêu cầu với DispatcherType FORWARD và INCLUDE
│                                                 .dispatcherTypeMatchers(DispatcherType.FORWARD, DispatcherType.INCLUDE)
│                                                 .permitAll()
│                                                 // Cho phép truy cập không cần xác thực vào các đường dẫn cụ thể
│                                                 .requestMatchers("/","/user/baiviet/chitiet/{id}","/user/baiviet/tatca","/hello", "/css/**", "/js/**", "/images/**").permitAll()
│                                                 .requestMatchers("/login", "/register").permitAll()
│                                                 // Chỉ cho phép người dùng có vai trò ADMIN truy cập vào /admin/**
│                                                 .requestMatchers("/admin/**").hasRole("ADMIN")
│                                                 // Chỉ cho phép người dùng có vai trò USER truy cập vào /user/**
│                                                 .requestMatchers("/user/**").hasRole("USER")
│                                                 // Yêu cầu xác thực cho tất cả các yêu cầu còn lại
│                                                 .anyRequest().authenticated())
│                                 .formLogin(login -> login
│                                                 // Đường dẫn đến trang đăng nhập
│                                                 .loginPage("/login")
│                                                 // Xử lý thành công đăng nhập
│                                                 .successHandler(successHandler)
│                                                 // Xử lý lỗi đăng nhập
│                                                 .failureHandler(authenticationFailureHandler())
│                                                 .permitAll())
│                                 .logout(logout -> logout
│                                                 // Đường dẫn để đăng xuất
│                                                 .logoutUrl("/logout")
│                                                 // Đường dẫn sau khi đăng xuất thành công
│                                                 .logoutSuccessUrl("/login?logout")
│                                                 .permitAll());
│ 
│                 return http.build();
│         }
│ }--------------------------------------------------

│   │   │   │   │   │   │   ├── service/
│   │   │   │   │   │   │   │   ├── BaiVietService.java

--------------------------------------------------
│--- Nội dung file: BaiVietService.java ---
│ package com.example.xephangnguoidung.application.service;
│ 
│ import java.util.List;
│ 
│ import org.springframework.stereotype.Service;
│ 
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.enums.LoaiHoatDong;
│ import com.example.xephangnguoidung.data.repository.BaiVietRepository;
│ 
│ import jakarta.transaction.Transactional;
│ 
│ @Service
│ @Transactional
│ public class BaiVietService {
│     private final BaiVietRepository baiVietRepository;
│     private final DiemNguoiDungService diemNguoiDungService;
│ 
│     public BaiVietService(BaiVietRepository baiVietRepository, DiemNguoiDungService diemNguoiDungService) {
│         this.baiVietRepository = baiVietRepository;
│         this.diemNguoiDungService = diemNguoiDungService;
│     }
│ 
│     public List<BaiViet> layTatCaBaiViet() {
│         return baiVietRepository.findAll();
│     }
│ 
│     public List<BaiViet> layTatCaBaiVietById(Long id) {
│         return baiVietRepository.findByNguoiDungId(id);
│     }
│ 
│     public BaiViet layBaiVietById(Long id) {
│         return baiVietRepository.findById(id)
│                 .orElseThrow(() -> new RuntimeException("Không tìm thấy bài viết với ID: " + id));
│     }
│ 
│     public BaiViet luuBaiViet(BaiViet baiViet) {
│         BaiViet saveBaiViet = this.baiVietRepository.save(baiViet);
│         this.diemNguoiDungService.tinhDiem(baiViet.getNguoiDung().getId(), LoaiHoatDong.VIET_BAI);
│         return saveBaiViet;
│     }
│ 
│     public void xoaBaiVietById(Long id) {
│         BaiViet baiViet = layBaiVietById(id);
│         baiVietRepository.deleteById(id);
│         // Trừ điểm khi xóa bài viết
│         this.diemNguoiDungService.tinhDiem(baiViet.getNguoiDung().getId(), LoaiHoatDong.VIET_BAI, -1);
│     }
│ 
│     public List<BaiViet> timKiemBaiViet(String keyword) {
│         return baiVietRepository.findByTieuDeContainingIgnoreCase(keyword);
│     }
│ 
│     // Thêm phương thức timBaiVietTheoId
│     public BaiViet timBaiVietTheoId(Long id) {
│         return layBaiVietById(id);
│     }
│ 
│     // lay so luong bai viet
│     public Long soLuongBaiViet() {
│         return baiVietRepository.count();
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── BinhLuanService.java

--------------------------------------------------
│--- Nội dung file: BinhLuanService.java ---
│ package com.example.xephangnguoidung.application.service;
│ 
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.entity.BinhLuan;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.enums.LoaiHoatDong;
│ import com.example.xephangnguoidung.data.repository.BaiVietRepository;
│ import com.example.xephangnguoidung.data.repository.BinhLuanRepository;
│ import com.example.xephangnguoidung.data.repository.NguoiDungRepository;
│ import jakarta.transaction.Transactional;
│ import org.springframework.stereotype.Service;
│ 
│ import java.util.List;
│ 
│ @Service
│ @Transactional
│ public class BinhLuanService {
│ 
│     private final BinhLuanRepository binhLuanRepository;
│     private final BaiVietRepository baiVietRepository;
│     private final NguoiDungRepository nguoiDungRepository;
│     private final DiemNguoiDungService diemNguoiDungService;
│ 
│     public BinhLuanService(BinhLuanRepository binhLuanRepository, BaiVietRepository baiVietRepository,
│             NguoiDungRepository nguoiDungRepository, DiemNguoiDungService diemNguoiDungService) {
│         this.binhLuanRepository = binhLuanRepository;
│         this.baiVietRepository = baiVietRepository;
│         this.nguoiDungRepository = nguoiDungRepository;
│         this.diemNguoiDungService = diemNguoiDungService;
│     }
│ 
│     // Thêm bình luận doi voi admin
│     @Transactional
│     public BinhLuan themBinhLuan(Long nguoiDungId, BinhLuan binhLuan) {
│         NguoiDung nguoiDung = nguoiDungRepository.findById(nguoiDungId)
│                 .orElseThrow(() -> new RuntimeException("Không tìm thấy người dùng với ID: " + nguoiDungId));
│ 
│         binhLuan.setNguoiDung(nguoiDung);
│         BinhLuan binhLuanMoi = binhLuanRepository.save(binhLuan);
│ 
│         // Gọi phương thức tinhDiem để cập nhật điểm và cấp bậc
│         diemNguoiDungService.tinhDiem(nguoiDungId, LoaiHoatDong.BINH_LUAN);
│ 
│         return binhLuanMoi;
│     }
│ 
│     // // Thêm bình luận đối với user
│     // @Transactional
│     // public BinhLuan themBinhLuanDoiVoi(Long nguoiDungId, Long baiVietId, BinhLuan binhLuan)
│ 
│     // Xóa bình luận
│     public void xoaBinhLuan(Long binhLuanId) {
│         BinhLuan binhLuan = binhLuanRepository.findById(binhLuanId)
│                 .orElseThrow(() -> new RuntimeException("Không tìm thấy bình luận"));
│ 
│         BaiViet baiViet = binhLuan.getBaiViet();
│         binhLuanRepository.delete(binhLuan);
│ 
│         // Cập nhật số lượt bình luận trong bảng BaiViet
│         baiViet.setSoLuotBinhLuan(Math.max(0, baiViet.getSoLuotBinhLuan() - 1));
│         baiVietRepository.save(baiViet);
│ 
│         // Trừ điểm khi xóa bình luận
│         diemNguoiDungService.tinhDiem(binhLuan.getNguoiDung().getId(), LoaiHoatDong.BINH_LUAN, -1);
│     }
│ 
│     // Lấy danh sách bình luận của bài viết
│     public List<BinhLuan> layDanhSachBinhLuan(Long baiVietId) {
│         BaiViet baiViet = baiVietRepository.findById(baiVietId)
│                 .orElseThrow(() -> new RuntimeException("Không tìm thấy bài viết"));
│ 
│         return binhLuanRepository.findByBaiViet(baiViet);
│     }
│ 
│     // Lấy tất cả bình luận
│     public List<BinhLuan> layTatCaBinhLuan() {
│         return binhLuanRepository.findAll();
│     }
│ 
│     // Tìm kiếm bình luận
│     public List<BinhLuan> timKiemBinhLuan(String keyword) {
│         return binhLuanRepository.findByNoiDungContainingIgnoreCase(keyword);
│     }
│ 
│     // Lấy bình luận theo ID
│     public BinhLuan layBinhLuanById(Long binhLuanId) {
│         return binhLuanRepository.findById(binhLuanId)
│                 .orElseThrow(() -> new RuntimeException("Không tìm thấy bình luận"));
│     }
│ 
│     // Cập nhật bình luận
│     public void capNhatBinhLuan(BinhLuan binhLuan) {
│         binhLuanRepository.save(binhLuan);
│     }
│ 
│     // Lấy số lượng bình luận
│     public Long soLuongBinhLuan() {
│         return binhLuanRepository.count();
│     }
│ 
│     // Đếm tổng số lượt bình luận của một bài viết
│     public int demSoLuotBinhLuan(Long baiVietId) {
│         return this.binhLuanRepository.countByBaiVietId(baiVietId);
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── CustomUserDetailsService.java

--------------------------------------------------
│--- Nội dung file: CustomUserDetailsService.java ---
│ package com.example.xephangnguoidung.application.service;
│ 
│ import java.util.Collections;
│ 
│ import org.springframework.security.core.authority.SimpleGrantedAuthority;
│ import org.springframework.security.core.userdetails.User;
│ import org.springframework.security.core.userdetails.UserDetails;
│ import org.springframework.security.core.userdetails.UserDetailsService;
│ import org.springframework.security.core.userdetails.UsernameNotFoundException;
│ import org.springframework.stereotype.Service;
│ 
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ 
│ @Service
│ public class CustomUserDetailsService implements UserDetailsService {
│ 
│     private final NguoiDungService nguoiDungService;
│ 
│     public CustomUserDetailsService(NguoiDungService nguoiDungService) {
│         this.nguoiDungService = nguoiDungService;
│     }
│ 
│     @Override
│     public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
│         NguoiDung nguoiDung = this.nguoiDungService.getNguoiDungByEmail(username);
│ 
│         if (nguoiDung == null) {
│             throw new UsernameNotFoundException("Người dùng không tồn tại");
│         }
│ 
│         // Lấy vai trò
│         String role = "ROLE_" + nguoiDung.getVaiTro().name();
│         System.out.println("Người dùng đăng nhập: " + username + " có quyền: " + role);
│ 
│         return new User(nguoiDung.getEmail(), nguoiDung.getMatKhau(),
│                 Collections.singletonList(new SimpleGrantedAuthority(role)));
│     }
│ 
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── DiemNguoiDungService.java

--------------------------------------------------
│--- Nội dung file: DiemNguoiDungService.java ---
│ package com.example.xephangnguoidung.application.service;
│ 
│ import com.example.xephangnguoidung.data.entity.DiemNguoiDung;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.enums.LoaiHoatDong;
│ import com.example.xephangnguoidung.data.repository.DiemNguoiDungRepository;
│ import com.example.xephangnguoidung.data.repository.NguoiDungRepository;
│ import org.springframework.stereotype.Service;
│ import org.springframework.transaction.annotation.Transactional;
│ 
│ import java.util.Optional;
│ 
│ @Service
│ @Transactional
│ public class DiemNguoiDungService {
│ 
│     private final DiemNguoiDungRepository diemNguoiDungRepository;
│     private final NguoiDungRepository nguoiDungRepository;
│     private final NguoiDungService nguoiDungService;
│ 
│     public DiemNguoiDungService(DiemNguoiDungRepository diemNguoiDungRepository,
│             NguoiDungRepository nguoiDungRepository, NguoiDungService nguoiDungService) {
│         this.diemNguoiDungRepository = diemNguoiDungRepository;
│         this.nguoiDungRepository = nguoiDungRepository;
│         this.nguoiDungService = nguoiDungService;
│     }
│ 
│     @Transactional
│     public void tinhDiem(Long nguoiDungId, LoaiHoatDong loaiHoatDong) {
│         tinhDiem(nguoiDungId, loaiHoatDong, 1);
│     }
│ 
│     @Transactional
│     public void tinhDiem(Long nguoiDungId, LoaiHoatDong loaiHoatDong, int heSo) {
│         NguoiDung nguoiDung = nguoiDungRepository.findById(nguoiDungId)
│                 .orElseThrow(() -> new RuntimeException("Không tìm thấy người dùng với ID: " + nguoiDungId));
│ 
│         Optional<DiemNguoiDung> diemOptional = diemNguoiDungRepository.findByNguoiDungAndLoaiHoatDong(nguoiDung,
│                 loaiHoatDong);
│         DiemNguoiDung diemNguoiDung = diemOptional.orElse(new DiemNguoiDung());
│ 
│         if (diemNguoiDung.getId() == null) {
│             diemNguoiDung.setNguoiDung(nguoiDung);
│             diemNguoiDung.setLoaiHoatDong(loaiHoatDong);
│             diemNguoiDung.setDiem(0);
│         }
│ 
│         diemNguoiDung.setDiem(diemNguoiDung.getDiem() + loaiHoatDong.getDiem() * heSo);
│         diemNguoiDungRepository.save(diemNguoiDung);
│ 
│         // Cập nhật tổng điểm và cấp bậc sau khi thay đổi điểm
│         nguoiDungService.capNhatCapBac(nguoiDungId);
│     }
│ 
│     // Tổng số điểm của một người dùng
│     public Integer tongSoDiem(Long nguoiDungId) {
│         return this.diemNguoiDungRepository.tinhTongDiemByNguoiDungId(nguoiDungId);
│     }
│ 
│     // Tổng số điểm của tất cả người dùng
│     public Integer tongSoDiemTatCaNguoiDung() {
│         return this.diemNguoiDungRepository.tinhTongDiemTatCaNguoiDung();
│     }
│ 
│     // Thêm phương thức tính tổng điểm với kiểm tra null
│     public int tinhTongDiemByNguoiDungId(Long nguoiDungId) {
│         return Optional.ofNullable(diemNguoiDungRepository.tinhTongDiemByNguoiDungId(nguoiDungId)).orElse(0);
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── LuotThichService.java

--------------------------------------------------
│--- Nội dung file: LuotThichService.java ---
│ package com.example.xephangnguoidung.application.service;
│ 
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.entity.LuotThich;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.enums.LoaiHoatDong;
│ import com.example.xephangnguoidung.data.repository.BaiVietRepository;
│ import com.example.xephangnguoidung.data.repository.LuotThichRepository;
│ import com.example.xephangnguoidung.data.repository.NguoiDungRepository;
│ import jakarta.transaction.Transactional;
│ import org.springframework.stereotype.Service;
│ 
│ import java.util.List;
│ import java.util.stream.Collectors;
│ 
│ @Service
│ @Transactional
│ public class LuotThichService {
│ 
│         private final LuotThichRepository luotThichRepository;
│         private final BaiVietRepository baiVietRepository;
│         private final NguoiDungRepository nguoiDungRepository;
│         private final DiemNguoiDungService diemNguoiDungService;
│ 
│         public LuotThichService(LuotThichRepository luotThichRepository, BaiVietRepository baiVietRepository,
│                         NguoiDungRepository nguoiDungRepository, DiemNguoiDungService diemNguoiDungService) {
│                 this.luotThichRepository = luotThichRepository;
│                 this.baiVietRepository = baiVietRepository;
│                 this.nguoiDungRepository = nguoiDungRepository;
│                 this.diemNguoiDungService = diemNguoiDungService;
│         }
│ 
│         // Thêm lượt thích
│         public void themLuotThich(Long nguoiDungId, Long baiVietId) {
│                 NguoiDung nguoiDung = nguoiDungRepository.findById(nguoiDungId)
│                                 .orElseThrow(() -> new RuntimeException("Không tìm thấy người dùng"));
│ 
│                 BaiViet baiViet = baiVietRepository.findById(baiVietId)
│                                 .orElseThrow(() -> new RuntimeException("Không tìm thấy bài viết"));
│ 
│                 // Kiểm tra nếu người dùng đã thích bài viết
│                 if (luotThichRepository.existsByNguoiDungAndBaiViet(nguoiDung, baiViet)) {
│                         throw new RuntimeException("Người dùng đã thích bài viết này");
│                 }
│ 
│                 LuotThich luotThich = new LuotThich();
│                 luotThich.setNguoiDung(nguoiDung);
│                 luotThich.setBaiViet(baiViet);
│                 luotThichRepository.save(luotThich);
│ 
│                 // Cập nhật số lượt thích trong bảng BaiViet
│                 baiViet.setSoLuotThich(baiViet.getSoLuotThich() + 1);
│                 baiVietRepository.save(baiViet);
│ 
│                 // Gọi phương thức tinhDiem để cập nhật điểm và cấp bậc
│                 diemNguoiDungService.tinhDiem(nguoiDungId, LoaiHoatDong.DUOC_THICH);
│         }
│ 
│         // Xóa lượt thích
│         public void xoaLuotThich(Long nguoiDungId, Long baiVietId) {
│                 NguoiDung nguoiDung = nguoiDungRepository.findById(nguoiDungId)
│                                 .orElseThrow(() -> new RuntimeException("Không tìm thấy người dùng"));
│ 
│                 BaiViet baiViet = baiVietRepository.findById(baiVietId)
│                                 .orElseThrow(() -> new RuntimeException("Không tìm thấy bài viết"));
│ 
│                 LuotThich luotThich = luotThichRepository.findByNguoiDungAndBaiViet(nguoiDung, baiViet)
│                                 .orElseThrow(() -> new RuntimeException("Lượt thích không tồn tại"));
│ 
│                 luotThichRepository.delete(luotThich);
│ 
│                 // Cập nhật số lượt thích trong bảng BaiViet
│                 baiViet.setSoLuotThich(Math.max(0, baiViet.getSoLuotThich() - 1));
│                 baiVietRepository.save(baiViet);
│ 
│                 // Trừ điểm khi xóa lượt thích
│                 diemNguoiDungService.tinhDiem(nguoiDungId, LoaiHoatDong.DUOC_THICH, -1);
│         }
│ 
│         // Đếm tổng số lượt thích của một bài viết
│         public int demSoLuotThich(Long baiVietId) {
│                 return luotThichRepository.countByBaiVietId(baiVietId);
│         }
│ 
│         // Lấy danh sách ID người dùng thích bài viết
│         public List<Long> layDanhSachNguoiThich(Long baiVietId) {
│                 BaiViet baiViet = baiVietRepository.findById(baiVietId)
│                                 .orElseThrow(() -> new RuntimeException("Không tìm thấy bài viết"));
│ 
│                 return luotThichRepository.findByBaiViet(baiViet)
│                                 .stream()
│                                 .map(luotThich -> luotThich.getNguoiDung().getId())
│                                 .collect(Collectors.toList());
│         }
│ 
│         // Đếm tổng số lượt thích trên hệ thống
│         public int demTongLuotThich() {
│                 return luotThichRepository.countAllBy();
│         }
│ 
│         // Lấy tất cả lượt thích
│         public List<LuotThich> layTatCaLuotThich() {
│                 return luotThichRepository.findAll();
│         }
│ 
│         // Tìm kiếm lượt thích
│         public List<LuotThich> timKiemLuotThich(String keyword) {
│                 return luotThichRepository
│                                 .findByNguoiDung_TenDangNhapContainingIgnoreCaseOrBaiViet_TieuDeContainingIgnoreCase(
│                                                 keyword, keyword);
│         }
│ 
│         public boolean kiemTraDaThich(Long nguoiDungId, Long baiVietId) {
│                 return luotThichRepository.existsByNguoiDungIdAndBaiVietId(nguoiDungId, baiVietId);
│         }
│ 
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── NguoiDungService.java

--------------------------------------------------
│--- Nội dung file: NguoiDungService.java ---
│ package com.example.xephangnguoidung.application.service;
│ 
│ import java.util.List;
│ 
│ import jakarta.transaction.Transactional;
│ 
│ import org.springframework.stereotype.Service;
│ 
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.entity.dto.RegisterDTO;
│ import com.example.xephangnguoidung.data.enums.CapBac;
│ import com.example.xephangnguoidung.data.enums.VaiTro;
│ import com.example.xephangnguoidung.data.repository.DiemNguoiDungRepository;
│ import com.example.xephangnguoidung.data.repository.NguoiDungRepository;
│ 
│ @Service
│ public class NguoiDungService {
│     private final NguoiDungRepository nguoiDungRepository;
│     private final DiemNguoiDungRepository diemNguoiDungRepository;
│ 
│     public NguoiDungService(NguoiDungRepository nguoiDungRepository, DiemNguoiDungRepository diemNguoiDungRepository) {
│         this.nguoiDungRepository = nguoiDungRepository;
│         this.diemNguoiDungRepository = diemNguoiDungRepository;
│     }
│ 
│     // ✅ 1️⃣ Tạo người dùng
│     public NguoiDung luuNguoiDung(NguoiDung nguoiDung) {
│         if (nguoiDungRepository.existsByTenDangNhap(nguoiDung.getTenDangNhap())) {
│             throw new IllegalArgumentException("Tên đăng nhập đã tồn tại!");
│         }
│         if (nguoiDungRepository.existsByEmail(nguoiDung.getEmail())) {
│             throw new IllegalArgumentException("Email đã tồn tại!");
│         }
│         return nguoiDungRepository.save(nguoiDung);
│     }
│ 
│     // ✅ 2️⃣ Lấy người dùng theo ID
│     public NguoiDung layNguoiDungById(Long id) {
│         return nguoiDungRepository.findById(id)
│                 .orElseThrow(() -> new RuntimeException("Không tìm thấy người dùng với ID: " + id));
│     }
│ 
│     // ✅ 3️⃣ Lấy người dùng theo tên đăng nhập
│     public NguoiDung layNguoiDungBangTenDangNhap(String tenDangNhap) {
│         NguoiDung nguoiDung = nguoiDungRepository.findByTenDangNhap(tenDangNhap);
│         if (nguoiDung == null) {
│             throw new RuntimeException("Không tìm thấy người dùng có tên đăng nhập: " + tenDangNhap);
│         }
│         return nguoiDung;
│     }
│ 
│     // ✅ 4️⃣ Lấy tất cả người dùng
│     public List<NguoiDung> layTatCaNguoiDung() {
│         return nguoiDungRepository.findAll();
│     }
│ 
│     // ✅ 5️⃣ Sửa thông tin người dùng
│     @Transactional
│     public NguoiDung suaNguoiDung(Long id, NguoiDung nguoiDung) {
│         NguoiDung nguoiDungHienTai = layNguoiDungById(id);
│ 
│         if (!nguoiDung.getEmail().equals(nguoiDungHienTai.getEmail()) &&
│                 nguoiDungRepository.findByEmail(nguoiDung.getEmail()) != null) {
│             throw new RuntimeException("Email đã tồn tại!");
│         }
│         nguoiDungHienTai.setTenDangNhap(nguoiDung.getTenDangNhap());
│         nguoiDungHienTai.setMatKhau(nguoiDung.getMatKhau());
│         nguoiDungHienTai.setEmail(nguoiDung.getEmail());
│         nguoiDungHienTai.setVaiTro(nguoiDung.getVaiTro());
│         nguoiDungHienTai.setSoLanDangNhap(nguoiDung.getSoLanDangNhap());
│ 
│         // ✅ Cập nhật cấp bậc nếu cần
│         capNhatCapBac(nguoiDungHienTai.getId());
│ 
│         return nguoiDungRepository.save(nguoiDungHienTai);
│     }
│ 
│     // ✅ 6️⃣ Xóa người dùng
│     @Transactional
│     public void xoaNguoiDungBangId(Long id) {
│         if (!nguoiDungRepository.existsById(id)) {
│             throw new RuntimeException("Không tìm thấy người dùng để xóa!");
│         }
│         nguoiDungRepository.deleteById(id);
│     }
│ 
│     // ✅ 8️⃣ Tìm kiếm người dùng
│     public List<NguoiDung> timKiemNguoiDung(String keyword) {
│         return nguoiDungRepository.findByTenDangNhapContainingIgnoreCaseOrEmailContainingIgnoreCase(keyword, keyword);
│     }
│ 
│     // ✅ 9️⃣ Cập nhật cấp bậc
│     @Transactional
│     public void capNhatCapBac(Long nguoiDungId) {
│         // 1. Lấy người dùng theo ID
│         NguoiDung nguoiDung = layNguoiDungById(nguoiDungId);
│ 
│         // 2. Tính tổng điểm
│         Integer tongDiem = diemNguoiDungRepository.tinhTongDiemByNguoiDungId(nguoiDungId);
│         if (tongDiem == null) {
│             tongDiem = 0;
│         }
│ 
│         // 3. Xác định cấp bậc
│         CapBac capBacMoi;
│         if (tongDiem >= 10000) {
│             capBacMoi = CapBac.VIP;
│         } else if (tongDiem >= 5000) {
│             capBacMoi = CapBac.KIM_CUONG;
│         } else if (tongDiem >= 2000) {
│             capBacMoi = CapBac.BACH_KIM;
│         } else if (tongDiem >= 1000) {
│             capBacMoi = CapBac.VANG;
│         } else if (tongDiem >= 500) {
│             capBacMoi = CapBac.BAC;
│         } else {
│             capBacMoi = CapBac.DONG;
│         }
│ 
│         // 4. Cập nhật cấp bậc nếu thay đổi
│         if (!capBacMoi.equals(nguoiDung.getCapBac())) {
│             nguoiDung.setCapBac(capBacMoi);
│             nguoiDungRepository.save(nguoiDung);
│         }
│     }
│ 
│     // số lượng người dùng
│     public long soLuongNguoiDung() {
│         return this.nguoiDungRepository.count();
│     }
│ 
│     // xử lý đăng nhập lấy bằng email
│     public NguoiDung getNguoiDungByEmail(String email) {
│         return this.nguoiDungRepository.findByEmail(email);
│     }
│ 
│     // xử lý đăng ký
│     public NguoiDung registerDTOtoNguoiDung(RegisterDTO registerDTO) {
│         NguoiDung nguoiDung = new NguoiDung();
│         nguoiDung.setTenDangNhap(registerDTO.getTenDangNhap());
│         nguoiDung.setEmail(registerDTO.getEmail());
│         nguoiDung.setMatKhau(registerDTO.getMatKhau());
│         nguoiDung.setVaiTro(registerDTO.getVaiTro());
│         return nguoiDung;
│     }
│     // lấy id người dùng hiện tại
│ 
│     public Long layIdNguoiDungHienTai(String email) {
│         NguoiDung nguoiDung = nguoiDungRepository.findByEmail(email);
│         if (nguoiDung == null) {
│             throw new RuntimeException("Không tìm thấy người dùng");
│         }
│         return nguoiDung.getId();
│     }
│ 
│      public boolean isAdminExists() {
│         return nguoiDungRepository.existsByVaiTro(VaiTro.ADMIN);
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   ├── data/
│   │   │   │   │   │   │   ├── entity/
│   │   │   │   │   │   │   │   ├── BaiViet.java

--------------------------------------------------
│--- Nội dung file: BaiViet.java ---
│ package com.example.xephangnguoidung.data.entity;
│ 
│ import jakarta.persistence.*;
│ import lombok.AllArgsConstructor;
│ import lombok.Data;
│ import lombok.NoArgsConstructor;
│ 
│ import java.time.LocalDateTime;
│ import java.util.List;
│ 
│ @AllArgsConstructor
│ @NoArgsConstructor
│ @Data
│ @Entity
│ public class BaiViet {
│     @Id
│     @GeneratedValue(strategy = GenerationType.IDENTITY)
│     private Long id;
│ 
│     @Column(nullable = false ,columnDefinition = "NVARCHAR(255)")
│     private String tieuDe;
│ 
│     @Column(nullable = false, columnDefinition = "NVARCHAR(MAX)")
│     private String noiDung;
│ 
│     @ManyToOne
│     @JoinColumn(name = "nguoi_dung_id", nullable = false)
│     private NguoiDung nguoiDung;
│ 
│     @Column(updatable = false)
│     private LocalDateTime ngayDang;
│ 
│     private int soLuotThich = 0;
│     private int soLuotBinhLuan = 0;
│ 
│     @OneToMany(mappedBy = "baiViet", cascade = CascadeType.ALL, orphanRemoval = true)
│     private List<BinhLuan> binhLuans;
│ 
│     @OneToMany(mappedBy = "baiViet", cascade = CascadeType.ALL, orphanRemoval = true)
│     private List<LuotThich> luotThichs;
│ 
│     @PrePersist
│     protected void onCreate() {
│         this.ngayDang = LocalDateTime.now();
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── BinhLuan.java

--------------------------------------------------
│--- Nội dung file: BinhLuan.java ---
│ package com.example.xephangnguoidung.data.entity;
│ 
│ import jakarta.persistence.*;
│ import lombok.AllArgsConstructor;
│ import lombok.Data;
│ import lombok.NoArgsConstructor;
│ import java.time.LocalDateTime;
│ 
│ @AllArgsConstructor
│ @NoArgsConstructor
│ @Data
│ @Entity
│ public class BinhLuan {
│     @Id
│     @GeneratedValue(strategy = GenerationType.IDENTITY)
│     private Long id;
│ 
│     @Column(nullable = false, columnDefinition = "NVARCHAR(MAX)")
│     private String noiDung;
│ 
│     @ManyToOne
│     @JoinColumn(name = "nguoi_dung_id", nullable = false)
│     private NguoiDung nguoiDung;
│ 
│     @ManyToOne
│     @JoinColumn(name = "bai_viet_id", nullable = false)
│     private BaiViet baiViet;
│ 
│     @Column(updatable = false) // Không cho phép sửa ngày đăng
│     private LocalDateTime ngayDang;
│ 
│     // Tự động gán thời gian khi tạo bình luận mới
│     @PrePersist
│     protected void prePersist() {
│         this.ngayDang = LocalDateTime.now();
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── DiemNguoiDung.java

--------------------------------------------------
│--- Nội dung file: DiemNguoiDung.java ---
│ package com.example.xephangnguoidung.data.entity;
│ 
│ import jakarta.persistence.*;
│ import lombok.AllArgsConstructor;
│ import lombok.Data;
│ import lombok.NoArgsConstructor;
│ 
│ import java.time.LocalDateTime;
│ 
│ import com.example.xephangnguoidung.data.enums.LoaiHoatDong;
│ 
│ @AllArgsConstructor
│ @NoArgsConstructor
│ @Data
│ @Entity
│ @Table(name = "diem_nguoi_dung")
│ public class DiemNguoiDung {
│     @Id
│     @GeneratedValue(strategy = GenerationType.IDENTITY)
│     private Long id;
│ 
│     @ManyToOne
│     @JoinColumn(name = "nguoi_dung_id", nullable = false)
│     private NguoiDung nguoiDung;
│ 
│     @Enumerated(EnumType.STRING)
│     @Column(nullable = false)
│     private LoaiHoatDong loaiHoatDong = LoaiHoatDong.DANG_NHAP;
│ 
│     @Column(nullable = true)
│     private int diem = 0;
│ 
│     @Column(updatable = false)
│     private LocalDateTime ngayTao;
│ 
│     @PrePersist
│     protected void onCreate() {
│         this.ngayTao = LocalDateTime.now();
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── LuotThich.java

--------------------------------------------------
│--- Nội dung file: LuotThich.java ---
│ package com.example.xephangnguoidung.data.entity;
│ 
│ import jakarta.persistence.*;
│ import lombok.AllArgsConstructor;
│ import lombok.Data;
│ import lombok.NoArgsConstructor;
│ import java.time.LocalDateTime;
│ 
│ @AllArgsConstructor
│ @NoArgsConstructor
│ @Data
│ @Entity
│ public class LuotThich {
│     @Id
│     @GeneratedValue(strategy = GenerationType.IDENTITY)
│     private Long id;
│ 
│     @ManyToOne // N-1
│     @JoinColumn(name = "nguoi_dung_id", nullable = false) // khóa ngoại NguoiDung, không được null
│     private NguoiDung nguoiDung;
│ 
│     @ManyToOne // N-1
│     @JoinColumn(name = "bai_viet_id", nullable = false) // khóa ngoại BaiViet, không được null
│     private BaiViet baiViet;
│ 
│     @Column(updatable = false) // ngăn sửa đổi sau khi tạo
│     private LocalDateTime thoiGian;
│ 
│     @PrePersist
│     protected void onCreate() {
│         this.thoiGian = LocalDateTime.now(); // Tự động đặt ngày khi tạo mới
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── NguoiDung.java

--------------------------------------------------
│--- Nội dung file: NguoiDung.java ---
│ package com.example.xephangnguoidung.data.entity;
│ 
│ import jakarta.persistence.*;
│ import lombok.AllArgsConstructor;
│ import lombok.Data;
│ import lombok.NoArgsConstructor;
│ 
│ import java.time.LocalDateTime;
│ 
│ import com.example.xephangnguoidung.data.enums.CapBac;
│ import com.example.xephangnguoidung.data.enums.VaiTro;
│ 
│ @Entity
│ @Table(name = "nguoi_dung")
│ @AllArgsConstructor
│ @NoArgsConstructor
│ @Data
│ public class NguoiDung {
│     @Id
│     @GeneratedValue(strategy = GenerationType.IDENTITY)
│     private Long id;
│ 
│     @Column(nullable = false, unique = true, columnDefinition = "NVARCHAR(255)")
│     private String tenDangNhap;
│ 
│     @Column(nullable = false)
│     private String matKhau;
│ 
│     @Column(nullable = false, unique = true)
│     private String email;
│ 
│     @Enumerated(EnumType.STRING)
│     private CapBac capBac = CapBac.DONG;
│ 
│     @Enumerated(EnumType.STRING)
│     private VaiTro vaiTro = VaiTro.USER;
│ 
│     private int soLanDangNhap = 0;
│ 
│     @Column(updatable = false) // Ngăn không cho cập nhật lại ngày tạo
│     private LocalDateTime ngayTao;
│ 
│     @PrePersist
│     protected void onCreate() {
│         this.ngayTao = LocalDateTime.now();
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── dto/
│   │   │   │   │   │   │   │   │   ├── RegisterDTO.java

--------------------------------------------------
│--- Nội dung file: RegisterDTO.java ---
│ package com.example.xephangnguoidung.data.entity.dto;
│ 
│ import com.example.xephangnguoidung.data.enums.VaiTro;
│ 
│ public class RegisterDTO {
│     private String tenDangNhap;
│     private String email;
│     private String matKhau;
│     private String xacNhanMatKhau;
│     private VaiTro vaiTro;
│ 
│     public RegisterDTO() {
│     }
│ 
│     public RegisterDTO(String tenDangNhap, String email, String matKhau, String xacNhanMatKhau, VaiTro vaiTro) {
│         this.tenDangNhap = tenDangNhap;
│         this.email = email;
│         this.matKhau = matKhau;
│         this.xacNhanMatKhau = xacNhanMatKhau;
│         this.vaiTro = vaiTro;
│     }
│ 
│     public String getTenDangNhap() {
│         return tenDangNhap;
│     }
│ 
│     public void setTenDangNhap(String tenDangNhap) {
│         this.tenDangNhap = tenDangNhap;
│     }
│ 
│     public String getEmail() {
│         return email;
│     }
│ 
│     public void setEmail(String email) {
│         this.email = email;
│     }
│ 
│     public String getMatKhau() {
│         return matKhau;
│     }
│ 
│     public void setMatKhau(String matKhau) {
│         this.matKhau = matKhau;
│     }
│ 
│     public String getXacNhanMatKhau() {
│         return xacNhanMatKhau;
│     }
│ 
│     public void setXacNhanMatKhau(String xacNhanMatKhau) {
│         this.xacNhanMatKhau = xacNhanMatKhau;
│     }
│ 
│     public VaiTro getVaiTro() {
│         return vaiTro;
│     }
│ 
│     public void setVaiTro(VaiTro vaiTro) {
│         this.vaiTro = vaiTro;
│     }
│ 
│     @Override
│     public String toString() {
│         return "RegisterDTO [tenDangNhap=" + tenDangNhap + ", email=" + email + ", matKhau=" + matKhau
│                 + ", xacNhanMatKhau=" + xacNhanMatKhau + ", vaiTro=" + vaiTro + "]";
│     }
│ 
│ }
--------------------------------------------------

│   │   │   │   │   │   │   ├── enums/
│   │   │   │   │   │   │   │   ├── CapBac.java

--------------------------------------------------
│--- Nội dung file: CapBac.java ---
│ package com.example.xephangnguoidung.data.enums;
│ 
│ public enum CapBac {
│     DONG, BAC, VANG, KIM_CUONG, BACH_KIM, VIP
│ }
--------------------------------------------------

│   │   │   │   │   │   │   │   ├── LoaiHoatDong.java

--------------------------------------------------
│--- Nội dung file: LoaiHoatDong.java ---
│ package com.example.xephangnguoidung.data.enums;
│ 
│ public enum LoaiHoatDong {
│     DANG_NHAP(2000), // Đăng nhập
│     VIET_BAI(3000), // Viết bài
│     BINH_LUAN(1000), // Bình luận
│     DUOC_THICH(400); // Được thích
│ 
│     private final int diem;
│ 
│     private LoaiHoatDong(int diem) {
│         this.diem = diem;
│     }
│ 
│     public int getDiem() {
│         return diem;
│     }
│ 
│ }
--------------------------------------------------

│   │   │   │   │   │   │   │   ├── VaiTro.java

--------------------------------------------------
│--- Nội dung file: VaiTro.java ---
│ package com.example.xephangnguoidung.data.enums;
│ 
│ public enum VaiTro {
│     // ADMIN,USER
│     USER,ADMIN
│ }
--------------------------------------------------

│   │   │   │   │   │   │   ├── repository/
│   │   │   │   │   │   │   │   ├── BaiVietRepository.java

--------------------------------------------------
│--- Nội dung file: BaiVietRepository.java ---
│ package com.example.xephangnguoidung.data.repository;
│ 
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ 
│ import java.util.List;
│ import java.util.Optional;
│ 
│ import org.springframework.data.jpa.repository.JpaRepository;
│ 
│ public interface BaiVietRepository extends JpaRepository<BaiViet, Long> {
│     Optional<BaiViet> findByTieuDe(String tieuDe);
│     List<BaiViet> findByNguoiDungId(Long id);
│     List<BaiViet> findByTieuDeContainingIgnoreCase(String keyword);
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── BinhLuanRepository.java

--------------------------------------------------
│--- Nội dung file: BinhLuanRepository.java ---
│ package com.example.xephangnguoidung.data.repository;
│ 
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.entity.BinhLuan;
│ import org.springframework.data.jpa.repository.JpaRepository;
│ 
│ import java.util.List;
│ 
│ public interface BinhLuanRepository extends JpaRepository<BinhLuan, Long> {
│     List<BinhLuan> findByBaiViet(BaiViet baiViet);
│     List<BinhLuan> findByBaiVietId(Long baiVietId);
│     List<BinhLuan> findByNoiDungContainingIgnoreCase(String keyword);
│     
│     int countByBaiVietId(Long baiVietId);
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── DiemNguoiDungRepository.java

--------------------------------------------------
│--- Nội dung file: DiemNguoiDungRepository.java ---
│ package com.example.xephangnguoidung.data.repository;
│ 
│ import org.springframework.data.jpa.repository.JpaRepository;
│ import org.springframework.data.jpa.repository.Query;
│ import org.springframework.data.repository.query.Param;
│ 
│ import com.example.xephangnguoidung.data.entity.DiemNguoiDung;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.enums.LoaiHoatDong;
│ 
│ import java.util.Optional;
│ 
│ public interface DiemNguoiDungRepository extends JpaRepository<DiemNguoiDung, Long> {
│ 
│     Optional<DiemNguoiDung> findByNguoiDungAndLoaiHoatDong(NguoiDung nguoiDung, LoaiHoatDong loaiHoatDong);
│ 
│     @Query("SELECT SUM(d.diem) FROM DiemNguoiDung d WHERE d.nguoiDung.id = :nguoiDungId")
│     Integer tinhTongDiemByNguoiDungId(@Param("nguoiDungId") Long nguoiDungId);
│     
│     @Query("SELECT SUM(d.diem) FROM DiemNguoiDung d")
│     Integer tinhTongDiemTatCaNguoiDung();
│ }
--------------------------------------------------

│   │   │   │   │   │   │   │   ├── LuotThichRepository.java

--------------------------------------------------
│--- Nội dung file: LuotThichRepository.java ---
│ package com.example.xephangnguoidung.data.repository;
│ 
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.entity.LuotThich;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import org.springframework.data.jpa.repository.JpaRepository;
│ 
│ import java.util.List;
│ import java.util.Optional;
│ 
│ public interface LuotThichRepository extends JpaRepository<LuotThich, Long> {
│     boolean existsByNguoiDungAndBaiViet(NguoiDung nguoiDung, BaiViet baiViet);
│ 
│     Optional<LuotThich> findByNguoiDungAndBaiViet(NguoiDung nguoiDung, BaiViet baiViet);
│ 
│     List<LuotThich> findByBaiViet(BaiViet baiViet);
│ 
│     int countAllBy();
│ 
│     List<LuotThich> findByNguoiDung_TenDangNhapContainingIgnoreCaseOrBaiViet_TieuDeContainingIgnoreCase(
│             String tenDangNhap, String tieuDe);
│ 
│     boolean existsByNguoiDungIdAndBaiVietId(Long nguoiDungId, Long baiVietId);
│     int countByBaiVietId(Long baiVietId);
│ }
--------------------------------------------------

│   │   │   │   │   │   │   │   ├── NguoiDungRepository.java

--------------------------------------------------
│--- Nội dung file: NguoiDungRepository.java ---
│ package com.example.xephangnguoidung.data.repository;
│ 
│ import java.util.List;
│ 
│ import org.springframework.data.jpa.repository.JpaRepository;
│ import org.springframework.stereotype.Repository;
│ 
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.enums.VaiTro;
│ 
│ @Repository
│ public interface NguoiDungRepository extends JpaRepository<NguoiDung, Long> {
│     NguoiDung findByTenDangNhap(String tenDangNhap);
│ 
│     boolean existsByTenDangNhap(String tenDangNhap);
│ 
│     boolean existsByEmail(String email);
│ 
│     NguoiDung findByEmail(String email);
│ 
│     boolean existsByVaiTro(VaiTro vaiTro);
│ 
│     List<NguoiDung> findByTenDangNhapContainingIgnoreCaseOrEmailContainingIgnoreCase(String tenDangNhap, String email);
│ }--------------------------------------------------

│   │   │   │   │   │   ├── presentation/
│   │   │   │   │   │   │   ├── controller/
│   │   │   │   │   │   │   │   ├── CustomErrorController.java

--------------------------------------------------
│--- Nội dung file: CustomErrorController.java ---
│ package com.example.xephangnguoidung.presentation.controller;
│ 
│ import jakarta.servlet.RequestDispatcher;
│ import jakarta.servlet.http.HttpServletRequest;
│ import org.springframework.boot.web.servlet.error.ErrorController;
│ import org.springframework.http.HttpStatus;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.GetMapping;
│ 
│ import java.io.PrintWriter;
│ import java.io.StringWriter;
│ 
│ @Controller
│ public class CustomErrorController implements ErrorController {
│ 
│     @GetMapping("/error")
│     public String handleError(HttpServletRequest request, Model model) {
│         Object status = request.getAttribute(RequestDispatcher.ERROR_STATUS_CODE);
│         Object exception = request.getAttribute(RequestDispatcher.ERROR_EXCEPTION);
│ 
│         if (status != null) {
│             int statusCode = Integer.parseInt(status.toString());
│             model.addAttribute("statusCode", statusCode);
│ 
│             HttpStatus httpStatus = HttpStatus.resolve(statusCode);
│             model.addAttribute("errorMessage",
│                     httpStatus != null ? httpStatus.getReasonPhrase() : "Lỗi không xác định");
│         }
│ 
│         if (exception instanceof Exception) {
│             StringWriter sw = new StringWriter();
│             ((Exception) exception).printStackTrace(new PrintWriter(sw));
│             model.addAttribute("stackTrace", sw.toString());
│         } else {
│             model.addAttribute("stackTrace", "Không có thông tin lỗi chi tiết.");
│         }
│ 
│         return "error"; // Trả về file error.html
│     }
│ }
--------------------------------------------------

│   │   │   │   │   │   │   │   ├── admin/
│   │   │   │   │   │   │   │   │   ├── AdminController.java

--------------------------------------------------
│--- Nội dung file: AdminController.java ---
│ package com.example.xephangnguoidung.presentation.controller.admin;
│ 
│ import org.springframework.security.core.annotation.AuthenticationPrincipal;
│ import org.springframework.security.core.userdetails.UserDetails;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.GetMapping;
│ 
│ import com.example.xephangnguoidung.application.service.BaiVietService;
│ import com.example.xephangnguoidung.application.service.BinhLuanService;
│ import com.example.xephangnguoidung.application.service.DiemNguoiDungService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ 
│ @Controller
│ public class AdminController {
│     private final NguoiDungService nguoiDungService;
│     private final BaiVietService baiVietService;
│     private final BinhLuanService binhLuanService;
│     private final DiemNguoiDungService diemNguoiDungService;
│ 
│     public AdminController(NguoiDungService nguoiDungService, BaiVietService baiVietService,
│             BinhLuanService binhLuanService, DiemNguoiDungService diemNguoiDungService) {
│         this.nguoiDungService = nguoiDungService;
│         this.baiVietService = baiVietService;
│         this.binhLuanService = binhLuanService;
│         this.diemNguoiDungService = diemNguoiDungService;
│     }
│ 
│     @GetMapping("/admin")
│     public String trangChuAdmin(Model model, @AuthenticationPrincipal UserDetails userDetails) {
│         String username = userDetails.getUsername();
│         NguoiDung nguoiDung = this.nguoiDungService.getNguoiDungByEmail(username);
│         model.addAttribute("nguoiDung", nguoiDung);
│         // lấy số lượng người dùng
│         Long slNguoiDung = this.nguoiDungService.soLuongNguoiDung();
│         model.addAttribute("soLuongNguoiDung", slNguoiDung);
│ 
│         // lấy số lượng bài viết
│         Long slBaiViet = this.baiVietService.soLuongBaiViet();
│         model.addAttribute("soLuongBaiViet", slBaiViet);
│ 
│         // lấy số lượng bình luận
│         Long slBinhLuan = this.binhLuanService.soLuongBinhLuan();
│         model.addAttribute("soLuongBinhLuan", slBinhLuan);
│ 
│         // lấy tổng số điểm
│         Integer tongSoDiem = this.diemNguoiDungService.tongSoDiemTatCaNguoiDung();
│         model.addAttribute("tongSoDiem", tongSoDiem);
│ 
│         return "admin/trang_chu_admin";
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── QuanLyBaiVietController.java

--------------------------------------------------
│--- Nội dung file: QuanLyBaiVietController.java ---
│ package com.example.xephangnguoidung.presentation.controller.admin;
│ 
│ import java.time.format.DateTimeFormatter;
│ import java.util.List;
│ import org.slf4j.Logger;
│ import org.slf4j.LoggerFactory;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.GetMapping;
│ import org.springframework.web.bind.annotation.PathVariable;
│ import org.springframework.web.bind.annotation.PostMapping;
│ import org.springframework.web.bind.annotation.RequestMapping;
│ import org.springframework.web.bind.annotation.RequestParam;
│ 
│ import com.example.xephangnguoidung.application.service.BaiVietService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ 
│ @Controller
│ @RequestMapping("/admin/baiviet")
│ public class QuanLyBaiVietController {
│     private static final Logger logger = LoggerFactory.getLogger(QuanLyBaiVietController.class);
│     private final BaiVietService baiVietService;
│     private final NguoiDungService nguoiDungService;
│ 
│     public QuanLyBaiVietController(BaiVietService baiVietService, NguoiDungService nguoiDungService) {
│         this.baiVietService = baiVietService;
│         this.nguoiDungService = nguoiDungService;
│     }
│ 
│     @GetMapping
│     public String hienThiDanhSachBaiViet(Model model) {
│         List<BaiViet> danhSachBaiViet = baiVietService.layTatCaBaiViet();
│         DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
│         model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│         model.addAttribute("formatter", formatter);
│         model.addAttribute("baiViet", new BaiViet());
│         return "admin/quanly_baiviet";
│     }
│ 
│     @PostMapping("/tao")
│     public String taoBaiViet(@RequestParam Long nguoiDungId, BaiViet baiViet) {
│         try {
│             logger.info("Bắt đầu tạo bài viết với ID người dùng: " + nguoiDungId);
│ 
│             // Lấy thông tin người dùng từ ID
│             NguoiDung nguoiDung = nguoiDungService.layNguoiDungById(nguoiDungId);
│             if (nguoiDung == null) {
│                 logger.error("Không tìm thấy người dùng với ID: " + nguoiDungId);
│                 throw new RuntimeException("Không tìm thấy người dùng!");
│             }
│ 
│             // Gán người dùng vào bài viết
│             baiViet.setNguoiDung(nguoiDung);
│             logger.info("Đã gán người dùng vào bài viết");
│ 
│             // Lưu bài viết vào database
│             baiVietService.luuBaiViet(baiViet);
│             logger.info("Đã lưu bài viết vào database");
│ 
│             return "redirect:/admin/baiviet"; // Corrected redirect URL
│         } catch (Exception e) {
│             logger.error("Lỗi khi tạo bài viết", e);
│             return "redirect:/error";
│         }
│     }
│ 
│     @GetMapping("/sua/{id}")
│     public String hienThiFormSua(@PathVariable Long id, Model model) {
│         BaiViet baiViet = baiVietService.layBaiVietById(id);
│         model.addAttribute("baiViet", baiViet);
│         return "admin/sua_baiviet";
│     }
│ 
│     @PostMapping("/sua/{id}")
│     public String suaBaiViet(@PathVariable Long id, BaiViet baiViet) {
│         BaiViet baiVietHienTai = baiVietService.layBaiVietById(id);
│         baiVietHienTai.setTieuDe(baiViet.getTieuDe());
│         baiVietHienTai.setNoiDung(baiViet.getNoiDung());
│         baiVietService.luuBaiViet(baiVietHienTai);
│         return "redirect:/admin/baiviet";
│     }
│ 
│     @PostMapping("/xoa/{id}")
│     public String xoaBaiViet(@PathVariable Long id) {
│         baiVietService.xoaBaiVietById(id);
│         return "redirect:/admin/baiviet";
│     }
│ 
│     @GetMapping("/timkiem")
│     public String timKiemBaiViet(@RequestParam("keyword") String keyword, Model model) {
│         List<BaiViet> danhSachBaiViet = baiVietService.timKiemBaiViet(keyword);
│         DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
│         model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│         model.addAttribute("formatter", formatter);
│         model.addAttribute("baiViet", new BaiViet());
│         return "admin/quanly_baiviet";
│     }
│ 
│     @GetMapping("/chitiet/{id}")
│     public String hienThiChiTietBaiViet(@PathVariable Long id, Model model) {
│         BaiViet baiViet = baiVietService.layBaiVietById(id);
│         model.addAttribute("baiViet", baiViet);
│         return "admin/chitiet_baiviet";
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── QuanLyBinhLuanController.java

--------------------------------------------------
│--- Nội dung file: QuanLyBinhLuanController.java ---
│ package com.example.xephangnguoidung.presentation.controller.admin;
│ 
│ import com.example.xephangnguoidung.application.service.BinhLuanService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.application.service.BaiVietService;
│ import com.example.xephangnguoidung.data.entity.BinhLuan;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import org.springframework.http.ResponseEntity;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.*;
│ 
│ import java.util.List;
│ 
│ @Controller
│ @RequestMapping("/admin/binhluan")
│ public class QuanLyBinhLuanController {
│ 
│     private final BinhLuanService binhLuanService;
│     private final NguoiDungService nguoiDungService;
│     private final BaiVietService baiVietService;
│ 
│     public QuanLyBinhLuanController(BinhLuanService binhLuanService, NguoiDungService nguoiDungService,
│             BaiVietService baiVietService) {
│         this.binhLuanService = binhLuanService;
│         this.nguoiDungService = nguoiDungService;
│         this.baiVietService = baiVietService;
│     }
│ 
│     // Thêm bình luận
│     @PostMapping("/tao")
│     public String themBinhLuan(@RequestParam("noiDung") String noiDung,
│             @RequestParam("nguoiDungId") Long nguoiDungId,
│             @RequestParam("baiVietId") Long baiVietId) {
│         BinhLuan binhLuan = new BinhLuan();
│         binhLuan.setNoiDung(noiDung);
│ 
│         NguoiDung nguoiDung = nguoiDungService.layNguoiDungById(nguoiDungId);
│         binhLuan.setNguoiDung(nguoiDung);
│ 
│         BaiViet baiViet = baiVietService.timBaiVietTheoId(baiVietId);
│         binhLuan.setBaiViet(baiViet);
│ 
│         binhLuanService.themBinhLuan(nguoiDung.getId(),binhLuan);
│         return "redirect:/admin/binhluan";
│     }
│ 
│     // Sửa bình luận
│     @PostMapping("/sua/id/{binhLuanId}")
│     public String suaBinhLuan(@PathVariable Long binhLuanId,
│             @RequestParam("noiDung") String noiDung) {
│         BinhLuan binhLuan = binhLuanService.layBinhLuanById(binhLuanId);
│         binhLuan.setNoiDung(noiDung);
│         binhLuanService.capNhatBinhLuan(binhLuan);
│         return "redirect:/admin/binhluan";
│     }
│ 
│     // Xóa bình luận
│     @PostMapping("/xoabinhluan/{binhLuanId}")
│     public String xoaBinhLuan(@PathVariable Long binhLuanId) {
│         binhLuanService.xoaBinhLuan(binhLuanId);
│         return "redirect:/admin/binhluan";
│     }
│ 
│     // Lấy danh sách bình luận của bài viết
│     @GetMapping("/baiviet/{baiVietId}")
│     public ResponseEntity<List<BinhLuan>> layDanhSachBinhLuan(@PathVariable Long baiVietId) {
│         List<BinhLuan> danhSachBinhLuan = binhLuanService.layDanhSachBinhLuan(baiVietId);
│         return ResponseEntity.ok(danhSachBinhLuan);
│     }
│ 
│     // Hiển thị danh sách bình luận
│     @GetMapping
│     public String hienThiDanhSachBinhLuan(Model model) {
│         List<BinhLuan> danhSachBinhLuan = binhLuanService.layTatCaBinhLuan();
│         model.addAttribute("danhSachBinhLuan", danhSachBinhLuan);
│         return "admin/quanly_binhluan";
│     }
│ 
│     // Tìm kiếm bình luận
│     @GetMapping("/timkiem")
│     public String timKiemBinhLuan(@RequestParam("keyword") String keyword, Model model) {
│         List<BinhLuan> danhSachBinhLuan = binhLuanService.timKiemBinhLuan(keyword);
│         model.addAttribute("danhSachBinhLuan", danhSachBinhLuan);
│         return "admin/quanly_binhluan";
│     }
│ 
│     // ---- THÊM ENDPOINT LẤY BÌNH LUẬN THEO ID CHO MODAL SỬA ----
│     @GetMapping("/laybinhluan/id/{binhLuanId}")
│     @ResponseBody
│     public BinhLuan layBinhLuanTheoId(@PathVariable Long binhLuanId) {
│         return binhLuanService.layBinhLuanById(binhLuanId);
│     }
│ }
--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── QuanLyDiemController.java

--------------------------------------------------
│--- Nội dung file: QuanLyDiemController.java ---
│ package com.example.xephangnguoidung.presentation.controller.admin;
│ 
│ import com.example.xephangnguoidung.application.service.DiemNguoiDungService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.enums.LoaiHoatDong;
│ import com.example.xephangnguoidung.data.enums.VaiTro;
│ 
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.*;
│ 
│ import java.util.Collections;
│ import java.util.List;
│ import java.util.stream.Collectors;
│ 
│ @Controller
│ @RequestMapping("/admin/diem")
│ public class QuanLyDiemController {
│ 
│     private final DiemNguoiDungService diemNguoiDungService;
│     private final NguoiDungService nguoiDungService;
│ 
│     public QuanLyDiemController(DiemNguoiDungService diemNguoiDungService, NguoiDungService nguoiDungService) {
│         this.diemNguoiDungService = diemNguoiDungService;
│         this.nguoiDungService = nguoiDungService;
│     }
│ 
│     @PostMapping("/tinhdiem")
│     public String tinhDiem(@RequestParam Long nguoiDungId, @RequestParam LoaiHoatDong loaiHoatDong,
│             @RequestParam(defaultValue = "1") int heSo) {
│         System.out.println(
│                 "✅ Gọi API /admin/diem/tinhdiem với nguoiDungId=" + nguoiDungId + " và loaiHoatDong=" + loaiHoatDong
│                         + " và heSo=" + heSo);
│ 
│         diemNguoiDungService.tinhDiem(nguoiDungId, loaiHoatDong, heSo);
│ 
│         // Lấy lại người dùng sau khi điểm đã cập nhật
│         NguoiDung nguoiDungCapNhat = nguoiDungService.layNguoiDungById(nguoiDungId);
│         nguoiDungService.capNhatCapBac(nguoiDungCapNhat.getId());
│ 
│         return "redirect:/admin";
│     }
│ 
│     @GetMapping("/bangxephang")
│     public String bangXepHangNguoiDung(Model model) {
│         List<NguoiDung> danhSachNguoiDung = nguoiDungService.layTatCaNguoiDung();
│         if (danhSachNguoiDung.isEmpty()) {
│             model.addAttribute("danhSachNguoiDung", Collections.emptyList());
│         } else {
│             // Lọc bỏ người dùng có vai trò là ADMIN
│             List<NguoiDung> danhSachNguoiDungUser = danhSachNguoiDung.stream()
│                     .filter(nguoiDung -> nguoiDung.getVaiTro() != VaiTro.ADMIN)
│                     .collect(Collectors.toList());
│ 
│             // Sắp xếp danh sách người dùng theo tổng điểm từ cao đến thấp
│             Collections.sort(danhSachNguoiDungUser, (nd1, nd2) -> {
│                 int tongDiem1 = diemNguoiDungService.tinhTongDiemByNguoiDungId(nd1.getId());
│                 int tongDiem2 = diemNguoiDungService.tinhTongDiemByNguoiDungId(nd2.getId());
│                 return Integer.compare(tongDiem2, tongDiem1);
│             });
│             model.addAttribute("danhSachNguoiDung", danhSachNguoiDungUser);
│         }
│         // Đảm bảo rằng diemNguoiDungService không bị null trong template
│         model.addAttribute("diemNguoiDungService", diemNguoiDungService);
│         return "admin/bang_xep_hang_nguoidung";
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── QuanLyLuotThichController.java

--------------------------------------------------
│--- Nội dung file: QuanLyLuotThichController.java ---
│ package com.example.xephangnguoidung.presentation.controller.admin;
│ 
│ import com.example.xephangnguoidung.application.service.LuotThichService;
│ import com.example.xephangnguoidung.data.entity.LuotThich;
│ import org.springframework.http.ResponseEntity;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.*;
│ 
│ import java.util.List;
│ 
│ @Controller
│ @RequestMapping("/admin/luotthich")
│ public class QuanLyLuotThichController {
│ 
│     private final LuotThichService luotThichService;
│ 
│     public QuanLyLuotThichController(LuotThichService luotThichService) {
│         this.luotThichService = luotThichService;
│     }
│ 
│     // Thêm lượt thích
│     @PostMapping("/tao")
│     public String themLuotThich(@RequestParam Long nguoiDungId, @RequestParam Long baiVietId, Model model) {
│         try {
│             luotThichService.themLuotThich(nguoiDungId, baiVietId);
│             model.addAttribute("message", "Đã thêm lượt thích thành công.");
│         } catch (RuntimeException e) {
│             model.addAttribute("error", e.getMessage());
│         }
│         return "redirect:/admin/luotthich";
│     }
│ 
│     // Xem tất cả lượt thích của một bài viết
│     @GetMapping("/baiviet/{baiVietId}")
│     public ResponseEntity<List<Long>> layDanhSachNguoiThich(@PathVariable Long baiVietId) {
│         List<Long> danhSachNguoiThich = luotThichService.layDanhSachNguoiThich(baiVietId);
│         return ResponseEntity.ok(danhSachNguoiThich);
│     }
│ 
│     // Xóa lượt thích của một người dùng với bài viết
│     @PostMapping("/xoa/{nguoiDungId}/{baiVietId}")
│     public String xoaLuotThich(@PathVariable Long nguoiDungId, @PathVariable Long baiVietId, Model model) {
│         try {
│             luotThichService.xoaLuotThich(nguoiDungId, baiVietId);
│             model.addAttribute("message", "Đã xóa lượt thích thành công.");
│         } catch (RuntimeException e) {
│             model.addAttribute("error", e.getMessage());
│         }
│         return "redirect:/admin/luotthich";
│     }
│ 
│     // Xem tổng số lượt thích trên toàn hệ thống
│     @GetMapping("/tongluotthich")
│     public ResponseEntity<Integer> tongLuotThich() {
│         int tongSoLuotThich = luotThichService.demTongLuotThich();
│         return ResponseEntity.ok(tongSoLuotThich);
│     }
│ 
│     // Hiển thị danh sách lượt thích
│     @GetMapping
│     public String hienThiDanhSachLuotThich(Model model) {
│         List<LuotThich> danhSachLuotThich = luotThichService.layTatCaLuotThich();
│         int tongSoLuotThich = luotThichService.demTongLuotThich();
│         model.addAttribute("danhSachLuotThich", danhSachLuotThich);
│         model.addAttribute("tongSoLuotThich", tongSoLuotThich);
│         return "admin/quanly_luotthich";
│     }
│ 
│     // Tìm kiếm lượt thích
│     @GetMapping("/timkiem")
│     public String timKiemLuotThich(@RequestParam("keyword") String keyword, Model model) {
│         List<LuotThich> danhSachLuotThich = luotThichService.timKiemLuotThich(keyword);
│         int tongSoLuotThich = luotThichService.demTongLuotThich();
│         model.addAttribute("danhSachLuotThich", danhSachLuotThich);
│         model.addAttribute("tongSoLuotThich", tongSoLuotThich);
│         return "admin/quanly_luotthich";
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── QuanLyNguoiDungController.java

--------------------------------------------------
│--- Nội dung file: QuanLyNguoiDungController.java ---
│ package com.example.xephangnguoidung.presentation.controller.admin;
│ 
│ import java.util.List;
│ 
│ import org.springframework.http.ResponseEntity;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.*;
│ import org.springframework.web.servlet.mvc.support.RedirectAttributes;
│ 
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.application.service.DiemNguoiDungService;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ 
│ @Controller
│ @RequestMapping("/admin/nguoidung")
│ public class QuanLyNguoiDungController {
│     private final NguoiDungService nguoiDungService;
│     private final DiemNguoiDungService diemNguoiDungService;
│ 
│     public QuanLyNguoiDungController(NguoiDungService nguoiDungService, DiemNguoiDungService diemNguoiDungService) {
│         this.nguoiDungService = nguoiDungService;
│         this.diemNguoiDungService = diemNguoiDungService;
│     }
│ 
│     // Trả về trang HTML hiển thị danh sách người dùng
│     @GetMapping("/laytatcanguoidung")
│     public String showAllUsers(Model model) {
│         List<NguoiDung> danhSachNguoiDung = nguoiDungService.layTatCaNguoiDung();
│         model.addAttribute("danhSachNguoiDung", danhSachNguoiDung);
│         model.addAttribute("nguoiDung", new NguoiDung()); // Đảm bảo không null
│         model.addAttribute("diemNguoiDungService", diemNguoiDungService);
│         return "admin/quanly_nguoidung";
│     }
│ 
│     // Thêm người dùng mới
│     @PostMapping("/tao")
│     public String addUser(@ModelAttribute NguoiDung nguoiDung) {
│         nguoiDungService.luuNguoiDung(nguoiDung);
│         return "redirect:/admin/nguoidung/laytatcanguoidung";
│     }
│ 
│     // Xóa người dùng theo ID
│     @PostMapping("/xoanguoidung/id/{id}")
│     public String deleteUser(@PathVariable Long id) {
│         nguoiDungService.xoaNguoiDungBangId(id);
│         return "redirect:/admin/nguoidung/laytatcanguoidung";
│     }
│ 
│     // Lấy người dùng theo ID
│     @GetMapping("/laynguoidung/id/{id}")
│     public ResponseEntity<NguoiDung> layNguoiDungById(@PathVariable Long id) {
│         return ResponseEntity.ok(nguoiDungService.layNguoiDungById(id));
│     }
│ 
│     // Sửa thông tin người dùng
│     @PostMapping("/sua/id/{id}")
│     public String suaNguoiDungById(@PathVariable Long id, @ModelAttribute NguoiDung request,
│             RedirectAttributes redirectAttributes) {
│         NguoiDung nguoiDung = nguoiDungService.layNguoiDungById(id);
│         nguoiDung.setTenDangNhap(request.getTenDangNhap());
│         nguoiDung.setMatKhau(request.getMatKhau());
│         nguoiDung.setVaiTro(request.getVaiTro());
│         if (request.getEmail() != null) {
│             nguoiDung.setEmail(request.getEmail());
│         }
│ 
│         // Lưu người dùng trước, sau đó cập nhật cấp bậc
│         nguoiDungService.suaNguoiDung(id, nguoiDung);
│         nguoiDungService.capNhatCapBac(nguoiDung.getId());
│ 
│         // Thêm thông báo thành công
│         redirectAttributes.addFlashAttribute("successMessage", "Cập nhật người dùng thành công!");
│ 
│         return "redirect:/admin/nguoidung/laytatcanguoidung";
│     }
│ 
│     // Tìm kiếm người dùng
│     @GetMapping("/timkiem")
│     public String timKiemNguoiDung(@RequestParam(value = "keyword", required = false) String keyword, Model model) {
│         if (keyword == null || keyword.trim().isEmpty()) {
│             return "redirect:/admin/nguoidung/laytatcanguoidung";
│         }
│         List<NguoiDung> danhSachNguoiDung = nguoiDungService.timKiemNguoiDung(keyword);
│         model.addAttribute("danhSachNguoiDung", danhSachNguoiDung);
│         model.addAttribute("keyword", keyword);
│         model.addAttribute("diemNguoiDungService", diemNguoiDungService); // Add this line to pass service to the model
│         return "admin/quanly_nguoidung";
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── auth/
│   │   │   │   │   │   │   │   │   ├── AuthController.java

--------------------------------------------------
│--- Nội dung file: AuthController.java ---
│ package com.example.xephangnguoidung.presentation.controller.auth;
│ 
│ import org.springframework.security.crypto.password.PasswordEncoder;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.GetMapping;
│ import org.springframework.web.bind.annotation.ModelAttribute;
│ import org.springframework.web.bind.annotation.PostMapping;
│ 
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.entity.dto.RegisterDTO;
│ import com.example.xephangnguoidung.data.enums.VaiTro;
│ 
│ @Controller
│ public class AuthController {
│ 
│     private NguoiDungService nguoiDungService;
│     private final PasswordEncoder passwordEncoder;
│ 
│     public AuthController(NguoiDungService nguoiDungService, PasswordEncoder passwordEncoder) {
│         this.nguoiDungService = nguoiDungService;
│         this.passwordEncoder = passwordEncoder;
│     }
│ 
│     // register(đăng ký)
│     @GetMapping("/register")
│     public String getRegister(Model model) {
│         model.addAttribute("registerNguoiDung", new RegisterDTO());
│         model.addAttribute("danhSachVaiTro", VaiTro.values());
│         return "auth/register"; // trả về trang đăng ký
│     }
│ 
│     @PostMapping("/register")
│     public String getRegister(@ModelAttribute("registerNguoiDung") RegisterDTO registerDTO, Model model) {
│         if (!registerDTO.getMatKhau().equals(registerDTO.getXacNhanMatKhau())) {
│             model.addAttribute("error", "Mật khẩu và xác nhận mật khẩu không khớp.");
│             model.addAttribute("registerNguoiDung", registerDTO);
│             model.addAttribute("danhSachVaiTro", VaiTro.values());
│             return "auth/register"; // Trả về trang đăng ký với thông báo lỗi
│         }
│ 
│         if (registerDTO.getVaiTro() == VaiTro.ADMIN && nguoiDungService.isAdminExists()) {
│             model.addAttribute("error", "Chỉ có thể đăng ký một tài khoản admin. Vui lòng đăng ký với vai trò USER.");
│             model.addAttribute("registerNguoiDung", registerDTO);
│             model.addAttribute("danhSachVaiTro", VaiTro.values());
│             return "auth/register"; // Trả về trang đăng ký với thông báo lỗi
│         }
│ 
│         NguoiDung nguoiDung = this.nguoiDungService.registerDTOtoNguoiDung(registerDTO); // xử dụng DTO
│ 
│         // hash code
│         String hashPassword = this.passwordEncoder.encode(nguoiDung.getMatKhau());
│         nguoiDung.setMatKhau(hashPassword);
│ 
│         nguoiDung.setVaiTro(nguoiDung.getVaiTro());
│         this.nguoiDungService.luuNguoiDung(nguoiDung);
│ 
│         System.out.println("Thong tin nguoi dung la:");
│         System.out.println(nguoiDung.toString());
│         System.out.println("Mat khau la: " + hashPassword);
│         return "redirect:/login"; // trả về trang đăng nhập nếu đăng ký thành công
│     }
│ 
│     // Đăng nhập
│     @GetMapping("/login")
│     public String getLogin(Model model) {
│         // model.addAttribute("loginError", false);
│         return "auth/login"; // Trả về trang đăng nhập
│     }
│ 
│     // Không cần phương thức postLogin vì Spring Security sẽ xử lý đăng nhập
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   ├── user/
│   │   │   │   │   │   │   │   │   ├── BaiVietController.java

--------------------------------------------------
│--- Nội dung file: BaiVietController.java ---
│ package com.example.xephangnguoidung.presentation.controller.user;
│ 
│ import java.time.format.DateTimeFormatter;
│ import java.util.List;
│ 
│ import org.springframework.security.core.annotation.AuthenticationPrincipal;
│ import org.springframework.security.core.userdetails.UserDetails;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.GetMapping;
│ import org.springframework.web.bind.annotation.ModelAttribute;
│ import org.springframework.web.bind.annotation.PathVariable;
│ import org.springframework.web.bind.annotation.PostMapping;
│ import org.springframework.web.bind.annotation.RequestMapping;
│ import org.springframework.web.bind.annotation.RequestParam;
│ 
│ import com.example.xephangnguoidung.application.service.BaiVietService;
│ import com.example.xephangnguoidung.application.service.BinhLuanService;
│ import com.example.xephangnguoidung.application.service.LuotThichService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ 
│ @Controller
│ @RequestMapping("/user/baiviet")
│ public class BaiVietController {
│ 
│     private final NguoiDungService nguoiDungService;
│     private final BaiVietService baiVietService;
│     private final LuotThichService luotThichService;
│     private final BinhLuanService binhLuanService;
│ 
│     public BaiVietController(NguoiDungService nguoiDungService, BaiVietService baiVietService,
│             LuotThichService luotThichService, BinhLuanService binhLuanService) {
│         this.nguoiDungService = nguoiDungService;
│         this.baiVietService = baiVietService;
│         this.luotThichService = luotThichService;
│         this.binhLuanService = binhLuanService;
│ 
│     }
│ 
│     @GetMapping("/tao")
│     public String hienThiFormTaoBaiViet(Model model) {
│         model.addAttribute("baiViet", new BaiViet());
│         return "user/tao_baiviet";
│     }
│     
│     @PostMapping("/tao")
│     public String taoBaiViet(@AuthenticationPrincipal UserDetails userDetails, @ModelAttribute BaiViet baiViet) {
│         try {
│             String username = userDetails.getUsername();
│             NguoiDung nguoiDung = nguoiDungService.getNguoiDungByEmail(username);
│             baiViet.setNguoiDung(nguoiDung);
│             baiVietService.luuBaiViet(baiViet);
│             return "redirect:/user/baiviet/tatcabaiviethientai";
│         } catch (Exception e) {
│             e.printStackTrace();
│             return "error";
│         }
│     }
│ 
│     // sửa
│     @GetMapping("/sua/{id}")
│     public String hienThiFormSua(@PathVariable Long id, Model model) {
│         BaiViet baiViet = baiVietService.layBaiVietById(id);
│         model.addAttribute("baiViet", baiViet);
│         return "user/sua_baiviet";
│     }
│ 
│     @PostMapping("/sua/{id}")
│     public String suaBaiViet(@PathVariable Long id, BaiViet baiViet) {
│         BaiViet baiVietHienTai = baiVietService.layBaiVietById(id);
│         baiVietHienTai.setTieuDe(baiViet.getTieuDe());
│         baiVietHienTai.setNoiDung(baiViet.getNoiDung());
│         baiVietService.luuBaiViet(baiVietHienTai);
│         return "redirect:/user/baiviet/tatca";
│     }
│ 
│     @PostMapping("/xoa/{id}")
│     public String xoaBaiViet(@PathVariable Long id) {
│         baiVietService.xoaBaiVietById(id);
│         return "redirect:/user/baiviet/tatca";
│     }
│ 
│     @GetMapping("/chitiet/{id}")
│     public String hienThiChiTietBaiViet(@PathVariable Long id, Model model) {
│         BaiViet baiViet1 = baiVietService.layBaiVietById(id);
│         List<BaiViet> danhSachBaiViet = this.baiVietService.layTatCaBaiViet();
│         for (BaiViet baiViet : danhSachBaiViet) {
│             int soLuotThich = this.luotThichService.demSoLuotThich(baiViet.getId());
│             int soLuotBinhLuan = this.binhLuanService.demSoLuotBinhLuan(baiViet.getId());
│ 
│             baiViet.setSoLuotThich(soLuotThich);
│             baiViet.setSoLuotBinhLuan(soLuotBinhLuan);
│         }
│         
│         model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│         model.addAttribute("baiViet", baiViet1);
│         return "user/chitiet_baiviet";
│     }
│ 
│     @GetMapping("/tatca")
│     public String hienThiTatCaBaiViet(Model model) {
│         List<BaiViet> danhSachBaiViet = this.baiVietService.layTatCaBaiViet();
│         for (BaiViet baiViet : danhSachBaiViet) {
│             int soLuotThich = this.luotThichService.demSoLuotThich(baiViet.getId());
│             int soLuotBinhLuan = this.binhLuanService.demSoLuotBinhLuan(baiViet.getId());
│ 
│             baiViet.setSoLuotThich(soLuotThich);
│             baiViet.setSoLuotBinhLuan(soLuotBinhLuan);
│         }
│ 
│         model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│         return "user/danhsach_tatca_baiviet";
│     }
│ 
│     @GetMapping("/timkiem")
│     public String timKiemBaiViet(@RequestParam("keyword") String keyword, Model model) {
│         List<BaiViet> danhSachBaiViet = baiVietService.timKiemBaiViet(keyword);
│         DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
│         model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│         model.addAttribute("formatter", formatter);
│         model.addAttribute("baiViet", new BaiViet());
│         return "user/trang_chu";
│     }
│ 
│     // lấy tất cả bài viết thuộc về USER hiện tại
│     @GetMapping("/tatcabaiviethientai")
│     public String hienThiTatCaBaiVietHienTai(@AuthenticationPrincipal UserDetails userDetails, Model model) {
│         String username = userDetails.getUsername();
│         NguoiDung nguoiDung = this.nguoiDungService.getNguoiDungByEmail(username);
│         if (nguoiDung != null) {
│             Long nguoiDungId = nguoiDung.getId();
│             List<BaiViet> danhSachBaiViet = baiVietService.layTatCaBaiVietById(nguoiDungId);
│             model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│             return "user/danhsach_chitiet_baiviet";
│         } else {
│             return "error";
│         }
│ 
│     }
│ }
--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── BinhLuanController.java

--------------------------------------------------
│--- Nội dung file: BinhLuanController.java ---
│ package com.example.xephangnguoidung.presentation.controller.user;
│ 
│ import com.example.xephangnguoidung.application.service.BinhLuanService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.application.service.BaiVietService;
│ import com.example.xephangnguoidung.data.entity.BinhLuan;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import org.springframework.security.core.Authentication;
│ import org.springframework.security.core.context.SecurityContextHolder;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.*;
│ 
│ @Controller
│ @RequestMapping("/user/binhluan")
│ public class BinhLuanController {
│ 
│     private final BinhLuanService binhLuanService;
│     private final NguoiDungService nguoiDungService;
│     private final BaiVietService baiVietService;
│ 
│     public BinhLuanController(BinhLuanService binhLuanService, NguoiDungService nguoiDungService,
│             BaiVietService baiVietService) {
│         this.binhLuanService = binhLuanService;
│         this.nguoiDungService = nguoiDungService;
│         this.baiVietService = baiVietService;
│     }
│ 
│     // Thêm bình luận
│     @PostMapping("/tao")
│     public String themBinhLuan(@RequestParam("noiDung") String noiDung,
│             @RequestParam("baiVietId") Long baiVietId) {
│         Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
│         String tenDangNhap = authentication.getName();
│         NguoiDung nguoiDung = nguoiDungService.getNguoiDungByEmail(tenDangNhap); // tên đăng nhập mình dùng email
│ 
│         BinhLuan binhLuan = new BinhLuan();
│         binhLuan.setNoiDung(noiDung);
│         binhLuan.setNguoiDung(nguoiDung);
│ 
│         BaiViet baiViet = baiVietService.timBaiVietTheoId(baiVietId);
│         binhLuan.setBaiViet(baiViet);
│ 
│         binhLuanService.themBinhLuan(nguoiDung.getId(), binhLuan);
│         Long binhLuanId = binhLuan.getId(); // Lấy ID của bình luận mới tạo
│ 
│         // Chuyển hướng đến URL chứa ID của bình luận mới tạo
│         // return "redirect:/user/baiviet/tatca#binhluan-" + binhLuanId;
│         return "redirect:/user/baiviet/chitiet/" + baiVietId + "#binhluan-" + binhLuanId;
│     }
│ 
│     @GetMapping("/sua/{binhLuanId}")
│     public String hienThiFormSuaBinhLuan(@PathVariable Long binhLuanId, Model model) {
│         BinhLuan binhLuan = binhLuanService.layBinhLuanById(binhLuanId);
│         model.addAttribute("binhLuan", binhLuan);
│         return "user/sua_binhluan";
│     }
│ 
│     // Sửa bình luận
│     @PostMapping("/sua/{binhLuanId}")
│     public String suaBinhLuan(@PathVariable Long binhLuanId,
│             @RequestParam("noiDung") String noiDung) {
│         BinhLuan binhLuan = binhLuanService.layBinhLuanById(binhLuanId);
│         binhLuan.setNoiDung(noiDung);
│         binhLuanService.capNhatBinhLuan(binhLuan);
│         return "redirect:/user/baiviet/tatca";
│     }
│ 
│     // Xóa bình luận
│     @PostMapping("/xoa/{binhLuanId}")
│     public String xoaBinhLuan(@PathVariable Long binhLuanId) {
│         BinhLuan binhLuan = binhLuanService.layBinhLuanById(binhLuanId);
│         Long baiVietId = binhLuan.getBaiViet().getId();
│         binhLuanService.xoaBinhLuan(binhLuanId);
│         return "redirect:/user/baiviet/chitiet/" + baiVietId;
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── HoSoController.java

--------------------------------------------------
│--- Nội dung file: HoSoController.java ---
│ package com.example.xephangnguoidung.presentation.controller.user;
│ 
│ import com.example.xephangnguoidung.application.service.BaiVietService;
│ import com.example.xephangnguoidung.application.service.DiemNguoiDungService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ 
│ import java.util.List;
│ 
│ import org.springframework.security.core.annotation.AuthenticationPrincipal;
│ import org.springframework.security.core.userdetails.UserDetails;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.GetMapping;
│ import org.springframework.web.bind.annotation.ModelAttribute;
│ import org.springframework.web.bind.annotation.PathVariable;
│ import org.springframework.web.bind.annotation.PostMapping;
│ import org.springframework.web.bind.annotation.RequestMapping;
│ import org.springframework.web.bind.annotation.RequestParam;
│ import org.springframework.web.servlet.mvc.support.RedirectAttributes;
│ 
│ @Controller
│ @RequestMapping("/user")
│ public class HoSoController {
│     private final NguoiDungService nguoiDungService;
│     private final DiemNguoiDungService diemNguoiDungService;
│     private final BaiVietService baiVietService;
│ 
│     public HoSoController(NguoiDungService nguoiDungService, DiemNguoiDungService diemNguoiDungService,
│             BaiVietService baiVietService) {
│         this.nguoiDungService = nguoiDungService;
│         this.diemNguoiDungService = diemNguoiDungService;
│         this.baiVietService = baiVietService;
│     }
│ 
│     // @GetMapping("/hoso")
│     // public String getHoSo(@AuthenticationPrincipal UserDetails userDetails, Model
│     // model) {
│     // String username = userDetails.getUsername();
│     // NguoiDung nguoiDung = this.nguoiDungService.getNguoiDungByEmail(username);
│     // List<BaiViet> danhSachBaiViet = this.baiVietService.layTatCaBaiViet();
│     // model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│     // if (nguoiDung != null) {
│     // Long nguoiDungId = nguoiDung.getId();
│     // System.out.println("ID Nguoi Dung: " + nguoiDungId); // Kiểm tra ID trên
│     // console
│ 
│     // model.addAttribute("nguoiDung", nguoiDung);
│     // model.addAttribute("nguoiDungId", nguoiDungId); // Thêm ID vào model
│     // // model.addAttribute("user", nguoiDung);
│     // int tongDiem =
│     // diemNguoiDungService.tinhTongDiemByNguoiDungId(nguoiDung.getId());
│     // model.addAttribute("tongDiem", tongDiem);
│     // return "user/hoso_nguoidung";
│     // } else {
│     // return "error";
│     // }
│ 
│     // }
│ 
│     @GetMapping("/hoso")
│     public String getHoSo(@AuthenticationPrincipal UserDetails userDetails,
│             @RequestParam(value = "keyword", required = false) String keyword,
│             Model model) {
│         String username = userDetails.getUsername();
│         NguoiDung nguoiDung = this.nguoiDungService.getNguoiDungByEmail(username);
│         List<BaiViet> danhSachBaiViet;
│         List<NguoiDung> danhSachNguoiDung;
│ 
│         if (keyword != null && !keyword.isEmpty()) {
│             danhSachBaiViet = baiVietService.timKiemBaiViet(keyword);
│             danhSachNguoiDung = nguoiDungService.timKiemNguoiDung(keyword);
│         } else {
│             danhSachBaiViet = baiVietService.layTatCaBaiViet();
│             danhSachNguoiDung = nguoiDungService.layTatCaNguoiDung();
│         }
│ 
│         model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│         model.addAttribute("danhSachNguoiDung", danhSachNguoiDung);
│ 
│         if (nguoiDung != null) {
│             Long nguoiDungId = nguoiDung.getId();
│             System.out.println("ID Nguoi Dung: " + nguoiDungId); // Kiểm tra ID trên console
│ 
│             model.addAttribute("nguoiDung", nguoiDung);
│             model.addAttribute("nguoiDungId", nguoiDungId); // Thêm ID vào model
│             int tongDiem = diemNguoiDungService.tinhTongDiemByNguoiDungId(nguoiDung.getId());
│             model.addAttribute("tongDiem", tongDiem);
│             return "user/hoso_nguoidung";
│         } else {
│             return "error";
│         }
│     }
│ 
│     @GetMapping("/thongtincanhan")
│     public String userProfile(@AuthenticationPrincipal UserDetails userDetails, Model model) {
│         if (userDetails == null) {
│             return "redirect:/login"; // Chuyển hướng nếu chưa đăng nhập
│         }
│ 
│         NguoiDung nguoiDung = this.nguoiDungService.getNguoiDungByEmail(userDetails.getUsername());
│ 
│         if (nguoiDung == null) {
│             return "error"; // Trả về trang lỗi nếu không tìm thấy người dùng
│         }
│ 
│         // In log kiểm tra
│         System.out.println("NguoiDung: " + nguoiDung);
│ 
│         model.addAttribute("user", nguoiDung);
│         return "user/thongtin_canhan";
│     }
│ 
│     // Sửa thông tin người dùng
│     @PostMapping("/sua/{id}")
│     public String suaNguoiDungById(@PathVariable Long id, @ModelAttribute NguoiDung request,
│             RedirectAttributes redirectAttributes) {
│         NguoiDung nguoiDung = nguoiDungService.layNguoiDungById(id);
│         nguoiDung.setTenDangNhap(request.getTenDangNhap());
│         // nguoiDung.setMatKhau(request.getMatKhau()); // không cho đổi mật khẩu vì
│         // không băm
│         nguoiDung.setVaiTro(request.getVaiTro());
│         if (request.getEmail() != null) {
│             nguoiDung.setEmail(request.getEmail()); // không cho đổi email vì dùng email đăng nhập
│         }
│ 
│         // Lưu người dùng trước, sau đó cập nhật cấp bậc
│         nguoiDungService.suaNguoiDung(id, nguoiDung);
│         nguoiDungService.capNhatCapBac(nguoiDung.getId());
│ 
│         // Thêm thông báo thành công
│         redirectAttributes.addFlashAttribute("successMessage", "Cập nhật người dùng thành công!");
│ 
│         return "redirect:/user/hoso";
│     }
│ 
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── LuotThichController.java

--------------------------------------------------
│--- Nội dung file: LuotThichController.java ---
│ package com.example.xephangnguoidung.presentation.controller.user;
│ 
│ import com.example.xephangnguoidung.application.service.LuotThichService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ 
│ import org.springframework.security.core.Authentication;
│ import org.springframework.security.core.context.SecurityContextHolder;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.web.bind.annotation.GetMapping;
│ import org.springframework.web.bind.annotation.PathVariable;
│ import org.springframework.web.bind.annotation.RequestMapping;
│ import org.springframework.web.servlet.mvc.support.RedirectAttributes;
│ import org.springframework.web.servlet.view.RedirectView;
│ 
│ @Controller
│ @RequestMapping("/user/luotthich")
│ public class LuotThichController {
│ 
│     private final LuotThichService luotThichService;
│     private final NguoiDungService nguoiDungService;
│ 
│     public LuotThichController(LuotThichService luotThichService, NguoiDungService nguoiDungService) {
│         this.luotThichService = luotThichService;
│         this.nguoiDungService = nguoiDungService;
│     }
│ 
│     // @GetMapping("/{baiVietId}")
│     // public RedirectView toggleLike(@PathVariable Long baiVietId,
│     // RedirectAttributes redirectAttributes) {
│     // Authentication authentication =
│     // SecurityContextHolder.getContext().getAuthentication();
│     // if (authentication == null || !authentication.isAuthenticated()) {
│     // redirectAttributes.addFlashAttribute("error", "Bạn cần đăng nhập để thực hiện
│     // thao tác này.");
│     // return new RedirectView("/login");
│     // }
│ 
│     // Long nguoiDungId =
│     // nguoiDungService.layIdNguoiDungHienTai(authentication.getName());
│     // boolean daLike = luotThichService.kiemTraDaThich(nguoiDungId, baiVietId);
│ 
│     // if (daLike) {
│     // luotThichService.xoaLuotThich(nguoiDungId, baiVietId);
│     // } else {
│     // luotThichService.themLuotThich(nguoiDungId, baiVietId);
│     // }
│ 
│     // // Lấy lại số lượt thích sau khi cập nhật
│     // int soLuotThich = luotThichService.demSoLuotThich(baiVietId);
│     // redirectAttributes.addFlashAttribute("soLuotThich", soLuotThich);
│     // return new RedirectView("/user/baiviet/chitiet/{id}"); // load lại trang
│     // }
│     @GetMapping("/{baiVietId}")
│     public RedirectView toggleLike(@PathVariable Long baiVietId, RedirectAttributes redirectAttributes) {
│         Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
│         if (authentication == null || !authentication.isAuthenticated()) {
│             redirectAttributes.addFlashAttribute("error", "Bạn cần đăng nhập để thực hiện thao tác này.");
│             return new RedirectView("/login");
│         }
│ 
│         Long nguoiDungId = nguoiDungService.layIdNguoiDungHienTai(authentication.getName());
│         boolean daLike = luotThichService.kiemTraDaThich(nguoiDungId, baiVietId);
│ 
│         if (daLike) {
│             luotThichService.xoaLuotThich(nguoiDungId, baiVietId);
│         } else {
│             luotThichService.themLuotThich(nguoiDungId, baiVietId);
│         }
│ 
│         // Lấy lại số lượt thích sau khi cập nhật
│         int soLuotThich = luotThichService.demSoLuotThich(baiVietId);
│         redirectAttributes.addFlashAttribute("soLuotThich", soLuotThich);
│         return new RedirectView("/user/baiviet/chitiet/" + baiVietId); // load lại trang
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── TrangChuController.java

--------------------------------------------------
│--- Nội dung file: TrangChuController.java ---
│ package com.example.xephangnguoidung.presentation.controller.user;
│ 
│ import java.time.format.DateTimeFormatter;
│ import java.util.Collections;
│ import java.util.List;
│ import java.util.stream.Collectors;
│ 
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.GetMapping;
│ import org.springframework.web.bind.annotation.RequestParam;
│ 
│ import com.example.xephangnguoidung.application.service.BaiVietService;
│ import com.example.xephangnguoidung.application.service.DiemNguoiDungService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.data.entity.BaiViet;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.enums.VaiTro;
│ 
│ @Controller
│ public class TrangChuController {
│     private final NguoiDungService nguoiDungService;
│     private final DiemNguoiDungService diemNguoiDungService;
│     private final BaiVietService baiVietService;
│ 
│     public TrangChuController(NguoiDungService nguoiDungService, DiemNguoiDungService diemNguoiDungService,
│             BaiVietService baiVietService) {
│         this.nguoiDungService = nguoiDungService;
│         this.diemNguoiDungService = diemNguoiDungService;
│         this.baiVietService = baiVietService;
│     }
│ 
│     @GetMapping("/")
│     public String bangXepHangNguoiDung(@RequestParam(value = "keyword", required = false) String keyword, Model model) {
│         List<NguoiDung> danhSachNguoiDung;
│         List<BaiViet> danhSachBaiViet;
│ 
│         if (keyword != null && !keyword.isEmpty()) {
│             danhSachBaiViet = baiVietService.timKiemBaiViet(keyword);
│             danhSachNguoiDung = nguoiDungService.timKiemNguoiDung(keyword);
│         } else {
│             danhSachBaiViet = baiVietService.layTatCaBaiViet();
│             danhSachNguoiDung = nguoiDungService.layTatCaNguoiDung();
│         }
│ 
│         if (danhSachNguoiDung.isEmpty()) {
│             model.addAttribute("danhSachNguoiDung", Collections.emptyList());
│         } else {
│             // Lọc bỏ người dùng có vai trò là ADMIN
│             List<NguoiDung> danhSachNguoiDungUser = danhSachNguoiDung.stream()
│                     .filter(nguoiDung -> nguoiDung.getVaiTro() != VaiTro.ADMIN)
│                     .collect(Collectors.toList());
│ 
│             // Sắp xếp danh sách người dùng theo tổng điểm từ cao đến thấp
│             Collections.sort(danhSachNguoiDungUser, (nd1, nd2) -> {
│                 int tongDiem1 = diemNguoiDungService.tinhTongDiemByNguoiDungId(nd1.getId());
│                 int tongDiem2 = diemNguoiDungService.tinhTongDiemByNguoiDungId(nd2.getId());
│                 return Integer.compare(tongDiem2, tongDiem1);
│             });
│             model.addAttribute("danhSachNguoiDung", danhSachNguoiDungUser);
│         }
│ 
│         DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
│         model.addAttribute("danhSachBaiViet", danhSachBaiViet);
│         model.addAttribute("formatter", formatter);
│         model.addAttribute("baiViet", new BaiViet());
│         // Đảm bảo rằng diemNguoiDungService không bị null trong template
│         model.addAttribute("diemNguoiDungService", diemNguoiDungService);
│         return "user/trang_chu";
│     }
│ }--------------------------------------------------

│   │   │   │   │   │   │   │   │   ├── XepHangController.java

--------------------------------------------------
│--- Nội dung file: XepHangController.java ---
│ package com.example.xephangnguoidung.presentation.controller.user;
│ 
│ import com.example.xephangnguoidung.application.service.DiemNguoiDungService;
│ import com.example.xephangnguoidung.application.service.NguoiDungService;
│ import com.example.xephangnguoidung.data.entity.NguoiDung;
│ import com.example.xephangnguoidung.data.enums.VaiTro;
│ import org.springframework.stereotype.Controller;
│ import org.springframework.ui.Model;
│ import org.springframework.web.bind.annotation.GetMapping;
│ import org.springframework.web.bind.annotation.RequestMapping;
│ 
│ import java.util.Collections;
│ import java.util.List;
│ import java.util.stream.Collectors;
│ 
│ @Controller
│ @RequestMapping("/user/diem")
│ public class XepHangController {
│ 
│     private final DiemNguoiDungService diemNguoiDungService;
│     private final NguoiDungService nguoiDungService;
│ 
│     public XepHangController(DiemNguoiDungService diemNguoiDungService, NguoiDungService nguoiDungService) {
│         this.diemNguoiDungService = diemNguoiDungService;
│         this.nguoiDungService = nguoiDungService;
│     }
│ 
│     @GetMapping("/bangxephang")
│     public String bangXepHangNguoiDung(Model model) {
│         List<NguoiDung> danhSachNguoiDung = nguoiDungService.layTatCaNguoiDung();
│         if (danhSachNguoiDung.isEmpty()) {
│             model.addAttribute("danhSachNguoiDung", Collections.emptyList());
│         } else {
│             // Lọc bỏ người dùng có vai trò là ADMIN
│             List<NguoiDung> danhSachNguoiDungUser = danhSachNguoiDung.stream()
│                     .filter(nguoiDung -> nguoiDung.getVaiTro() != VaiTro.ADMIN)
│                     .collect(Collectors.toList());
│ 
│             // Sắp xếp danh sách người dùng theo tổng điểm từ cao đến thấp
│             Collections.sort(danhSachNguoiDungUser, (nd1, nd2) -> {
│                 int tongDiem1 = diemNguoiDungService.tinhTongDiemByNguoiDungId(nd1.getId());
│                 int tongDiem2 = diemNguoiDungService.tinhTongDiemByNguoiDungId(nd2.getId());
│                 return Integer.compare(tongDiem2, tongDiem1);
│             });
│             model.addAttribute("danhSachNguoiDung", danhSachNguoiDungUser);
│         }
│         // Đảm bảo rằng diemNguoiDungService không bị null trong template
│         model.addAttribute("diemNguoiDungService", diemNguoiDungService);
│         return "user/bang_xep_hang_nguoidung";
│     }
│ }--------------------------------------------------

│   │   ├── resources/
│   │   │   ├── application.properties

--------------------------------------------------
│--- Nội dung file: application.properties ---
│ spring.thymeleaf.cache=false
│ spring.thymeleaf.prefix=classpath:/templates/view/
│ spring.thymeleaf.suffix=.html
│ 
│ # Database
│ spring.datasource.url=jdbc:sqlserver://VAN-PHUC:1433;databaseName=QuanLyXepHang;encrypt=true;trustServerCertificate=true
│ spring.datasource.username=sa
│ spring.datasource.password=1111
│ spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
│ spring.jpa.hibernate.ddl-auto=update
│ spring.jpa.show-sql=true
│ spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
│ # logging.level.org.springframework.security=TRACE
│ logging.level.org.springframework.security=DEBUG
│ 
│ # spring.security.user.name=admin
│ # spring.security.user.password=123456--------------------------------------------------

│   │   │   ├── static/
│   │   │   │   ├── css/
│   │   │   │   │   ├── admin/
│   │   │   │   │   ├── user/
│   │   │   │   │   │   ├── hoso_nguoidung.css

--------------------------------------------------
│--- Nội dung file: hoso_nguoidung.css ---
--------------------------------------------------

│   │   │   │   │   │   ├── trang_chu.css

--------------------------------------------------
│--- Nội dung file: trang_chu.css ---
--------------------------------------------------

│   │   │   │   ├── images/
│   │   │   │   │   ├── admin/
│   │   │   │   │   │   ├── admin.png
│   │   │   │   │   ├── avatar/
│   │   │   │   │   │   ├── ico.png

--------------------------------------------------
│--- Nội dung file: ico.png ---
│ (Không thể đọc file: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte)
│   │   │   │   │   │   ├── login.png
│   │   │   │   │   │   ├── register.png
│   │   │   │   │   ├── user/
│   │   │   │   │   │   ├── user.png
│   │   │   │   ├── js/
│   │   │   │   │   ├── admin/
│   │   │   │   │   │   ├── trang_chu.js

--------------------------------------------------
│--- Nội dung file: trang_chu.js ---
│ // alert("Chào mừng bạn đến với trang web dành cho ADMIN")--------------------------------------------------

│   │   │   │   │   ├── user/
│   │   │   │   │   │   ├── trang_chu.js

--------------------------------------------------
│--- Nội dung file: trang_chu.js ---
│ // alert("Chào mừng bạn đến với trang web của tôi!");
--------------------------------------------------

│   │   │   ├── templates/
│   │   │   │   ├── view/
│   │   │   │   │   ├── error.html

--------------------------------------------------
│--- Nội dung file: error.html ---
│ <!DOCTYPE html>
│ <html xmlns:th="http://www.thymeleaf.org">
│ <head>
│     <meta charset="UTF-8">
│     <title>Lỗi Hệ Thống</title>
│     <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css">
│ </head>
│ <body>
│     <div class="container mt-5">
│         <h1 class="text-danger text-center">Lỗi Hệ Thống</h1>
│         <h3 class="text-center">Mã lỗi: <span th:text="${statusCode}"></span></h3>
│         <p class="text-center text-muted" th:text="${errorMessage}"></p>
│         <pre class="bg-light p-3 border rounded" th:text="${stackTrace}" style="white-space: pre-wrap; word-wrap: break-word;"></pre>
│         <div class="text-center">
│             <a th:href="@{/}" class="btn btn-primary">Quay lại trang chủ</a>
│         </div>
│     </div>
│ </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   ├── admin/
│   │   │   │   │   │   ├── bang_xep_hang_nguoidung.html

--------------------------------------------------
│--- Nội dung file: bang_xep_hang_nguoidung.html ---
│ <!DOCTYPE html>  
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">  
│   <head>  
│     <meta charset="UTF-8" />  
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />  
│     <title>Bảng Xếp Hạng Người Dùng - VIP PRO</title>  
│     <!-- Bootstrap 5 CSS -->  
│     <link  
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"  
│       rel="stylesheet"  
│     />  
│     <!-- Font Awesome -->  
│     <link  
│       rel="stylesheet"  
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"  
│     />  
│     <link  
│       rel="shortcut icon"  
│       href="/images/admin/admin.png"  
│       type="image/x-icon"  
│     />  
│     <style>  
│       body {  
│         font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;  
│         background: linear-gradient(to right, #2e3b4e, #1d1f26);  
│         color: #e5e9f0;  
│       }  
│       /* Navbar */  
│       .navbar {  
│         background: linear-gradient(to right, #0d6efd, #0a58ca);  
│       }  
│       /* Sidebar cố định */  
│       .sidebar {  
│         position: fixed;  
│         top: 56px; /* chiều cao của navbar */  
│         left: 0;  
│         width: 250px;  
│         height: calc(100vh - 56px);  
│         background: #23272a;  
│         padding: 1rem;  
│         overflow-y: auto;  
│         box-shadow: 3px 0 5px rgba(0, 0, 0, 0.2);  
│       }  
│       .sidebar h5 {  
│         color: #f8f9fa;  
│         font-weight: bold;  
│         margin-bottom: 1.5rem;  
│       }  
│       .sidebar .nav-link {  
│         color: #b0b0b0;  
│         font-size: 1.1em;  
│         margin: 0.5rem 0;  
│         transition: background 0.3s, color 0.3s;  
│       }  
│       .sidebar .nav-link:hover {  
│         background-color: #0d6efd;  
│         color: #fff;  
│         border-radius: 4px;  
│       }  
│       /* Nội dung chính */  
│       .content {  
│         margin-left: 250px;  
│         padding: 2rem;  
│         padding-top: 80px;  
│       }  
│       /* Card */  
│       .card {  
│         border: none;  
│         border-radius: 10px;  
│         background: #3f4450;  
│         box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);  
│         transition: transform 0.3s;  
│       }  
│       .card:hover {  
│         transform: translateY(-3px);  
│       }  
│       .card .card-header {  
│         background: linear-gradient(to right, #673ab7, #ffd54f);  
│         color: #fff;  
│         font-weight: bold;  
│         border-top-left-radius: 10px;  
│         border-top-right-radius: 10px;  
│       }  
│       .card .card-body {  
│         padding: 1.5rem;  
│       }  
│       th, td {  
│         color: #e5e9f0;  
│       }  
│       th {  
│         background-color: #22262d;  
│       }  
│       /* Responsive */  
│       @media (max-width: 768px) {  
│         .content {  
│           margin-left: 0;  
│         }  
│         .sidebar {  
│           display: none;  
│         }  
│       }  
│     </style>  
│   </head>  
│   <body>  
│     <!-- Navbar cố định ở trên cùng -->  
│     <nav class="navbar navbar-expand-lg navbar-dark fixed-top shadow-sm">  
│       <div class="container-fluid">  
│         <a class="navbar-brand" th:href="@{/admin}">  
│           <img src="/images/admin/admin.png" alt="Admin" width="40" height="40" />  
│           Bảng Điều Khiển VIP PRO  
│         </a>  
│         <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Chuyển đổi">  
│           <span class="navbar-toggler-icon"></span>  
│         </button>  
│         <div class="collapse navbar-collapse justify-content-end" id="navbarContent">  
│           <ul class="navbar-nav">  
│             <li class="nav-item">  
│               <a class="nav-link active" th:href="@{/admin}">Trang Chủ</a>  
│             </li>  
│             <li class="nav-item">  
│               <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}">QL người dùng</a>  
│             </li>  
│             <li class="nav-item">  
│               <a class="nav-link" th:href="@{/admin/diem/bangxephang}">QL BXH người dùng</a>  
│             </li>  
│             <li class="nav-item">  
│               <a class="nav-link" th:href="@{/admin/baiviet}">QL Bài viết</a>  
│             </li>  
│             <li class="nav-item">  
│               <a class="nav-link" th:href="@{/admin/binhluan}">QL Bình luận</a>  
│             </li>  
│             <li class="nav-item">  
│               <a class="nav-link" th:href="@{/admin/luotthich}">QL Lượt thích</a>  
│             </li>  
│             <li class="nav-item">  
│               <a class="nav-link" href="javascript:void(0);" onclick="document.getElementById('logoutForm').submit();">Đăng Xuất</a>  
│             </li>  
│             <form id="logoutForm" th:action="@{/logout}" method="post" style="display: none"></form>  
│           </ul>  
│         </div>  
│       </div>  
│     </nav>  
│ 
│     <!-- Sidebar bên trái -->  
│     <div class="sidebar">  
│       <h5>Menu Quản Trị VIP PRO</h5>  
│       <ul class="nav flex-column">  
│         <li class="nav-item">  
│           <a class="nav-link" th:href="@{/admin}">  
│             <i class="fas fa-home me-2"></i>Trang Chủ  
│           </a>  
│         </li>  
│         <li class="nav-item">  
│           <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}">  
│             <i class="fas fa-users me-2"></i>QL người dùng  
│           </a>  
│         </li>  
│         <li class="nav-item">  
│           <a class="nav-link" th:href="@{/admin/diem/bangxephang}">  
│             <i class="fas fa-chart-line me-2"></i>QL BXH người dùng  
│           </a>  
│         </li>  
│         <li class="nav-item">  
│           <a class="nav-link" th:href="@{/admin/baiviet}">  
│             <i class="fas fa-file-alt me-2"></i>QL Bài viết  
│           </a>  
│         </li>  
│         <li class="nav-item">  
│           <a class="nav-link" th:href="@{/admin/binhluan}">  
│             <i class="fas fa-comments me-2"></i>QL Bình luận  
│           </a>  
│         </li>  
│         <li class="nav-item">  
│           <a class="nav-link" th:href="@{/admin/luotthich}">  
│             <i class="fas fa-thumbs-up me-2"></i>QL Lượt thích  
│           </a>  
│         </li>  
│         <li class="nav-item">  
│           <a class="nav-link" href="javascript:void(0);" onclick="document.getElementById('logoutForm').submit();">  
│             <i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất  
│           </a>  
│         </li>  
│         <form id="logoutForm" th:action="@{/logout}" method="post" style="display: none"></form>  
│       </ul>  
│     </div>  
│ 
│     <!-- Nội dung chính -->  
│     <div class="content">  
│       <div class="container-fluid">  
│         <h1 class="mb-4">Bảng Xếp Hạng Người Dùng - VIP PRO</h1>  
│         <div class="card">  
│           <div class="card-header">  
│             Bảng Xếp Hạng Người Dùng  
│           </div>  
│           <div class="card-body">  
│             <table class="table table-striped">  
│               <thead>  
│                 <tr>  
│                   <th scope="col">Top</th>  
│                   <th scope="col">Avatar</th>  
│                   <th scope="col">Tên Đăng Nhập</th>  
│                   <th scope="col">Điểm</th>  
│                   <th scope="col">Cấp Bậc</th>  
│                 </tr>  
│               </thead>  
│               <tbody>  
│                 <tr th:each="nguoiDung, iterStat : ${danhSachNguoiDung}">  
│                   <th scope="row" th:text="${iterStat.count}">1</th>  
│                   <td>  
│                     <img  
│                       src="/images/admin/admin.png"  
│                       alt="Avatar"  
│                       class="img-thumbnail"  
│                       style="width: 50px; height: 50px; border-radius: 50%"  
│                     />  
│                   </td>  
│                   <td th:text="${nguoiDung.tenDangNhap}">Tên Đăng Nhập</td>  
│                   <td  
│                     th:text="${diemNguoiDungService.tinhTongDiemByNguoiDungId(nguoiDung.id)}"  
│                   >  
│                     Điểm  
│                   </td>  
│                   <td th:text="${nguoiDung.capBac}">Cấp Bậc</td>  
│                 </tr>  
│                 <tr th:if="${danhSachNguoiDung.isEmpty()}">  
│                   <td colspan="5" class="text-center">  
│                     Không có người dùng nào  
│                   </td>  
│                 </tr>  
│               </tbody>  
│             </table>  
│           </div>  
│         </div>  
│       </div>  
│     </div>  
│ 
│     <!-- Bootstrap JS và Popper -->  
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>  
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>  
│   </body>  
│ </html>  --------------------------------------------------

│   │   │   │   │   │   ├── chitiet_baiviet.html

--------------------------------------------------
│--- Nội dung file: chitiet_baiviet.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Chi Tiết Bài Viết</title>
│     <link
│       rel="shortcut icon"
│       href="/images/admin/admin.png"
│       type="image/x-icon"
│     />
│     <!-- Bootstrap 5 CSS -->
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <!-- Font Awesome -->
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <style>
│       body {
│         font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
│         background: linear-gradient(to right, #301c2e, #856b9e, #bebbc5);
│       }
│       /* Navbar */
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 8px;
│       }
│       /* Sidebar cố định */
│       .sidebar {
│         position: fixed;
│         top: 56px; /* Chiều cao của navbar */
│         left: 0;
│         width: 250px;
│         height: calc(100vh - 56px);
│         background-color: #343a40;
│         padding: 1rem;
│         overflow-y: auto;
│       }
│       .sidebar h5 {
│         color: #fff;
│         margin-bottom: 1.5rem;
│       }
│       .sidebar .nav-link {
│         color: #adb5bd;
│         font-size: 1.1em;
│         margin: 0.5rem 0;
│         transition: background 0.3s, color 0.3s;
│       }
│       .sidebar .nav-link:hover {
│         background-color: #495057;
│         color: #fff;
│         border-radius: 4px;
│       }
│       /* Nội dung chính */
│       .content {
│         margin-left: 250px;
│         padding: 2rem;
│         padding-top: 80px;
│       }
│       /* Card chi tiết bài viết */
│       .card {
│         border: none;
│         border-radius: 8px;
│         box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
│         transition: transform 0.3s;
│       }
│       .card:hover {
│         transform: translateY(-5px);
│       }
│       .card .card-header {
│         background-color: #343a40;
│         color: #fff;
│         font-size: 1.25rem;
│       }
│       @media (max-width: 768px) {
│         .content {
│           margin-left: 0;
│         }
│         .sidebar {
│           display: none;
│         }
│       }
│     </style>
│   </head>
│   <body>
│     <!-- Navbar cố định ở trên cùng -->
│     <nav
│       class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-sm"
│     >
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/admin}">
│           <img
│             src="/images/admin/admin.png"
│             alt="Admin"
│             width="40"
│             height="40"
│           />
│           Bảng Điều Khiển Quản Trị
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│           aria-controls="navbarContent"
│           aria-expanded="false"
│           aria-label="Chuyển đổi"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/admin}">Trang Chủ</a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 th:href="@{/admin/nguoidung/laytatcanguoidung}"
│                 >QL người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│                 >QL BXH người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/baiviet}">QL Bài viết</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/binhluan}">QL Bình luận</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/luotthich}"
│                 >QL Lượt thích</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 >Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <!-- Sidebar bên trái (giữ nguyên giao diện như mẫu trước) -->
│     <div class="sidebar">
│       <h5>Menu Quản Trị</h5>
│       <ul class="nav flex-column">
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin}"
│             ><i class="fas fa-home me-2"></i>Trang Chủ</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}"
│             ><i class="fas fa-users me-2"></i>QL người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│             ><i class="fas fa-chart-line me-2"></i>QL BXH người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/baiviet}"
│             ><i class="fas fa-file-alt me-2"></i>QL Bài viết</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/binhluan}"
│             ><i class="fas fa-comments me-2"></i>QL Bình luận</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/luotthich}"
│             ><i class="fas fa-thumbs-up me-2"></i>QL Lượt thích</a
│           >
│         </li>
│ 
│         <li class="nav-item">
│           <a
│             class="nav-link"
│             href="javascript:void(0);"
│             onclick="document.getElementById('logoutForm').submit();"
│             ><i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất</a
│           >
│         </li>
│ 
│         <form
│           id="logoutForm"
│           th:action="@{/logout}"
│           method="post"
│           style="display: none"
│         ></form>
│       </ul>
│     </div>
│ 
│     <!-- Nội dung chính -->
│     <div class="content">
│       <div class="container-fluid">
│         <div class="card">
│           <div class="card-header">Chi Tiết Bài Viết</div>
│           <div class="card-body">
│             <h2 th:text="${baiViet.tieuDe}">Tiêu Đề Bài Viết</h2>
│             <p>
│               <strong>Ngày Đăng:</strong>
│               <span
│                 th:text="${#temporals.format(baiViet.ngayDang, 'dd/MM/yyyy')}"
│                 >01/01/2025</span
│               >
│             </p>
│             <p>
│               <strong>Người Đăng:</strong>
│               <span th:text="${baiViet.nguoiDung.tenDangNhap}"
│                 >Tên Người Đăng</span
│               >
│             </p>
│             <hr />
│             <div th:utext="${baiViet.noiDung}">Nội dung bài viết...</div>
│             <div class="mt-4">
│               <a th:href="@{/admin/baiviet}" class="btn btn-primary">
│                 <i class="fas fa-arrow-left me-1"></i> Quay lại
│               </a>
│             </div>
│           </div>
│         </div>
│       </div>
│     </div>
│ 
│     <!-- Bootstrap JS và Popper -->
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── quanly_baiviet.html

--------------------------------------------------
│--- Nội dung file: quanly_baiviet.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Quản Lý Bài Viết</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/jodit/3.24.4/jodit.min.css"
│     />
│     <link rel="shortcut icon" href="/images/admin/admin.png" type="image/x-icon">
│     <script src="https://cdnjs.cloudflare.com/ajax/libs/jodit/3.24.4/jodit.min.js"></script>
│     <style>
│       body {
│         font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
│         background:linear-gradient(to right, #5399ab, #99beaa, #bebbc5);
│       }
│       /* Navbar */
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 8px;
│       }
│       /* Sidebar cố định */
│       .sidebar {
│         position: fixed;
│         top: 56px;
│         left: 0;
│         width: 250px;
│         height: calc(100vh - 56px);
│         background-color: #343a40;
│         padding: 1rem;
│         overflow-y: auto;
│       }
│       .sidebar h5 {
│         color: #fff;
│         margin-bottom: 1.5rem;
│       }
│       .sidebar .nav-link {
│         color: #adb5bd;
│         font-size: 1.1em;
│         margin: 0.5rem 0;
│         transition: background 0.3s, color 0.3s;
│       }
│       .sidebar .nav-link:hover,
│       .sidebar .nav-link.active {
│         background-color: #495057;
│         color: #fff;
│         border-radius: 4px;
│       }
│       /* Nội dung chính */
│       .content {
│         margin-left: 250px;
│         padding: 2rem;
│         padding-top: 80px;
│       }
│       @media (max-width: 768px) {
│         .content {
│           margin-left: 0;
│         }
│         .sidebar {
│           display: none;
│         }
│       }
│     </style>
│   </head>
│   <body>
│      <!-- Navbar cố định ở trên cùng -->
│     <nav
│       class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-sm"
│     >
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/admin}">
│           <img
│             src="/images/admin/admin.png"
│             alt="Admin"
│             width="40"
│             height="40"
│           />
│           Bảng Điều Khiển Quản Trị
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│           aria-controls="navbarContent"
│           aria-expanded="false"
│           aria-label="Chuyển đổi"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/admin}">Trang Chủ</a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 th:href="@{/admin/nguoidung/laytatcanguoidung}"
│                 >QL người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│                 >QL BXH người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/baiviet}">QL Bài viết</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/binhluan}">QL Bình luận</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/luotthich}"
│                 >QL Lượt thích</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 >Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <!-- Sidebar bên trái (giữ nguyên giao diện như mẫu trước) -->
│     <div class="sidebar">
│       <h5>Menu Quản Trị</h5>
│       <ul class="nav flex-column">
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin}"
│             ><i class="fas fa-home me-2"></i>Trang Chủ</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}"
│             ><i class="fas fa-users me-2"></i>QL người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│             ><i class="fas fa-chart-line me-2"></i>QL BXH người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/baiviet}"
│             ><i class="fas fa-file-alt me-2"></i>QL Bài viết</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/binhluan}"
│             ><i class="fas fa-comments me-2"></i>QL Bình luận</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/luotthich}"
│             ><i class="fas fa-thumbs-up me-2"></i>QL Lượt thích</a
│           >
│         </li>
│ 
│         <li class="nav-item">
│           <a
│             class="nav-link"
│             href="javascript:void(0);"
│             onclick="document.getElementById('logoutForm').submit();"
│             ><i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất</a
│           >
│         </li>
│ 
│         <form
│           id="logoutForm"
│           th:action="@{/logout}"
│           method="post"
│           style="display: none"
│         ></form>
│       </ul>
│     </div>
│ 
│     <div class="content">
│       <div class="container-fluid">
│         <h2>Quản Lý Bài Viết</h2>
│         <form th:action="@{/admin/baiviet/tao}" method="post">
│           <div class="mb-3">
│             <label for="nguoiDungId" class="form-label">ID Người Dùng</label>
│             <input
│               type="number"
│               class="form-control"
│               id="nguoiDungId"
│               name="nguoiDungId"
│               required
│             />
│           </div>
│           <div class="mb-3">
│             <label for="tieuDe" class="form-label">Tiêu Đề</label>
│             <input
│               type="text"
│               class="form-control"
│               id="tieuDe"
│               name="tieuDe"
│               required
│             />
│           </div>
│           <div class="mb-3">
│             <label for="noiDung" class="form-label">Nội Dung</label>
│             <textarea
│               class="form-control"
│               id="noiDung"
│               name="noiDung"
│               required
│             ></textarea>
│           </div>
│           <script>
│             const editor = new Jodit("#noiDung", {
│               height: 300,
│             });
│           </script>
│           <button type="submit" class="btn btn-primary">
│             <i class="fas fa-plus-circle"></i> Tạo Bài Viết
│           </button>
│         </form>
│ 
│         <h3 class="mt-5">Danh Sách Bài Viết</h3>
│         <form th:action="@{/admin/baiviet/timkiem}" method="get" class="mb-3">
│           <div class="input-group">
│             <input
│               type="text"
│               name="keyword"
│               class="form-control"
│               placeholder="Tìm kiếm bài viết..."
│             />
│             <button type="submit" class="btn btn-primary">Tìm kiếm</button>
│           </div>
│         </form>
│         <table class="table table-bordered">
│           <thead>
│             <tr>
│               <th>ID</th>
│               <th>Tiêu Đề</th>
│               <th>Ngày Đăng</th>
│               <th>Hành Động</th>
│             </tr>
│           </thead>
│           <tbody>
│             <tr th:each="baiViet : ${danhSachBaiViet}">
│               <td th:text="${baiViet.id}">1</td>
│               <td>
│                 <a
│                   th:href="@{/admin/baiviet/chitiet/{id}(id=${baiViet.id})}"
│                   th:text="${baiViet.tieuDe}"
│                   >Tiêu Đề</a
│                 >
│               </td>
│               <td th:text="${baiViet.ngayDang.format(formatter)}">
│                 01/01/2025
│               </td>
│               <td>
│                 <a
│                   th:href="@{/admin/baiviet/sua/{id}(id=${baiViet.id})}"
│                   class="btn btn-warning"
│                 >
│                   <i class="fas fa-edit"></i> Sửa
│                 </a>
│                 <form
│                   th:action="@{/admin/baiviet/xoa/{id}(id=${baiViet.id})}"
│                   method="post"
│                   style="display: inline"
│                 >
│                   <button type="submit" class="btn btn-danger">
│                     <i class="fas fa-trash"></i> Xóa
│                   </button>
│                 </form>
│               </td>
│             </tr>
│           </tbody>
│         </table>
│       </div>
│     </div>
│ 
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
│   </body>
│ </html>--------------------------------------------------

│   │   │   │   │   │   ├── quanly_binhluan.html

--------------------------------------------------
│--- Nội dung file: quanly_binhluan.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Quản Lý Bình Luận</title>
│     <!-- Bootstrap 5 CSS -->
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <!-- Font Awesome -->
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <!-- EmojiOneArea CSS (dành cho textarea) -->
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.1/emojionearea.min.css"
│     />
│     <link rel="shortcut icon" href="/images/admin/admin.png" type="image/x-icon">
│     <style>
│       body {
│         font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
│         background:linear-gradient(to top, #5399ab, #99beaa, #bebbc5);
│       }
│       /* Navbar */
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 8px;
│       }
│       /* Sidebar cố định */
│       .sidebar {
│         position: fixed;
│         top: 56px; /* chiều cao của navbar */
│         left: 0;
│         width: 250px;
│         height: calc(100vh - 56px);
│         background-color: #343a40;
│         padding: 1rem;
│         overflow-y: auto;
│       }
│       .sidebar h5 {
│         color: #fff;
│         margin-bottom: 1.5rem;
│       }
│       .sidebar .nav-link {
│         color: #adb5bd;
│         font-size: 1.1em;
│         margin: 0.5rem 0;
│         transition: background 0.3s, color 0.3s;
│       }
│       .sidebar .nav-link:hover,
│       .sidebar .nav-link.active {
│         background-color: #495057;
│         color: #fff;
│         border-radius: 4px;
│       }
│       /* Nội dung chính */
│       .content {
│         margin-left: 250px;
│         padding: 2rem;
│         padding-top: 80px;
│       }
│       /* Card thống kê nếu cần */
│       .card {
│         border: none;
│         border-radius: 8px;
│         box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
│         transition: transform 0.3s;
│       }
│       .card:hover {
│         transform: translateY(-5px);
│       }
│       .card .card-body {
│         padding: 1.5rem;
│       }
│       .card .card-title {
│         font-size: 1.25rem;
│         margin-bottom: 0.75rem;
│       }
│       .card-text {
│         font-size: 2rem;
│         font-weight: bold;
│       }
│       @media (max-width: 768px) {
│         .content {
│           margin-left: 0;
│         }
│         .sidebar {
│           display: none;
│         }
│       }
│     </style>
│   </head>
│   <body>
│     <!-- Navbar cố định ở trên cùng -->
│     <nav
│       class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-sm"
│     >
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/admin}">
│           <img
│             src="/images/admin/admin.png"
│             alt="Admin"
│             width="40"
│             height="40"
│           />
│           Bảng Điều Khiển Quản Trị
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│           aria-controls="navbarContent"
│           aria-expanded="false"
│           aria-label="Chuyển đổi"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/admin}">Trang Chủ</a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 th:href="@{/admin/nguoidung/laytatcanguoidung}"
│                 >QL người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│                 >QL BXH người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/baiviet}">QL Bài viết</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/binhluan}">QL Bình luận</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/luotthich}"
│                 >QL Lượt thích</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 >Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <!-- Sidebar bên trái (giữ nguyên giao diện như mẫu trước) -->
│     <div class="sidebar">
│       <h5>Menu Quản Trị</h5>
│       <ul class="nav flex-column">
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin}"
│             ><i class="fas fa-home me-2"></i>Trang Chủ</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}"
│             ><i class="fas fa-users me-2"></i>QL người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│             ><i class="fas fa-chart-line me-2"></i>QL BXH người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/baiviet}"
│             ><i class="fas fa-file-alt me-2"></i>QL Bài viết</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/binhluan}"
│             ><i class="fas fa-comments me-2"></i>QL Bình luận</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/luotthich}"
│             ><i class="fas fa-thumbs-up me-2"></i>QL Lượt thích</a
│           >
│         </li>
│ 
│         <li class="nav-item">
│           <a
│             class="nav-link"
│             href="javascript:void(0);"
│             onclick="document.getElementById('logoutForm').submit();"
│             ><i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất</a
│           >
│         </li>
│ 
│         <form
│           id="logoutForm"
│           th:action="@{/logout}"
│           method="post"
│           style="display: none"
│         ></form>
│       </ul>
│     </div>
│ 
│     <!-- Nội dung chính -->
│     <div class="content">
│       <div class="container-fluid">
│         <h2 class="mb-4">Quản Lý Bình Luận</h2>
│         <!-- Form Tìm kiếm -->
│         <form th:action="@{/admin/binhluan/timkiem}" method="get" class="mb-3">
│           <div class="input-group">
│             <input
│               type="text"
│               name="keyword"
│               class="form-control"
│               placeholder="Tìm kiếm bình luận..."
│             />
│             <button class="btn btn-primary" type="submit">Tìm kiếm</button>
│           </div>
│         </form>
│         <div class="d-flex justify-content-between mb-3">
│           <a th:href="@{/admin/binhluan}" class="btn btn-secondary">Quay lại</a>
│           <a
│             href="#"
│             class="btn btn-success"
│             data-bs-toggle="modal"
│             data-bs-target="#addCommentModal"
│           >
│             <i class="fas fa-plus-circle"></i> Thêm Bình Luận
│           </a>
│         </div>
│         <!-- Bảng danh sách bình luận -->
│         <table class="table table-striped">
│           <thead>
│             <tr>
│               <th>ID</th>
│               <th>Nội Dung</th>
│               <th>Người Dùng</th>
│               <th>Bài Viết</th>
│               <th>Ngày Đăng</th>
│               <th>Hành Động</th>
│             </tr>
│           </thead>
│           <tbody>
│             <tr th:each="binhLuan : ${danhSachBinhLuan}">
│               <td th:text="${binhLuan.id}">1</td>
│               <td th:text="${binhLuan.noiDung}">Nội dung bình luận</td>
│               <td th:text="${binhLuan.nguoiDung.tenDangNhap}">
│                 Tên người dùng
│               </td>
│               <td th:text="${binhLuan.baiViet.tieuDe}">Tiêu đề bài viết</td>
│               <td
│                 th:text="${#temporals.format(binhLuan.ngayDang, 'dd/MM/yyyy')}"
│               >
│                 01/01/2025
│               </td>
│               <td>
│                 <div class="btn-group" role="group">
│                   <!-- Nút Sửa mở modal tương ứng dựa theo ID -->
│                   <a
│                     class="btn btn-warning btn-sm"
│                     href="#"
│                     data-bs-toggle="modal"
│                     th:attr="data-bs-target='#editCommentModal-' + ${binhLuan.id}"
│                   >
│                     <i class="fas fa-pencil-alt"></i> Sửa
│                   </a>
│                   <form
│                     th:action="@{'/admin/binhluan/xoabinhluan/' + ${binhLuan.id}}"
│                     method="post"
│                     style="display: inline"
│                   >
│                     <input type="hidden" name="_method" value="delete" />
│                     <button type="submit" class="btn btn-danger btn-sm ms-1">
│                       <i class="fas fa-trash"></i> Xóa
│                     </button>
│                   </form>
│                 </div>
│               </td>
│             </tr>
│           </tbody>
│         </table>
│       </div>
│     </div>
│ 
│     <!-- Modal Thêm Bình Luận -->
│     <div
│       class="modal fade"
│       id="addCommentModal"
│       tabindex="-1"
│       aria-labelledby="addCommentModalLabel"
│       aria-hidden="true"
│     >
│       <div class="modal-dialog">
│         <div class="modal-content">
│           <div class="modal-header">
│             <h5 class="modal-title" id="addCommentModalLabel">
│               Thêm Bình Luận
│             </h5>
│             <button
│               type="button"
│               class="btn-close"
│               data-bs-dismiss="modal"
│               aria-label="Đóng"
│             ></button>
│           </div>
│           <div class="modal-body">
│             <form th:action="@{/admin/binhluan/tao}" method="post">
│               <div class="mb-3">
│                 <label for="noiDung" class="form-label">Nội Dung</label>
│                 <textarea
│                   class="form-control"
│                   id="noiDung"
│                   name="noiDung"
│                   required
│                 ></textarea>
│               </div>
│               <div class="mb-3">
│                 <label for="nguoiDungId" class="form-label"
│                   >Người Dùng ID</label
│                 >
│                 <input
│                   type="number"
│                   class="form-control"
│                   id="nguoiDungId"
│                   name="nguoiDungId"
│                   required
│                 />
│               </div>
│               <div class="mb-3">
│                 <label for="baiVietId" class="form-label">Bài Viết ID</label>
│                 <input
│                   type="number"
│                   class="form-control"
│                   id="baiVietId"
│                   name="baiVietId"
│                   required
│                 />
│               </div>
│               <button type="submit" class="btn btn-primary">
│                 <i class="fas fa-plus-circle"></i> Thêm Bình Luận
│               </button>
│             </form>
│           </div>
│         </div>
│       </div>
│     </div>
│ 
│     <!-- Modal Sửa Bình Luận (Duyệt qua danh sách bình luận) -->
│     <div th:each="binhLuan : ${danhSachBinhLuan}">
│       <div
│         class="modal fade"
│         th:id="'editCommentModal-' + ${binhLuan.id}"
│         tabindex="-1"
│         aria-labelledby="editCommentModalLabel"
│         aria-hidden="true"
│       >
│         <div class="modal-dialog">
│           <div class="modal-content">
│             <div class="modal-header">
│               <h5 class="modal-title" id="editCommentModalLabel">
│                 Sửa Bình Luận
│               </h5>
│               <button
│                 type="button"
│                 class="btn-close"
│                 data-bs-dismiss="modal"
│                 aria-label="Đóng"
│               ></button>
│             </div>
│             <div class="modal-body">
│               <form
│                 th:action="@{'/admin/binhluan/sua/id/' + ${binhLuan.id}}"
│                 method="post"
│               >
│                 <div class="mb-3">
│                   <label
│                     th:for="'editNoiDung-' + ${binhLuan.id}"
│                     class="form-label"
│                     >Nội Dung</label
│                   >
│                   <textarea
│                     class="form-control"
│                     th:id="'editNoiDung-' + ${binhLuan.id}"
│                     name="noiDung"
│                     required
│                     th:text="${binhLuan.noiDung}"
│                   ></textarea>
│                 </div>
│                 <button type="submit" class="btn btn-primary">
│                   <i class="fas fa-save"></i> Lưu
│                 </button>
│               </form>
│             </div>
│           </div>
│         </div>
│       </div>
│     </div>
│ 
│     <!-- Bootstrap JS và Popper -->
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
│     <!-- jQuery và EmojiOneArea JS -->
│     <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
│     <script src="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.1/emojionearea.min.js"></script>
│     <script>
│       $(document).ready(function () {
│         // Khởi tạo EmojiOneArea cho textarea modal Thêm Bình Luận
│         $("#noiDung").emojioneArea({
│           pickerPosition: "bottom",
│         });
│         // Khởi tạo EmojiOneArea cho textarea modal Sửa Bình Luận
│         $("textarea[id^='editNoiDung-']").emojioneArea({
│           pickerPosition: "bottom",
│         });
│       });
│     </script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── quanly_luotthich.html

--------------------------------------------------
│--- Nội dung file: quanly_luotthich.html ---
│ <!DOCTYPE html>
│ <html xmlns:th="http://www.thymeleaf.org">
│ <head>
│     <meta charset="UTF-8">
│     <title>Quản Lý Lượt Thích</title>
│     <link rel="shortcut icon" href="/images/admin/admin.png" type="image/x-icon">
│     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
│     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
│     <style>
│       body {
│         font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
│         background:linear-gradient(to left, #5399ab, #99beaa, #bebbc5);
│       }
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 8px;
│       }
│       .sidebar {
│         position: fixed;
│         top: 56px;
│         left: 0;
│         width: 250px;
│         height: calc(100vh - 56px);
│         background-color: #343a40;
│         padding: 1rem;
│         overflow-y: auto;
│       }
│       .sidebar h5 {
│         color: #fff;
│         margin-bottom: 1.5rem;
│       }
│       .sidebar .nav-link {
│         color: #adb5bd;
│         font-size: 1.1em;
│         margin: 0.5rem 0;
│         transition: background 0.3s, color 0.3s;
│       }
│       .sidebar .nav-link:hover {
│         background-color: #495057;
│         color: #fff;
│         border-radius: 4px;
│       }
│       .content {
│         margin-left: 250px;
│         padding: 2rem;
│         padding-top: 80px;
│       }
│       @media (max-width: 768px) {
│         .content { margin-left: 0; }
│         .sidebar { display: none; }
│       }
│     </style>
│ </head>
│ <body>
│      <!-- Navbar cố định ở trên cùng -->
│     <nav
│       class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-sm"
│     >
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/admin}">
│           <img
│             src="/images/admin/admin.png"
│             alt="Admin"
│             width="40"
│             height="40"
│           />
│           Bảng Điều Khiển Quản Trị
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│           aria-controls="navbarContent"
│           aria-expanded="false"
│           aria-label="Chuyển đổi"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/admin}">Trang Chủ</a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 th:href="@{/admin/nguoidung/laytatcanguoidung}"
│                 >QL người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│                 >QL BXH người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/baiviet}">QL Bài viết</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/binhluan}">QL Bình luận</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/luotthich}"
│                 >QL Lượt thích</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 >Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <!-- Sidebar bên trái (giữ nguyên giao diện như mẫu trước) -->
│     <div class="sidebar">
│       <h5>Menu Quản Trị</h5>
│       <ul class="nav flex-column">
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin}"
│             ><i class="fas fa-home me-2"></i>Trang Chủ</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}"
│             ><i class="fas fa-users me-2"></i>QL người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│             ><i class="fas fa-chart-line me-2"></i>QL BXH người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/baiviet}"
│             ><i class="fas fa-file-alt me-2"></i>QL Bài viết</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/binhluan}"
│             ><i class="fas fa-comments me-2"></i>QL Bình luận</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/luotthich}"
│             ><i class="fas fa-thumbs-up me-2"></i>QL Lượt thích</a
│           >
│         </li>
│ 
│         <li class="nav-item">
│           <a
│             class="nav-link"
│             href="javascript:void(0);"
│             onclick="document.getElementById('logoutForm').submit();"
│             ><i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất</a
│           >
│         </li>
│ 
│         <form
│           id="logoutForm"
│           th:action="@{/logout}"
│           method="post"
│           style="display: none"
│         ></form>
│       </ul>
│     </div>
│ 
│     <!-- Nội dung chính -->
│     <div class="content">
│         <div class="container mt-5">
│             <h2>Quản Lý Lượt Thích</h2>
│             <form th:action="@{/admin/luotthich/timkiem}" method="get" class="mb-3">
│                 <div class="input-group">
│                     <input type="text" name="keyword" class="form-control" placeholder="Tìm kiếm lượt thích...">
│                     <button class="btn btn-primary" type="submit">Tìm kiếm</button>
│                 </div>
│             </form>
│             <form th:action="@{/admin/luotthich/tao}" method="post" class="mb-3">
│                 <div class="input-group">
│                     <input type="text" name="nguoiDungId" class="form-control" placeholder="ID Người Dùng">
│                     <input type="text" name="baiVietId" class="form-control" placeholder="ID Bài Viết">
│                     <button class="btn btn-success" type="submit">Thêm Lượt Thích</button>
│                 </div>
│             </form>
│             <table class="table table-striped">
│                 <thead>
│                     <tr>
│                         <th>ID</th>
│                         <th>Người Dùng</th>
│                         <th>Bài Viết</th>
│                         <th>Thời Gian</th>
│                         <th>Hành Động</th>
│                     </tr>
│                 </thead>
│                 <tbody>
│                     <tr th:each="luotThich : ${danhSachLuotThich}">
│                         <td th:text="${luotThich.id}">1</td>
│                         <td th:text="${luotThich.nguoiDung.tenDangNhap}">Tên người dùng</td>
│                         <td th:text="${luotThich.baiViet.tieuDe}">Tiêu đề bài viết</td>
│                         <td th:text="${#temporals.format(luotThich.thoiGian, 'dd/MM/yyyy HH:mm:ss')}">01/01/2025 12:00:00</td>
│                         <td>
│                             <form th:action="@{'/admin/luotthich/xoa/' + ${luotThich.nguoiDung.id} + '/' + ${luotThich.baiViet.id}}" method="post" style="display:inline;">
│                                 <button type="submit" class="btn btn-danger btn-sm">Xóa</button>
│                             </form>
│                         </td>
│                     </tr>
│                 </tbody>
│             </table>
│             <div class="mt-4">
│                 <h4>Tổng số lượt thích: <span th:text="${tongSoLuotThich}">0</span></h4>
│             </div>
│         </div>
│     </div>
│ 
│     <!-- Bootstrap JS and Popper.js -->
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
│ </body>
│ </html>--------------------------------------------------

│   │   │   │   │   │   ├── quanly_nguoidung.html

--------------------------------------------------
│--- Nội dung file: quanly_nguoidung.html ---
│ <!DOCTYPE html>
│ <html lang="en" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Quản lý Người Dùng</title>
│     <!-- Bootstrap CSS -->
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <!-- Font Awesome -->
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/admin/admin.png"
│       type="image/x-icon"
│     />
│     <style>
│       body {
│         font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
│         background: linear-gradient(
│           135deg,
│           #2d3d95,
│           #ccadc6
│         ); /* Deep blue to bright cyan gradient */
│         color: #fff; /* White text for contrast */
│         overflow-x: hidden; /* Prevent horizontal scroll */
│       }
│ 
│       /* Navbar */
│       .navbar {
│         background: linear-gradient(
│           to right,
│           #2c3e50,
│           #3498db
│         ); /* Dark to vibrant blue gradient */
│         box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Shadow for depth */
│       }
│ 
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 8px;
│       }
│ 
│       /* Sidebar cố định */
│       .sidebar {
│         position: fixed;
│         top: 56px;
│         left: 0;
│         width: 250px;
│         height: calc(100vh - 56px);
│         background: linear-gradient(
│           to bottom,
│           #1c2833,
│           #334a5e
│         ); /* Dark gradient sidebar */
│         padding: 1rem;
│         overflow-y: auto;
│         box-shadow: 2px 0 5px rgba(0, 0, 0, 0.3);
│       }
│ 
│       .sidebar h5 {
│         color: #fff;
│         margin-bottom: 1.5rem;
│         text-transform: uppercase;
│         letter-spacing: 1px;
│         font-weight: 600;
│       }
│ 
│       .sidebar .nav-link {
│         color: #adb5bd;
│         font-size: 1.1em;
│         margin: 0.5rem 0;
│         transition: background 0.3s, color 0.3s;
│         padding: 0.75rem 1rem;
│         border-radius: 6px;
│       }
│ 
│       .sidebar .nav-link:hover,
│       .sidebar .nav-link.active {
│         background: linear-gradient(
│           to right,
│           #34495e,
│           #2c3e50
│         ); /* Darker hover gradient */
│         color: #fff;
│         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
│       }
│ 
│       /* Nội dung chính */
│       .content {
│         margin-left: 250px;
│         padding: 2rem;
│         padding-top: 80px;
│         background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent white */
│         border-radius: 8px;
│         box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
│         backdrop-filter: blur(10px); /* Blur effect for a frosted glass look */
│       }
│ 
│       @media (max-width: 768px) {
│         .content {
│           margin-left: 0;
│         }
│ 
│         .sidebar {
│           display: none;
│         }
│       }
│ 
│       /* Table styles */
│       .table {
│         color: #fff;
│       }
│ 
│       .table thead th {
│         background-color: rgba(0, 0, 0, 0.3);
│       }
│ 
│       .table-striped tbody tr:nth-of-type(odd) {
│         background-color: rgba(255, 255, 255, 0.05);
│       }
│ 
│       .table-bordered {
│         border: 1px solid rgba(255, 255, 255, 0.1);
│       }
│ 
│       .table-bordered th,
│       .table-bordered td {
│         border: 1px solid rgba(255, 255, 255, 0.1);
│       }
│ 
│       /* Modal styles */
│       .modal-content {
│         background: linear-gradient(to bottom, #2c3e50, #34495e);
│         color: #fff;
│       }
│ 
│       .modal-header,
│       .modal-footer {
│         border-color: rgba(255, 255, 255, 0.1);
│       }
│ 
│       .form-control {
│         background-color: rgba(255, 255, 255, 0.1);
│         border: 1px solid rgba(255, 255, 255, 0.2);
│         color: #fff;
│       }
│ 
│       .form-control:focus {
│         background-color: rgba(255, 255, 255, 0.2);
│         border-color: #3498db;
│         box-shadow: none;
│       }
│ 
│       .btn-primary {
│         background-color: #3498db;
│         border-color: #3498db;
│       }
│ 
│       .btn-primary:hover {
│         background-color: #2980b9;
│         border-color: #2980b9;
│       }
│ 
│       .btn-success {
│         background-color: #2ecc71;
│         border-color: #2ecc71;
│       }
│ 
│       .btn-success:hover {
│         background-color: #27ae60;
│         border-color: #27ae60;
│       }
│ 
│       .btn-warning {
│         background-color: #f39c12;
│         border-color: #f39c12;
│       }
│ 
│       .btn-warning:hover {
│         background-color: #e67e22;
│         border-color: #e67e22;
│       }
│ 
│       .btn-danger {
│         background-color: #e74c3c;
│         border-color: #e74c3c;
│       }
│ 
│       .btn-danger:hover {
│         background-color: #c0392b;
│         border-color: #c0392b;
│       }
│ 
│       .btn-secondary {
│         background-color: #7f8c8d;
│         border-color: #7f8c8d;
│       }
│ 
│       .btn-secondary:hover {
│         background-color: #6c7a7d;
│         border-color: #6c7a7d;
│       }
│ 
│       .alert-success {
│         background-color: rgba(46, 204, 113, 0.2); /* Light green */
│         border-color: #2ecc71;
│         color: #fff;
│       }
│     </style>
│   </head>
│   <body>
│     <!-- Navbar cố định ở trên cùng -->
│     <nav
│       class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-sm"
│     >
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/admin}">
│           <img
│             src="/images/admin/admin.png"
│             alt="Admin"
│             width="40"
│             height="40"
│           />
│           Bảng Điều Khiển Quản Trị
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│           aria-controls="navbarContent"
│           aria-expanded="false"
│           aria-label="Chuyển đổi"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/admin}">Trang Chủ</a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 th:href="@{/admin/nguoidung/laytatcanguoidung}"
│                 >QL người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│                 >QL BXH người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/baiviet}">QL Bài viết</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/binhluan}">QL Bình luận</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/luotthich}"
│                 >QL Lượt thích</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 >Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <!-- Sidebar bên trái (giữ nguyên giao diện như mẫu trước) -->
│     <div class="sidebar">
│       <h5>Menu Quản Trị</h5>
│       <ul class="nav flex-column">
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin}"
│             ><i class="fas fa-home me-2"></i>Trang Chủ</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}"
│             ><i class="fas fa-users me-2"></i>QL người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│             ><i class="fas fa-chart-line me-2"></i>QL BXH người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/baiviet}"
│             ><i class="fas fa-file-alt me-2"></i>QL Bài viết</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/binhluan}"
│             ><i class="fas fa-comments me-2"></i>QL Bình luận</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/luotthich}"
│             ><i class="fas fa-thumbs-up me-2"></i>QL Lượt thích</a
│           >
│         </li>
│ 
│         <li class="nav-item">
│           <a
│             class="nav-link"
│             href="javascript:void(0);"
│             onclick="document.getElementById('logoutForm').submit();"
│             ><i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất</a
│           >
│         </li>
│ 
│         <form
│           id="logoutForm"
│           th:action="@{/logout}"
│           method="post"
│           style="display: none"
│         ></form>
│       </ul>
│     </div>
│ 
│     <!-- Nội dung chính -->
│     <div class="content">
│       <div class="container mt-5">
│         <h2 class="mb-4 text-center">Danh sách Người Dùng</h2>
│ 
│         <!-- Search Form -->
│         <form th:action="@{/admin/nguoidung/timkiem}" method="get" class="mb-4">
│           <div class="input-group">
│             <input
│               type="text"
│               class="form-control"
│               placeholder="Tìm kiếm người dùng"
│               name="keyword"
│               th:value="${keyword}"
│             />
│             <button class="btn btn-primary" type="submit">Tìm kiếm</button>
│           </div>
│         </form>
│ 
│         <!-- Button to Add User -->
│         <div class="d-flex justify-content-between mb-3">
│           <a
│             th:href="@{/admin/nguoidung/laytatcanguoidung}"
│             class="btn btn-secondary"
│             >Quay lại</a
│           >
│           <a
│             href="#"
│             class="btn btn-success"
│             data-bs-toggle="modal"
│             data-bs-target="#addUserModal"
│             ><i class="bi bi-plus-circle"></i> Thêm Người Dùng</a
│           >
│         </div>
│ 
│         <!-- Table of Users -->
│         <table class="table table-striped table-bordered">
│           <thead class="table-dark">
│             <tr>
│               <th scope="col">ID</th>
│               <th scope="col">Tên Đăng Nhập</th>
│               <th scope="col">Email</th>
│               <th scope="col">Điểm</th>
│               <th scope="col">Cấp Bậc</th>
│               <th scope="col">Vai Trò</th>
│               <th scope="col">Ngày Tạo</th>
│               <th scope="col">Hành Động</th>
│             </tr>
│           </thead>
│           <tbody>
│             <!-- Lặp qua danh sách người dùng -->
│             <tr th:each="nguoiDung : ${danhSachNguoiDung}">
│               <td th:text="${nguoiDung.id}"></td>
│               <td th:text="${nguoiDung.tenDangNhap}"></td>
│               <td th:text="${nguoiDung.email}"></td>
│               <td
│                 th:text="${diemNguoiDungService.tinhTongDiemByNguoiDungId(nguoiDung.id)}"
│               ></td>
│               <td th:text="${nguoiDung.capBac}"></td>
│               <td th:text="${nguoiDung.vaiTro}"></td>
│               <td th:text="${nguoiDung.ngayTao}"></td>
│               <td>
│                 <!-- Buttons for Edit and Delete actions -->
│                 <a
│                   class="btn btn-warning btn-sm"
│                   href="#"
│                   th:attr="data-id=${nguoiDung.id}"
│                   data-bs-toggle="modal"
│                   data-bs-target="#editUserModal"
│                 >
│                   <i class="bi bi-pencil-square"></i> Sửa
│                 </a>
│                 <form
│                   th:action="@{/admin/nguoidung/xoanguoidung/id/{id}(id=${nguoiDung.id})}"
│                   method="post"
│                   style="display: inline"
│                 >
│                   <input type="hidden" name="_method" value="delete" />
│                   <button type="submit" class="btn btn-danger btn-sm">
│                     <i class="bi bi-trash"></i> Xóa
│                   </button>
│                 </form>
│               </td>
│             </tr>
│           </tbody>
│         </table>
│         <th:block th:if="${successMessage}">
│           <div class="alert alert-success" th:text="${successMessage}"></div>
│         </th:block>
│       </div>
│     </div>
│ 
│     <!-- Modal to Add User -->
│     <div
│       class="modal fade"
│       id="addUserModal"
│       tabindex="-1"
│       aria-labelledby="addUserModalLabel"
│       aria-hidden="true"
│     >
│       <div class="modal-dialog">
│         <div class="modal-content">
│           <div class="modal-header">
│             <h5 class="modal-title" id="addUserModalLabel">Thêm Người Dùng</h5>
│             <button
│               type="button"
│               class="btn-close"
│               data-bs-dismiss="modal"
│               aria-label="Close"
│             ></button>
│           </div>
│           <div class="modal-body">
│             <form th:action="@{/admin/nguoidung/tao}" method="post">
│               <div class="mb-3">
│                 <label for="tenDangNhap" class="form-label"
│                   >Tên Đăng Nhập</label
│                 >
│                 <input
│                   type="text"
│                   class="form-control"
│                   id="tenDangNhap"
│                   name="tenDangNhap"
│                   required
│                 />
│               </div>
│               <div class="mb-3">
│                 <label for="matKhau" class="form-label">Mật Khẩu</label>
│                 <input
│                   type="password"
│                   class="form-control"
│                   id="matKhau"
│                   name="matKhau"
│                   required
│                 />
│               </div>
│               <div class="mb-3">
│                 <label for="email" class="form-label">Email</label>
│                 <input
│                   type="email"
│                   class="form-control"
│                   id="email"
│                   name="email"
│                   required
│                 />
│               </div>
│ 
│               <div class="mb-3">
│                 <label for="vaiTro" class="form-label">Vai Trò</label>
│                 <select class="form-control" id="vaiTro" name="vaiTro" required>
│                   <option
│                     th:each="role : ${T(com.example.xephangnguoidung.data.enums.VaiTro).values()}"
│                     th:value="${role}"
│                     th:text="${role}"
│                   ></option>
│                 </select>
│               </div>
│               <button type="submit" class="btn btn-primary">Thêm</button>
│             </form>
│           </div>
│         </div>
│       </div>
│     </div>
│ 
│     <!-- Modal to Edit User -->
│     <div
│       class="modal fade"
│       id="editUserModal"
│       tabindex="-1"
│       aria-labelledby="editUserModalLabel"
│       aria-hidden="true"
│     >
│       <div class="modal-dialog">
│         <div class="modal-content">
│           <div class="modal-header">
│             <h5 class="modal-title" id="editUserModalLabel">Sửa Người Dùng</h5>
│             <button
│               type="button"
│               class="btn-close"
│               data-bs-dismiss="modal"
│               aria-label="Close"
│             ></button>
│           </div>
│           <div class="modal-body">
│             <form id="editUserForm" method="post">
│               <div class="mb-3">
│                 <label for="editTenDangNhap" class="form-label"
│                   >Tên Đăng Nhập</label
│                 >
│                 <input
│                   type="text"
│                   class="form-control"
│                   id="editTenDangNhap"
│                   name="tenDangNhap"
│                   required
│                 />
│               </div>
│               <div class="mb-3">
│                 <label for="editMatKhau" class="form-label">Mật Khẩu</label>
│                 <input
│                   type="password"
│                   class="form-control"
│                   id="editMatKhau"
│                   name="matKhau"
│                   required
│                 />
│               </div>
│               <div class="mb-3">
│                 <label for="editEmail" class="form-label">Email</label>
│                 <input
│                   type="email"
│                   class="form-control"
│                   id="editEmail"
│                   name="email"
│                   required
│                 />
│               </div>
│ 
│               <div class="mb-3">
│                 <label for="editVaiTro" class="form-label">Vai Trò</label>
│                 <select
│                   class="form-control"
│                   id="editVaiTro"
│                   name="vaiTro"
│                   required
│                 >
│                   <option
│                     th:each="role : ${T(com.example.xephangnguoidung.data.enums.VaiTro).values()}"
│                     th:value="${role}"
│                     th:text="${role}"
│                   ></option>
│                 </select>
│               </div>
│               <button type="submit" class="btn btn-primary">Lưu</button>
│             </form>
│           </div>
│         </div>
│       </div>
│     </div>
│     <!-- <div class="mb-3 container">
│       
│     </div> -->
│ 
│     <!-- Bootstrap JS and Popper.js -->
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
│     <script>
│       // Script to populate the edit modal with user data
│       document.addEventListener("DOMContentLoaded", function () {
│         var editUserModal = document.getElementById("editUserModal");
│         editUserModal.addEventListener("show.bs.modal", function (event) {
│           var button = event.relatedTarget;
│           var userId = button.getAttribute("data-id");
│ 
│           fetch("/admin/nguoidung/laynguoidung/id/" + userId)
│             .then((response) => response.json())
│             .then((data) => {
│               document.getElementById("editTenDangNhap").value =
│                 data.tenDangNhap;
│               document.getElementById("editMatKhau").value = data.matKhau;
│               document.getElementById("editEmail").value = data.email;
│               document.getElementById("editVaiTro").value = data.vaiTro;
│               document
│                 .getElementById("editUserForm")
│                 .setAttribute("action", "/admin/nguoidung/sua/id/" + userId);
│             });
│         });
│       });
│     </script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── sua_baiviet.html

--------------------------------------------------
│--- Nội dung file: sua_baiviet.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Sửa Bài Viết</title>
│     <link rel="shortcut icon" href="/images/admin/admin.png" type="image/x-icon">
│     <!-- Bootstrap 5 CSS -->
│     <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
│     <!-- Font Awesome -->
│     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
│     <!-- JoditEditor CSS -->
│     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jodit/3.24.4/jodit.min.css" />
│     <!-- JoditEditor JS -->
│     <script src="https://cdnjs.cloudflare.com/ajax/libs/jodit/3.24.4/jodit.min.js"></script>
│ 
│     <style>
│       body {
│         font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
│         background:linear-gradient(to left, #9bab53, #60b1c7, #b9cfc7);
│       }
│       /* Navbar */
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 8px;
│       }
│       /* Sidebar cố định */
│       .sidebar {
│         position: fixed;
│         top: 56px;
│         left: 0;
│         width: 250px;
│         height: calc(100vh - 56px);
│         background-color: #343a40;
│         padding: 1rem;
│         overflow-y: auto;
│       }
│       .sidebar h5 {
│         color: #fff;
│         margin-bottom: 1.5rem;
│       }
│       .sidebar .nav-link {
│         color: #adb5bd;
│         font-size: 1.1em;
│         margin: 0.5rem 0;
│         transition: background 0.3s, color 0.3s;
│       }
│       .sidebar .nav-link:hover,
│       .sidebar .nav-link.active {
│         background-color: #495057;
│         color: #fff;
│         border-radius: 4px;
│       }
│       /* Nội dung chính */
│       .content {
│         margin-left: 250px;
│         padding: 2rem;
│         padding-top: 80px;
│       }
│       @media (max-width: 768px) {
│         .content { margin-left: 0; }
│         .sidebar { display: none; }
│       }
│     </style>
│   </head>
│   <body>
│      <!-- Navbar cố định ở trên cùng -->
│     <nav
│       class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-sm"
│     >
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/admin}">
│           <img
│             src="/images/admin/admin.png"
│             alt="Admin"
│             width="40"
│             height="40"
│           />
│           Bảng Điều Khiển Quản Trị
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│           aria-controls="navbarContent"
│           aria-expanded="false"
│           aria-label="Chuyển đổi"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/admin}">Trang Chủ</a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 th:href="@{/admin/nguoidung/laytatcanguoidung}"
│                 >QL người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│                 >QL BXH người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/baiviet}">QL Bài viết</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/binhluan}">QL Bình luận</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/luotthich}"
│                 >QL Lượt thích</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 >Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <!-- Sidebar bên trái (giữ nguyên giao diện như mẫu trước) -->
│     <div class="sidebar">
│       <h5>Menu Quản Trị</h5>
│       <ul class="nav flex-column">
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin}"
│             ><i class="fas fa-home me-2"></i>Trang Chủ</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}"
│             ><i class="fas fa-users me-2"></i>QL người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│             ><i class="fas fa-chart-line me-2"></i>QL BXH người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/baiviet}"
│             ><i class="fas fa-file-alt me-2"></i>QL Bài viết</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/binhluan}"
│             ><i class="fas fa-comments me-2"></i>QL Bình luận</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/luotthich}"
│             ><i class="fas fa-thumbs-up me-2"></i>QL Lượt thích</a
│           >
│         </li>
│ 
│         <li class="nav-item">
│           <a
│             class="nav-link"
│             href="javascript:void(0);"
│             onclick="document.getElementById('logoutForm').submit();"
│             ><i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất</a
│           >
│         </li>
│ 
│         <form
│           id="logoutForm"
│           th:action="@{/logout}"
│           method="post"
│           style="display: none"
│         ></form>
│       </ul>
│     </div>
│ 
│     <!-- Nội dung chính -->
│     <div class="content">
│       <div class="container-fluid">
│         <h2>Sửa Bài Viết</h2>
│         <form th:action="@{/admin/baiviet/sua/{id}(id=${baiViet.id})}" th:object="${baiViet}" method="post">
│           <div class="mb-3">
│             <label for="tieuDe" class="form-label">Tiêu Đề</label>
│             <input type="text" class="form-control" id="tieuDe" th:field="*{tieuDe}" required>
│           </div>
│           <div class="mb-3">
│             <label for="noiDung" class="form-label">Nội Dung</label>
│             <textarea class="form-control" id="noiDung" th:field="*{noiDung}" required></textarea>
│             <script>
│               const editor = new Jodit("#noiDung", {
│                 height: 300,
│               });
│             </script>
│           </div>
│           <button type="submit" class="btn btn-primary mt-3">Lưu Thay Đổi</button>
│           <a th:href="@{/admin/baiviet}" class="btn btn-success mt-3 ms-2">Quay lại</a>
│         </form>
│       </div>
│     </div>
│ 
│     <!-- Bootstrap JS and Popper.js -->
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
│   </body>
│ </html>--------------------------------------------------

│   │   │   │   │   │   ├── trang_chu_admin.html

--------------------------------------------------
│--- Nội dung file: trang_chu_admin.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Bảng Điều Khiển Quản Trị</title>
│     <!-- Bootstrap 5 CSS -->
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <!-- Font Awesome -->
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/admin/admin.png"
│       type="image/x-icon"
│     />
│     <style>
│       body {
│         font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
│         background: linear-gradient(to right, #1c2b30, #6b919e, #bbc2c5);
│       }
│       /* Navbar */
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 8px;
│       }
│       /* Sidebar cố định */
│       .sidebar {
│         position: fixed;
│         top: 56px; /* chiều cao của navbar */
│         left: 0;
│         width: 250px;
│         height: calc(100vh - 56px);
│         background-color: #343a40;
│         padding: 1rem;
│         overflow-y: auto;
│       }
│       .sidebar h5 {
│         color: #fff;
│         margin-bottom: 1.5rem;
│       }
│       .sidebar .nav-link {
│         color: #adb5bd;
│         font-size: 1.1em;
│         margin: 0.5rem 0;
│         transition: background 0.3s, color 0.3s;
│       }
│       .sidebar .nav-link:hover {
│         background-color: #495057;
│         color: #fff;
│         border-radius: 4px;
│       }
│       /* Nội dung chính */
│       .content {
│         margin-left: 250px;
│         padding: 2rem;
│         padding-top: 80px;
│       }
│       /* Card thống kê */
│       .card {
│         border: none;
│         border-radius: 8px;
│         box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
│         transition: transform 0.3s;
│       }
│       .card:hover {
│         transform: translateY(-5px);
│       }
│       .card .card-body {
│         padding: 1.5rem;
│       }
│       .card .card-title {
│         font-size: 1.25rem;
│         margin-bottom: 0.75rem;
│       }
│       .card-text {
│         font-size: 2rem;
│         font-weight: bold;
│       }
│       @media (max-width: 768px) {
│         .content {
│           margin-left: 0;
│         }
│         .sidebar {
│           display: none;
│         }
│       }
│     </style>
│   </head>
│   <body>
│     <!-- Navbar cố định ở trên cùng -->
│     <nav
│       class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-sm"
│     >
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/admin}">
│           <img
│             src="/images/admin/admin.png"
│             alt="Admin"
│             width="40"
│             height="40"
│           />
│           Bảng Điều Khiển Quản Trị
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│           aria-controls="navbarContent"
│           aria-expanded="false"
│           aria-label="Chuyển đổi"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/admin}">Trang Chủ</a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 th:href="@{/admin/nguoidung/laytatcanguoidung}"
│                 >QL người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│                 >QL BXH người dùng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/baiviet}">QL Bài viết</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/binhluan}">QL Bình luận</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/admin/luotthich}"
│                 >QL Lượt thích</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 >Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <!-- Sidebar bên trái (giữ nguyên giao diện như mẫu trước) -->
│     <div class="sidebar">
│       <h5>Menu Quản Trị</h5>
│       <ul class="nav flex-column">
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin}"
│             ><i class="fas fa-home me-2"></i>Trang Chủ</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/nguoidung/laytatcanguoidung}"
│             ><i class="fas fa-users me-2"></i>QL người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/diem/bangxephang}"
│             ><i class="fas fa-chart-line me-2"></i>QL BXH người dùng</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/baiviet}"
│             ><i class="fas fa-file-alt me-2"></i>QL Bài viết</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/binhluan}"
│             ><i class="fas fa-comments me-2"></i>QL Bình luận</a
│           >
│         </li>
│         <li class="nav-item">
│           <a class="nav-link" th:href="@{/admin/luotthich}"
│             ><i class="fas fa-thumbs-up me-2"></i>QL Lượt thích</a
│           >
│         </li>
│ 
│         <li class="nav-item">
│           <a
│             class="nav-link"
│             href="javascript:void(0);"
│             onclick="document.getElementById('logoutForm').submit();"
│             ><i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất</a
│           >
│         </li>
│ 
│         <form
│           id="logoutForm"
│           th:action="@{/logout}"
│           method="post"
│           style="display: none"
│         ></form>
│       </ul>
│     </div>
│ 
│     <!-- Nội dung chính -->
│     <div class="content">
│       <div class="container-fluid">
│         <h1 class="mb-4">Chào mừng đến với trang quản trị viên !</h1>
│         <h3>
│           Đây là bảng điều khiển quản trị, nơi bạn có thể quản lý người dùng,
│           bài viết, bình luận, lượt thích và các chức năng khác.
│         </h3>
│         <div class="row mt-3">
│           <div class="col-md-12 mb-3">
│             <div class="card bg-info text-dark">
│               <div class="card-body">
│                 <h5 class="card-title">
│                   <i class="fas fa-user me-2"></i> Thông tin cá nhân
│                 </h5>
│                 <div class="card-text">
│                   <h5 th:text="'ID: ' + ${nguoiDung.id}">ID</h5>
│                   <h5 th:text="'Tên đăng nhập: ' + ${nguoiDung.tenDangNhap}">Tên đăng nhập</h5>
│                   <h5 th:text="'Vai trò: ' + ${nguoiDung.vaiTro}">Vai trò</h5>
│                   <h5 th:text="'Ngày tạo: ' + ${#temporals.format(nguoiDung.ngayTao, 'dd/MM/yyyy')}">Ngày tạo</h5>
│                 </div>
│               </div>
│             </div>
│           </div>
│         </div>
│         <!-- Thẻ thống kê -->
│         <div class="row mt-3">
│           <div class="col-md-3 mb-3">
│             <div class="card bg-primary text-white">
│               <div class="card-body">
│                 <h5 class="card-title">
│                   <i class="fas fa-users me-2"></i> Tổng số người dùng
│                 </h5>
│                 <p class="card-text" th:text="${soLuongNguoiDung}"></p>
│               </div>
│             </div>
│           </div>
│ 
│           <div class="col-md-3 mb-3">
│             <div class="card bg-warning text-white">
│               <div class="card-body">
│                 <h5 class="card-title">
│                   <i class="fas fa-file-alt me-2"></i> Tổng số bài viết
│                 </h5>
│                 <p class="card-text" th:text="${soLuongBaiViet}"></p>
│               </div>
│             </div>
│           </div>
│           <div class="col-md-3 mb-3">
│             <div class="card bg-secondary text-white">
│               <div class="card-body">
│                 <h5 class="card-title">
│                   <i class="fas fa-comments me-2"></i> Tổng số bình luận
│                 </h5>
│                 <p class="card-text" th:text="${soLuongBinhLuan}"></p>
│               </div>
│             </div>
│           </div>
│           <div class="col-md-3 mb-3">
│             <div class="card bg-success text-white">
│               <div class="card-body">
│                 <h5 class="card-title">
│                   <i class="fas fa-chart-line me-2"></i> Tổng số điểm
│                 </h5>
│                 <p class="card-text" th:text="${tongSoDiem}"></p>
│               </div>
│             </div>
│           </div>
│         </div>
│         <!-- Hoạt động gần đây -->
│         <div class="card mb-4 bg bg-primary-subtle">
│           <div class="card-header">Hoạt động gần đây</div>
│           <div class="card-body">
│             <p>
│               Đây là bảng điều khiển quản trị của bạn. Từ đây bạn có thể theo
│               dõi hoạt động, quản lý dữ liệu và thực hiện các tác vụ khác.
│             </p>
│           </div>
│         </div>
│       </div>
│     </div>
│ 
│     <script src="/js/admin/trang_chu.js"></script>
│     <!-- Bootstrap JS và Popper -->
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   ├── auth/
│   │   │   │   │   │   ├── login.html

--------------------------------------------------
│--- Nội dung file: login.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Đăng nhập</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link rel="stylesheet" th:href="@{/css/styles.css}" />
│     <link rel="preconnect" href="https://fonts.googleapis.com" />
│     <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
│     <link
│       href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
│       rel="stylesheet"
│     />
│     <link rel="shortcut icon" href="/images/avatar/login.png" type="image/x-icon">
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: linear-gradient(
│           135deg,
│           #e0c3fc,
│           #8ec5fc
│         ); /* Gradient nhẹ nhàng */
│         height: 100vh;
│         display: flex;
│         justify-content: center;
│         align-items: center;
│         margin: 0;
│       }
│       .register-container {
│         background: white;
│         padding: 3rem;
│         border-radius: 15px;
│         box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
│         max-width: 450px;
│         width: 100%;
│         text-align: center;
│         animation: fadeIn 0.5s ease-in-out;
│       }
│       @keyframes fadeIn {
│         from {
│           opacity: 0;
│           transform: translateY(-20px);
│         }
│         to {
│           opacity: 1;
│           transform: translateY(0);
│         }
│       }
│       .register-container h2 {
│         margin-bottom: 2rem;
│         color: #333;
│         font-weight: 600;
│         font-size: 2rem;
│       }
│       .form-control {
│         border-radius: 30px;
│         padding: 12px 20px;
│         border: 1px solid #ddd;
│         transition: border-color 0.3s ease;
│       }
│       .form-control:focus {
│         border-color: #ff416c;
│         box-shadow: none;
│       }
│       .btn-primary {
│         background: linear-gradient(135deg, #ff416c, #ff4b2b);
│         border: none;
│         border-radius: 30px;
│         padding: 12px 25px;
│         font-size: 16px;
│         font-weight: 500;
│         transition: 0.3s;
│         width: 100%;
│       }
│       .btn-primary:hover {
│         background: linear-gradient(135deg, #ff4b2b, #ff416c);
│         transform: translateY(-3px);
│         box-shadow: 0 5px 10px rgba(255, 65, 108, 0.3);
│       }
│       .form-text {
│         color: #666;
│         margin-top: 1rem;
│       }
│       .form-text a {
│         color: #ff416c;
│         text-decoration: none;
│         font-weight: 500;
│       }
│       .form-text a:hover {
│         text-decoration: underline;
│       }
│       .form-label {
│         font-weight: 500;
│         color: #333;
│         margin-bottom: 0.5rem;
│         text-align: left;
│         display: block;
│       }
│       .mb-3 {
│         margin-bottom: 1.5rem;
│       }
│       .input-group-text {
│         cursor: pointer;
│       }
│     </style>
│   </head>
│   <body>
│     <div class="register-container">
│       <h2 class="text-center">Đăng Nhập</h2>
│       <form th:action="@{/login}" method="post">
│         <div th:if="${param.error}" class="alert alert-danger" role="alert">
│           Tên đăng nhập hoặc mật khẩu không đúng. Vui lòng thử lại.
│         </div>
│         <div class="mb-3">
│           <label for="email" class="form-label">Email</label>
│           <input
│             type="email"
│             class="form-control"
│             id="email"
│             name="username"
│             required
│           />
│         </div>
│         <div class="mb-3">
│           <label for="password" class="form-label">Mật Khẩu</label>
│           <div class="input-group">
│             <input
│               type="password"
│               class="form-control"
│               id="password"
│               name="password"
│               required
│             />
│             <span class="input-group-text" onclick="togglePasswordVisibility()">
│               <i class="fas fa-eye" id="togglePasswordIcon"></i>
│             </span>
│           </div>
│         </div>
│         <div class="d-grid">
│           <button type="submit" class="btn btn-primary">Đăng Nhập</button>
│         </div>
│ 
│         <div class="form-text text-center mt-3">
│           <a href="/register">Đăng ký</a>
│         </div>
│       </form>
│     </div>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
│     <script>
│       function togglePasswordVisibility() {
│         const passwordInput = document.getElementById('password');
│         const togglePasswordIcon = document.getElementById('togglePasswordIcon');
│         if (passwordInput.type === 'password') {
│           passwordInput.type = 'text';
│           togglePasswordIcon.classList.remove('fa-eye');
│           togglePasswordIcon.classList.add('fa-eye-slash');
│         } else {
│           passwordInput.type = 'password';
│           togglePasswordIcon.classList.remove('fa-eye-slash');
│           togglePasswordIcon.classList.add('fa-eye');
│         }
│       }
│     </script>
│   </body>
│ </html>--------------------------------------------------

│   │   │   │   │   │   ├── register.html

--------------------------------------------------
│--- Nội dung file: register.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Đăng Ký</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link rel="stylesheet" th:href="@{/css/styles.css}" />
│     <link rel="preconnect" href="https://fonts.googleapis.com" />
│     <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
│     <link
│       href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
│       rel="stylesheet"
│     />
│     <link rel="shortcut icon" href="/images/avatar/register.png" type="image/x-icon">
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: linear-gradient(
│           135deg,
│           #e0c3fc,
│           #8ec5fc
│         ); /* Gradient nhẹ nhàng */
│         height: 100vh;
│         display: flex;
│         justify-content: center;
│         align-items: center;
│         margin: 0;
│       }
│       .register-container {
│         background: white;
│         padding: 3rem;
│         border-radius: 15px;
│         box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
│         max-width: 450px;
│         width: 100%;
│         text-align: center;
│         animation: fadeIn 0.5s ease-in-out;
│       }
│       @keyframes fadeIn {
│         from {
│           opacity: 0;
│           transform: translateY(-20px);
│         }
│         to {
│           opacity: 1;
│           transform: translateY(0);
│         }
│       }
│       .register-container h2 {
│         margin-bottom: 2rem;
│         color: #333;
│         font-weight: 600;
│         font-size: 2rem;
│       }
│       .form-control {
│         border-radius: 30px;
│         padding: 12px 20px;
│         border: 1px solid #ddd;
│         transition: border-color 0.3s ease;
│       }
│       .form-control:focus {
│         border-color: #ff416c;
│         box-shadow: none;
│       }
│       .btn-primary {
│         background: linear-gradient(135deg, #ff416c, #ff4b2b);
│         border: none;
│         border-radius: 30px;
│         padding: 12px 25px;
│         font-size: 16px;
│         font-weight: 500;
│         transition: 0.3s;
│         width: 100%;
│       }
│       .btn-primary:hover {
│         background: linear-gradient(135deg, #ff4b2b, #ff416c);
│         transform: translateY(-3px);
│         box-shadow: 0 5px 10px rgba(255, 65, 108, 0.3);
│       }
│       .form-text {
│         color: #666;
│         margin-top: 1rem;
│       }
│       .form-text a {
│         color: #ff416c;
│         text-decoration: none;
│         font-weight: 500;
│       }
│       .form-text a:hover {
│         text-decoration: underline;
│       }
│       .form-label {
│         font-weight: 500;
│         color: #333;
│         margin-bottom: 0.5rem;
│         text-align: left;
│         display: block;
│       }
│       .mb-3 {
│         margin-bottom: 1.5rem;
│       }
│       .input-group-text {
│         cursor: pointer;
│       }
│     </style>
│   </head>
│   <body>
│     <div class="register-container">
│       <h2 class="text-center">Đăng Ký</h2>
│       <form
│         th:action="@{/register}"
│         th:object="${registerNguoiDung}"
│         method="post"
│       >
│         <div th:if="${error}" class="alert alert-danger" role="alert">
│           <span th:text="${error}"></span>
│         </div>
│         <div class="mb-3">
│           <label for="username" class="form-label">Tên Đăng Nhập</label>
│           <input
│             type="text"
│             class="form-control"
│             id="username"
│             name="username"
│             required
│             th:field="*{tenDangNhap}"
│           />
│         </div>
│         <div class="mb-3">
│           <label for="email" class="form-label">Email</label>
│           <input
│             type="email"
│             class="form-control"
│             id="email"
│             name="email"
│             required
│             th:field="*{email}"
│           />
│         </div>
│         <div class="mb-3">
│           <label for="password" class="form-label">Mật Khẩu</label>
│           <div class="input-group">
│             <input
│               type="password"
│               class="form-control"
│               id="password"
│               name="password"
│               required
│               th:field="*{matKhau}"
│             />
│             <span class="input-group-text" onclick="togglePasswordVisibility('password', 'togglePasswordIcon')">
│               <i class="fas fa-eye" id="togglePasswordIcon"></i>
│             </span>
│           </div>
│         </div>
│ 
│         <div class="mb-3">
│           <label for="confirmPassword" class="form-label">Xác Nhận Mật Khẩu</label>
│           <div class="input-group">
│             <input
│               type="password"
│               class="form-control"
│               id="confirmPassword"
│               name="confirmPassword"
│               required
│               th:field="*{xacNhanMatKhau}"
│             />
│             <span class="input-group-text" onclick="togglePasswordVisibility('confirmPassword', 'toggleConfirmPasswordIcon')">
│               <i class="fas fa-eye" id="toggleConfirmPasswordIcon"></i>
│             </span>
│           </div>
│         </div>
│         <div class="mb-3">
│           <label for="vaiTro" class="form-label">Vai trò</label>
│           <select
│             class="form-control"
│             id="vaiTro"
│             name="vaiTro"
│             th:field="*{vaiTro}"
│           >
│             <option value="" disabled selected>Chọn vai trò</option>
│             <option
│               th:each="role : ${danhSachVaiTro}"
│               th:value="${role}"
│               th:text="${role}"
│             ></option>
│           </select>
│         </div>
│         <div class="d-grid">
│           <button type="submit" class="btn btn-primary">Đăng Ký</button>
│         </div>
│         <div class="form-text text-center mt-3">
│           <a th:href="@{/login}" class="text-decoration-none">Đã có tài khoản? Đăng nhập</a>
│         </div>
│       </form>
│     </div>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
│     <script>
│       function togglePasswordVisibility(inputId, iconId) {
│         const passwordInput = document.getElementById(inputId);
│         const togglePasswordIcon = document.getElementById(iconId);
│         if (passwordInput.type === 'password') {
│           passwordInput.type = 'text';
│           togglePasswordIcon.classList.remove('fa-eye');
│           togglePasswordIcon.classList.add('fa-eye-slash');
│         } else {
│           passwordInput.type = 'password';
│           togglePasswordIcon.classList.remove('fa-eye-slash');
│           togglePasswordIcon.classList.add('fa-eye');
│         }
│       }
│     </script>
│   </body>
│ </html>--------------------------------------------------

│   │   │   │   │   ├── user/
│   │   │   │   │   │   ├── bang_xep_hang_nguoidung.html

--------------------------------------------------
│--- Nội dung file: bang_xep_hang_nguoidung.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Bảng Xếp Hạng Người Dùng</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/user/user.png"
│       type="image/x-icon"
│     />
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
│         color: white;
│         display: flex;
│         flex-direction: column;
│         min-height: 100vh;
│       }
│       .navbar {
│         background: linear-gradient(135deg, #1c1c1c, #2b2b2b);
│         padding: 15px;
│       }
│       .navbar-brand img {
│         border-radius: 50%;
│         border: 2px solid white;
│       }
│       .card {
│         border-radius: 20px;
│         box-shadow: 0 8px 16px rgba(255, 255, 255, 0.2);
│         background: rgba(255, 255, 255, 0.1);
│         backdrop-filter: blur(10px);
│       }
│       .card-header {
│         background: linear-gradient(135deg, #ff6b6b, #ff4757);
│         color: white;
│         font-size: 1.8rem;
│         text-align: center;
│         padding: 15px;
│         font-weight: bold;
│       }
│       .table thead {
│         background: #ff4757;
│         color: white;
│       }
│       .table tbody tr:hover {
│         background: rgba(255, 255, 255, 0.2);
│       }
│       .img-thumbnail {
│         border-radius: 50%;
│         width: 60px;
│         height: 60px;
│         border: 2px solid white;
│       }
│       .rank-1 {
│         color: gold;
│         font-weight: bold;
│       }
│       .rank-2 {
│         color: silver;
│         font-weight: bold;
│       }
│       .rank-3 {
│         color: #cd7f32;
│         font-weight: bold;
│       }
│       .footer {
│         background: #343a40;
│         color: white;
│         padding: 1rem 0;
│         text-align: center;
│         margin-top: auto;
│       }
│       .footer h3 {
│         margin-bottom: 1rem;
│       }
│       .footer ul {
│         padding: 0;
│         list-style: none;
│       }
│       .footer ul li {
│         margin-bottom: 0.5rem;
│       }
│       .footer ul li a {
│         color: #ffc107;
│         text-decoration: none;
│       }
│       .footer ul li a:hover {
│         text-decoration: underline;
│       }
│     </style>
│   </head>
│   <body>
│     <nav class="navbar navbar-expand-lg navbar-dark">
│       <div class="container">
│         <a class="navbar-brand d-flex align-items-center" th:href="@{/user}">
│           <img
│             src="/images/user/user.png"
│             alt="User"
│             width="40"
│             height="40"
│             class="me-2"
│           />
│           <span>MENU</span>
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/user/hoso}"
│                 ><i class="fas fa-home me-1"></i> Trang Chủ</a
│               >
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/diem/bangxephang}"
│                 ><i class="fas fa-trophy me-1"></i> Bảng Xếp Hạng</a
│               >
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/baiviet/tao}"
│                 ><i class="fas fa-file-alt me-1"></i> Viết Bài</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 ><i class="fas fa-sign-out-alt me-1"></i> Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <div class="container py-5">
│       <h1 class="text-center text-warning mb-4">Bảng Xếp Hạng Người Dùng</h1>
│       <div class="card">
│         <div class="card-header">🏆 TOP THÀNH VIÊN XUẤT SẮC 🏆</div>
│         <div class="card-body">
│           <div class="table-responsive">
│             <table class="table table-hover text-center text-white">
│               <thead>
│                 <tr>
│                   <th>Top</th>
│                   <th>Avatar</th>
│                   <th>Tên Đăng Nhập</th>
│                   <th>Điểm</th>
│                   <th>Cấp Bậc</th>
│                 </tr>
│               </thead>
│               <tbody>
│                 <tr
│                   th:each="nguoiDung, iterStat : ${danhSachNguoiDung}"
│                   th:classappend="${iterStat.count == 1} ? 'rank-1' : (${iterStat.count == 2} ? 'rank-2' : (${iterStat.count == 3} ? 'rank-3' : ''))"
│                 >
│                   <td th:text="${iterStat.count}"></td>
│                   <td>
│                     <img
│                       src="/images/user/user.png"
│                       alt="Avatar"
│                       class="img-thumbnail"
│                     />
│                   </td>
│                   <td th:text="${nguoiDung.tenDangNhap}"></td>
│                   <td
│                     th:text="${diemNguoiDungService.tinhTongDiemByNguoiDungId(nguoiDung.id)}"
│                   ></td>
│                   <td th:text="${nguoiDung.capBac}"></td>
│                 </tr>
│                 <tr th:if="${danhSachNguoiDung.isEmpty()}">
│                   <td colspan="5" class="text-center text-danger">
│                     Không có người dùng nào
│                   </td>
│                 </tr>
│               </tbody>
│             </table>
│           </div>
│         </div>
│       </div>
│     </div>
│     <footer class="footer">
│       <div class="container">
│         <p>&copy; 2025 Trang web của bạn. Mọi quyền được bảo lưu.</p>
│         <div>
│           <h3>Tài liệu tham khảo</h3>
│           <ul class="list-unstyled">
│             <li>
│               <a href="https://github.com">Github</a>
│             </li>
│             <li>
│               <a href="https://chatgpt.com">ChatGPT</a>
│             </li>
│             <li>
│               <a href="https://spring.io">Sping Boot</a>
│             </li>
│             <li>
│               <a href="https://thymeleaf.org">Thymeleaf</a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </footer>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── chitiet_baiviet.html

--------------------------------------------------
│--- Nội dung file: chitiet_baiviet.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta name="_csrf" th:content="${_csrf.token}" />
│     <meta name="_csrf_header" th:content="${_csrf.headerName}" />
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Chi Tiết Bài Viết</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.1/emojionearea.min.css"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/user/user.png"
│       type="image/x-icon"
│     />
│     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
│     <script src="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.1/emojionearea.min.js"></script>
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: #ffffff; /* Màu nền trắng */
│         color: #333333; /* Màu chữ tối */
│         min-height: 100vh;
│         display: flex;
│         flex-direction: column;
│       }
│ 
│       .navbar {
│         background: #007bff; /* Nền xanh dương cho navbar */
│         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Hiệu ứng đổ bóng nhẹ */
│       }
│ 
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 10px;
│       }
│ 
│       .content {
│         padding: 2rem;
│         flex-grow: 1;
│         padding-top: 80px;
│       }
│ 
│       .card {
│         background: #ffffff; /* Nền trắng cho card */
│         border: 1px solid #e0e0e0; /* Viền xám nhạt */
│         border-radius: 8px;
│         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
│         transition: all 0.3s;
│       }
│ 
│       .card:hover {
│         transform: translateY(-5px);
│       }
│ 
│       .card-header {
│         background: #007bff; /* Nền xanh dương cho header */
│         border-bottom: 1px solid #e0e0e0;
│         padding: 1rem 1.5rem;
│         font-weight: 600;
│         color: #ffffff; /* Màu chữ trắng */
│       }
│ 
│       .card-body {
│         padding: 2rem;
│       }
│ 
│       .btn-custom,
│       .btn-primary {
│         background: #007bff; /* Màu xanh dương */
│         color: white;
│         border: none;
│         transition: all 0.3s;
│       }
│ 
│       .btn-custom:hover,
│       .btn-primary:hover {
│         background: #0056b3; /* Màu xanh dương đậm hơn khi hover */
│         transform: scale(1.05);
│       }
│ 
│       .article-content {
│         line-height: 1.8;
│       }
│ 
│       .article-content strong {
│         color: inherit; /* Giữ nguyên màu sắc của chữ in đậm */
│       }
│ 
│       .comment-box {
│         display: flex;
│         align-items: center;
│         background: #f0f0f0; /* Nền xám nhạt cho comment box */
│         padding: 5px;
│         border-radius: 20px;
│         width: 100%;
│       }
│ 
│       .comment-box textarea {
│         height: 30px;
│         border: none;
│         background: transparent;
│         color: #343a40;
│         flex-grow: 1;
│         resize: none;
│         padding: 5px 10px;
│         font-size: 14px;
│         width: 100%;
│       }
│ 
│       .comment-box button {
│         border: none;
│         background: none;
│         color: #007bff;
│         font-size: 16px;
│       }
│ 
│       .comment-section p {
│         word-wrap: break-word;
│         word-break: break-all;
│       }
│ 
│       .btn-warning,
│       .btn-danger {
│         color: white;
│       }
│ 
│       .btn-warning {
│         background-color: #ffc107;
│       }
│ 
│       .btn-danger {
│         background-color: #dc3545;
│       }
│ 
│     </style>
│   </head>
│   <body>
│     <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/user}">
│           <img src="/images/user/user.png" alt="User" width="40" height="40" />
│           MENU
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarNav"
│           aria-controls="navbarNav"
│           aria-expanded="false"
│           aria-label="Toggle navigation"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarNav"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/hoso}">
│                 <i class="fas fa-home me-1"></i> Trang Chủ
│               </a>
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/diem/bangxephang}">
│                 <i class="fas fa-trophy me-1"></i> Bảng Xếp Hạng
│               </a>
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/baiviet/tao}">
│                 <i class="fas fa-file-alt me-1"></i> Viết Bài
│               </a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 ><i class="fas fa-sign-out-alt me-1"></i> Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <div class="content">
│       <div class="container-fluid">
│         <div class="card">
│           <div class="card-header">Chi Tiết Bài Viết</div>
│           <div class="card-body article-content">
│             <h2 th:text="${baiViet.tieuDe}">Tiêu Đề Bài Viết</h2>
│             <p>
│               <strong>Ngày Đăng:</strong>
│               <span
│                 th:text="${#temporals.format(baiViet.ngayDang, 'dd/MM/yyyy')}"
│                 >01/01/2025</span
│               >
│             </p>
│             <p>
│               <strong>Người Đăng:</strong>
│               <span th:text="${baiViet.nguoiDung.tenDangNhap}"
│                 >Tên Người Đăng</span
│               >
│             </p>
│             <hr />
│             <div th:utext="${baiViet.noiDung}">Nội dung bài viết...</div>
│             <div class="d-flex justify-content-between align-items-center mt-3">
│               <div>
│                 <a
│                   th:href="@{'/user/luotthich/' + ${baiViet.id} + '#baiviet-' + ${baiViet.id}}"
│                   class="btn btn-outline-primary btn-sm"
│                 >
│                   <i class="fas fa-thumbs-up"></i>
│                   <span th:text="${baiViet.soLuotThich}"></span>
│                 </a>
│                 <span class="btn btn-outline-primary btn-sm">
│                   <i class="fas fa-comment"></i>
│                   <span th:text="${baiViet.soLuotBinhLuan}"></span>
│                 </span>
│ 
│                 <a
│                   th:href="@{/user/baiviet/sua/{id}(id=${baiViet.id})}"
│                   class="btn btn-warning btn-sm"
│                 >
│                   <i class="fas fa-edit"></i> Sửa
│                 </a>
│                 <form
│                   th:action="@{/user/baiviet/xoa/{id}(id=${baiViet.id})}"
│                   method="post"
│                   style="display: inline"
│                 >
│                   <button class="btn btn-danger btn-sm">
│                     <i class="fas fa-trash"></i> Xóa
│                   </button>
│                 </form>
│               </div>
│               <small
│                 class="text-muted"
│                 th:text="'Bài viết được đăng vào ngày: ' + ${#temporals.format(baiViet.ngayDang, 'dd/MM/yyyy')}"
│               >
│                 01/01/2025
│               </small>
│             </div>
│             <div class="comment-section mt-3">
│               <div
│                 th:each="binhLuan : ${baiViet.binhLuans}"
│                 class="d-flex mb-2"
│                 th:id="'binhluan-' + ${binhLuan.id}"
│               >
│                 <img
│                   src="/images/user/user.png"
│                   alt="Commenter"
│                   width="40"
│                   height="40"
│                   class="rounded-circle me-2"
│                 />
│                 <div>
│                   <h6 class="mb-0" th:text="${binhLuan.nguoiDung.tenDangNhap}">
│                     Tên Người Dùng
│                   </h6>
│                   <small
│                     class="text-muted"
│                     th:text="${#temporals.format(binhLuan.ngayDang, 'dd/MM/yyyy')}"
│                     >01/01/2025 12:00</small
│                   >
│                   <p th:text="${binhLuan.noiDung}">Nội dung bình luận...</p>
│                   <div>
│                     <a
│                       class="btn btn-warning btn-sm"
│                       th:href="@{'/user/binhluan/sua/' + ${binhLuan.id}}"
│                     >
│                       <i class="fas fa-pencil-alt"></i> Sửa
│                     </a>
│                     <form
│                       th:action="@{'/user/binhluan/xoa/' + ${binhLuan.id}}"
│                       method="post"
│                       style="display: inline"
│                     >
│                       <input type="hidden" name="_method" value="delete" />
│                       <button type="submit" class="btn btn-danger btn-sm">
│                         <i class="fas fa-trash"></i> Xóa
│                       </button>
│                     </form>
│                   </div>
│                 </div>
│               </div>
│               <div class="comment-box">
│                 <form th:action="@{/user/binhluan/tao}" method="post">
│                   <input
│                     type="hidden"
│                     name="baiVietId"
│                     th:value="${baiViet.id}"
│                   />
│                   <textarea
│                     class="bg bg-light"
│                     name="noiDung"
│                     placeholder="Viết bình luận..."
│                     required
│                   ></textarea>
│                   <button type="submit">
│                     <i class="far fa-paper-plane"></i> Gửi
│                   </button>
│                 </form>
│               </div>
│             </div>
│           </div>
│         </div>
│       </div>
│     </div>
│     <script>
│       $(document).ready(function () {
│         $(".comment-box textarea").each(function () {
│           $(this).emojioneArea({ pickerPosition: "top" });
│         });
│       });
│     </script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── danhsach_chitiet_baiviet.html

--------------------------------------------------
│--- Nội dung file: danhsach_chitiet_baiviet.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Bài Viết Của Tôi</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/user/user.png"
│       type="image/x-icon"
│     />
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: #f8f9fa; /* Màu nền sáng */
│         color: #343a40; /* Màu chữ tối */
│         min-height: 100vh;
│         display: flex;
│         flex-direction: column;
│       }
│       .navbar {
│         background: #ffffff; /* Nền trắng cho navbar */
│         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Hiệu ứng đổ bóng nhẹ */
│       }
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 10px;
│       }
│       .content {
│         padding: 2rem;
│         flex-grow: 1;
│         padding-top: 80px;
│       }
│       .card {
│         background: #ffffff; /* Nền trắng cho card */
│         border: 1px solid #e0e0e0; /* Viền xám nhạt */
│         border-radius: 10px;
│         box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
│         transition: all 0.3s;
│       }
│       .card:hover {
│         transform: translateY(-5px);
│       }
│       .btn-custom {
│         background: #007bff; /* Màu xanh dương */
│         color: white;
│         border: none;
│         transition: all 0.3s;
│       }
│       .btn-custom:hover {
│         background: #0056b3; /* Màu xanh dương đậm hơn khi hover */
│         transform: scale(1.05);
│       }
│       .footer {
│         background: #343a40;
│         color: white;
│         padding: 1rem 0;
│         text-align: center;
│         margin-top: auto;
│       }
│       .footer h3 {
│         margin-bottom: 1rem;
│       }
│       .footer ul {
│         padding: 0;
│         list-style: none;
│       }
│       .footer ul li {
│         margin-bottom: 0.5rem;
│       }
│       .footer ul li a {
│         color: #ffc107;
│         text-decoration: none;
│       }
│       .footer ul li a:hover {
│         text-decoration: underline;
│       }
│     </style>
│   </head>
│   <body>
│     <nav class="navbar navbar-expand-lg navbar-light fixed-top">
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/user}">
│           <img src="/images/user/user.png" alt="User" width="40" height="40" />
│           MENU
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarNav"
│           aria-controls="navbarNav"
│           aria-expanded="false"
│           aria-label="Toggle navigation"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarNav"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/hoso}">
│                 <i class="fas fa-home me-1"></i> Trang Chủ
│               </a>
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/diem/bangxephang}">
│                 <i class="fas fa-trophy me-1"></i> Bảng Xếp Hạng
│               </a>
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/baiviet/tao}">
│                 <i class="fas fa-file-alt me-1"></i> Viết Bài
│               </a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 ><i class="fas fa-sign-out-alt me-1"></i> Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <div class="content container">
│       <h2 class="mb-4">Bài Viết Của Tôi</h2>
│       <div class="row">
│         <div class="col-md-6 mb-4" th:each="baiViet : ${danhSachBaiViet}">
│           <div class="card">
│             <div class="card-body">
│               <h4 th:text="'Tiêu đề: ' + ${baiViet.tieuDe}"></h4>
│               <p>
│                 <strong>Ngày Đăng:</strong>
│                 <span
│                   th:text="${#temporals.format(baiViet.ngayDang, 'dd/MM/yyyy')}"
│                 ></span>
│               </p>
│               <a
│                 th:href="@{/user/baiviet/chitiet/{id}(id=${baiViet.id})}"
│                 class="btn btn-custom"
│               >
│                 <i class="fas fa-eye"></i> Xem Chi Tiết
│               </a>
│             </div>
│           </div>
│         </div>
│       </div>
│     </div>
│     <footer class="footer">
│       <div class="container">
│         <p>&copy; 2025 Trang web của bạn. Mọi quyền được bảo lưu.</p>
│         <div>
│           <h3>Tài liệu tham khảo</h3>
│           <ul class="list-unstyled">
│             <li>
│               <a href="https://github.com">Github</a>
│             </li>
│             <li>
│               <a href="https://chatgpt.com">ChatGPT</a>
│             </li>
│             <li>
│               <a href="https://spring.io">Sping Boot</a>
│             </li>
│             <li>
│               <a href="https://thymeleaf.org">Thymeleaf</a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </footer>
│ 
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── danhsach_tatca_baiviet.html

--------------------------------------------------
│--- Nội dung file: danhsach_tatca_baiviet.html ---
│ <!DOCTYPE html>
│ <html lang="en">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Danh sách bài viết</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <style>
│       body {
│         background: #f8f9fa; /* Màu nền sáng */
│         font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
│         color: #343a40; /* Màu chữ tối */
│       }
│ 
│       .card-custom {
│         background-color: #ffffff; /* Nền trắng cho card */
│         border-radius: 18px;
│         box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
│         padding: 3.5rem;
│         margin: 3rem auto;
│         max-width: 950px;
│       }
│ 
│       .list-group-item {
│         background: #ffffff; /* Nền trắng cho list item */
│         border: 1px solid rgba(0, 0, 0, 0.1);
│         border-radius: 15px;
│         margin-bottom: 2rem;
│         padding: 2.5rem;
│         transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
│       }
│ 
│       .list-group-item:hover {
│         transform: translateY(-8px);
│         box-shadow: 0 12px 25px rgba(0, 0, 0, 0.2);
│       }
│ 
│       .text-decoration-none {
│         color: #007bff; /* Màu xanh dương */
│         font-weight: 600;
│         transition: color 0.3s ease-in-out;
│         font-size: 1.1rem;
│       }
│ 
│       .text-decoration-none:hover {
│         color: #0056b3; /* Màu xanh dương đậm hơn khi hover */
│       }
│ 
│       .mb-1 strong {
│         color: #343a40; /* Màu chữ tối */
│         font-weight: 700;
│         font-size: 1.1rem;
│       }
│ 
│       .small-date {
│         color: #6c757d; /* Màu chữ xám */
│         font-size: 0.95rem;
│       }
│ 
│       h4.text-center.mb-3 {
│         color: #007bff; /* Màu xanh dương */
│         font-weight: 700;
│         margin-bottom: 3rem;
│         font-size: 1.5rem;
│       }
│ 
│       .navbar {
│         background: #ffffff; /* Nền trắng cho navbar */
│         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Hiệu ứng đổ bóng nhẹ */
│       }
│ 
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 10px;
│       }
│       .footer {
│         background: #343a40;
│         color: white;
│         padding: 1rem 0;
│         text-align: center;
│         margin-top: auto;
│       }
│       .footer h3 {
│         margin-bottom: 1rem;
│       }
│       .footer ul {
│         padding: 0;
│         list-style: none;
│       }
│       .footer ul li {
│         margin-bottom: 0.5rem;
│       }
│       .footer ul li a {
│         color: #ffc107;
│         text-decoration: none;
│       }
│       .footer ul li a:hover {
│         text-decoration: underline;
│       }
│     </style>
│   </head>
│   <body>
│     <nav class="navbar navbar-expand-lg navbar-light fixed-top">
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/user}">
│           <img src="/images/user/user.png" alt="User" width="40" height="40" />
│           MENU
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/user/hoso}"
│                 ><i class="fas fa-home me-1"></i> Trang Chủ</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/diem/bangxephang}">
│                 <i class="fas fa-bolt me-1"></i> Bảng Xếp Hạng
│               </a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/baiviet/tao}"
│                 ><i class="fas fa-file-alt me-1"></i> Viết bài</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 ><i class="fas fa-sign-out-alt me-1"></i> Đăng Xuất</a
│               >
│             </li>
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│     <div class="col-md-12 mt-5">
│       <div class="card-custom">
│         <h4 class="text-center mb-3">Danh sách bài viết</h4>
│         <div class="list-group">
│           <div
│             th:each="baiViet : ${danhSachBaiViet}"
│             class="list-group-item list-group-item-action flex-column align-items-start"
│           >
│             <div class="d-flex w-100 justify-content-between">
│               <h5 class="mb-1">
│                 <a
│                   th:href="@{/user/baiviet/chitiet/{id}(id=${baiViet.id})}"
│                   th:text="'Bài viết: ' + ${baiViet.tieuDe}"
│                   class="text-decoration-none"
│                 ></a>
│               </h5>
│               <small
│                 class="small-date"
│                 th:text="'Ngày đăng: ' + ${#temporals.format(baiViet.ngayDang, 'dd/MM/yyyy')}"
│               ></small>
│             </div>
│             <p class="mb-1">
│               <strong
│                 th:text="'Người đăng: ' + ${baiViet.nguoiDung.tenDangNhap}"
│               ></strong>
│               <span class="text-warning"> đã đăng bài viết này.</span>
│             </p>
│           </div>
│           <div
│             th:if="${#lists.isEmpty(danhSachBaiViet)}"
│             class="alert alert-danger alert-dismissible fade show"
│             role="alert"
│           >
│             <strong>Lỗi!</strong> Không có bài viết nào.
│             <button
│               type="button"
│               class="btn-close"
│               data-bs-dismiss="alert"
│             ></button>
│           </div>
│         </div>
│       </div>
│     </div>
│     <footer class="footer">
│       <div class="container">
│         <p>&copy; 2025 Trang web của bạn. Mọi quyền được bảo lưu.</p>
│         <div>
│           <h3>Tài liệu tham khảo</h3>
│           <ul class="list-unstyled">
│             <li>
│               <a href="https://github.com">Github</a>
│             </li>
│             <li>
│               <a href="https://chatgpt.com">ChatGPT</a>
│             </li>
│             <li>
│               <a href="https://spring.io">Sping Boot</a>
│             </li>
│             <li>
│               <a href="https://thymeleaf.org">Thymeleaf</a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </footer>
│ 
│     <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── hoso_nguoidung.html

--------------------------------------------------
│--- Nội dung file: hoso_nguoidung.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Trang chủ</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap"
│       rel="stylesheet"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/user/user.png"
│       type="image/x-icon"
│     />
│     <!-- <link rel="stylesheet" href="/css/user/hoso_nguoidung.css"> -->
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: #f8f9fafe; /* Màu nền sáng */
│         color: #343a40; /* Màu chữ tối */
│         min-height: 100vh;
│         display: flex;
│         flex-direction: column;
│       }
│ 
│       .navbar {
│         background: #ffffff; /* Nền trắng cho navbar */
│         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Hiệu ứng đổ bóng nhẹ */
│       }
│ 
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 10px;
│       }
│ 
│       .content {
│         padding: 2rem;
│         flex-grow: 1;
│         padding-top: 100px;
│       }
│ 
│       .card {
│         background: #ffffff; /* Nền trắng cho card */
│         border: 1px solid #e0e0e0; /* Viền xám nhạt */
│         border-radius: 10px;
│         box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
│         transition: all 0.3s;
│       }
│ 
│       .card:hover {
│         transform: translateY(-5px);
│       }
│ 
│       .profile-img {
│         width: 120px;
│         height: 120px;
│         border-radius: 50%;
│         object-fit: cover;
│         margin-bottom: 1rem;
│         border: 3px solid #343a40;
│       }
│ 
│       .btn-custom {
│         background: #007bff; /* Màu xanh dương */
│         color: white;
│         border: none;
│         transition: all 0.3s;
│       }
│ 
│       .btn-custom:hover {
│         background: #0056b3; /* Màu xanh dương đậm hơn khi hover */
│         transform: scale(1.05);
│       }
│ 
│       h4 {
│         color: #343a40; /* Màu chữ tối */
│       }
│ 
│       .scrollable-table {
│         max-height: 300px; /* Adjusted height for 5 items */
│         overflow-y: auto; /* Add scrollbar when content exceeds height */
│         border-radius: 10px;
│         border: 1px solid #e0e0e0;
│         padding: 10px;
│       }
│ 
│       .scrollable-table table {
│         width: 100%;
│         text-align: left;
│         font-weight: bold;
│       }
│ 
│       .scrollable-table th {
│         background: #007bff;
│         color: white;
│         padding: 10px;
│         border-radius: 5px;
│       }
│ 
│       .scrollable-table td {
│         padding: 10px;
│       }
│ 
│       .row {
│         display: flex;
│         align-items: stretch;
│       }
│ 
│       .equal-height {
│         display: flex;
│         flex-wrap: wrap;
│       }
│ 
│       .equal-height > div {
│         flex: 1;
│         display: flex;
│         flex-direction: column;
│         height: 100%;
│       }
│ 
│       .fixed-height {
│         height: 500px; /* Set a fixed height for the columns */
│       }
│ 
│       /* Modal styling */
│       .modal-content {
│         background: #ffffff;
│         color: #343a40;
│         border-radius: 10px;
│       }
│ 
│       .modal-header {
│         border-bottom: 1px solid #e0e0e0;
│       }
│ 
│       .modal-footer {
│         border-top: 1px solid #e0e0e0;
│       }
│ 
│       .modal-body {
│         padding: 2rem;
│       }
│ 
│       .modal-body .info {
│         font-size: 1.2rem;
│         margin-bottom: 1rem;
│       }
│ 
│       .modal-body .info span {
│         font-weight: bold;
│         color: #007bff;
│       }
│ 
│       .modal-body h1 {
│         font-size: 2rem;
│         margin-bottom: 1.5rem;
│       }
│ 
│       .modal-footer .btn {
│         background: #007bff;
│         border: none;
│       }
│ 
│       .modal-footer .btn:hover {
│         background: #0056b3;
│       }
│ 
│       .info {
│         font-size: 1.1rem;
│         margin-bottom: 0.5rem;
│       }
│       .search-bar {
│         margin-left: 20px;
│         display: flex;
│         align-items: center;
│         border: 1px solid #dfe1e5; /* Viền xám nhạt */
│         border-radius: 24px; /* Bo tròn viền */
│         padding: 8px 16px; /* Khoảng cách bên trong */
│         width: 500px; /* Chiều rộng thanh tìm kiếm */
│         background-color: #f8f9fa; /* Nền xám nhạt */
│       }
│ 
│       .search-bar i {
│         margin-left: 10px; /* Khoảng cách giữa biểu tượng và input */
│         color: #9aa0a6; /* Màu biểu tượng */
│       }
│ 
│       .search-bar input {
│         border: none;
│         outline: none;
│         flex-grow: 1;
│         background-color: transparent; /* Nền trong suốt */
│         font-size: 16px;
│       }
│       .footer {
│         background: #343a40;
│         color: white;
│         padding: 1rem 0;
│         text-align: center;
│         margin-top: auto;
│       }
│       .footer h3 {
│         margin-bottom: 1rem;
│       }
│       .footer ul {
│         padding: 0;
│         list-style: none;
│       }
│       .footer ul li {
│         margin-bottom: 0.5rem;
│       }
│       .footer ul li a {
│         color: #ffc107;
│         text-decoration: none;
│       }
│       .footer ul li a:hover {
│         text-decoration: underline;
│       }
│     </style>
│   </head>
│ 
│   <body>
│     <nav class="navbar navbar-expand-lg navbar-light fixed-top">
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/user}">
│           <img src="/images/user/user.png" alt="User" width="40" height="40" />
│           Trang chủ
│         </a>
│         <form class="navbar-brand search-bar" action="/user/hoso" method="get">
│           <input type="text" name="keyword" placeholder="Tìm kiếm" />
│           <button
│             type="submit"
│             style="background: none; border: none; cursor: pointer"
│           >
│             <i class="fas fa-search"></i>
│           </button>
│         </form>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarContent"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarContent"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/user/hoso}"
│                 ><i class="fas fa-home me-1"></i> Trang Chủ</a
│               >
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/diem/bangxephang}">
│                 <i class="fas fa-bolt me-1"></i> Bảng Xếp Hạng
│               </a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/baiviet/tao}"
│                 ><i class="fas fa-pencil-alt me-1"></i> Viết Bài</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 ><i class="fas fa-sign-out-alt me-1"></i> Đăng Xuất</a
│               >
│             </li>
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <div class="content container mt-5">
│       <h3>Chào mừng bạn đến với trang chủ người dùng!</h3>
│       <div class="row equal-height mt-3">
│         <div class="col-md-4 text-center h-100 d-flex flex-column fixed-height">
│           <div class="card p-4 flex-grow-1">
│             <img
│               src="/images/user/user.png"
│               alt="Profile"
│               class="profile-img"
│             />
│             <h4>
│               <i class="fas fa-user"></i>
│               <span
│                 th:text="|Tên: ${nguoiDung.tenDangNhap} - ID = ${nguoiDungId}|"
│               ></span>
│             </h4>
│             <p>
│               <i class="fas fa-envelope"></i>
│               <span th:text="${nguoiDung.email}">user@example.com</span>
│             </p>
│             <p>
│               <i class="fas fa-star"></i> Điểm:
│               <span th:text="${tongDiem}">150</span>
│             </p>
│             <p>
│               <i class="fas fa-user-tag"></i> Vai Trò:
│               <span th:text="${nguoiDung.vaiTro}">USER</span>
│             </p>
│             <p>
│               <i class="fas fa-level-up-alt"></i> Cấp Bậc:
│               <span th:text="${nguoiDung.capBac}">DONG</span>
│             </p>
│             <p>
│               <i class="fas fa-calendar-alt"></i> Ngày Tạo:
│               <span
│                 th:text="${#temporals.format(nguoiDung.ngayTao, 'dd/MM/yyyy')}"
│                 >2025-03-12</span
│               >
│             </p>
│           </div>
│         </div>
│ 
│         <div class="col-md-8 h-100 d-flex flex-column fixed-height">
│           <div class="card-custom p-4 flex-grow-1">
│             <div class="d-flex justify-content-between align-items-center mb-3">
│               <h4 class="text-center mb-3">Bài viết của mọi người</h4>
│               <a
│                 th:href="@{/user/baiviet/tao}"
│                 class="btn btn-custom text-decoration-none"
│                 ><i class="fas fa-pencil-alt"></i> Viết bài</a
│               >
│             </div>
│             <div class="scrollable-table">
│               <table>
│                 <thead>
│                   <tr>
│                     <th>Tiêu đề bài viết</th>
│                     <th class="text-end">
│                       <a
│                         th:href="@{/user/baiviet/tatca}"
│                         class="btn btn-link text-white text-decoration-none"
│                       >
│                         <i class="fas fa-eye"></i> Xem chi tiết
│                       </a>
│                     </th>
│                   </tr>
│                 </thead>
│                 <tbody th:each="baiViet : ${danhSachBaiViet}">
│                   <tr>
│                     <td>
│                       <a
│                         th:href="@{/user/baiviet/chitiet/{id}(id=${baiViet.id})}"
│                         th:text="${baiViet.tieuDe}"
│                       ></a>
│                     </td>
│                     <td>
│                       <span
│                         class="text-dark"
│                         th:text="${baiViet.nguoiDung.tenDangNhap} + ' '"
│                       ></span>
│                       <span
│                         class="text-warning"
│                         th:text="' đã đăng vào ngày ' + ${#temporals.format(baiViet.ngayDang, 'dd/MM/yyyy')}"
│                       ></span>
│                     </td>
│                   </tr>
│                 </tbody>
│               </table>
│             </div>
│           </div>
│         </div>
│       </div>
│       <div class="row mt-4">
│         <div class="col-md-3">
│           <!-- <a th:href="@{/user/thongtincanhan}" class="btn btn-custom w-100"
│             ><i class="fas fa-eye"></i>Thông tin cá nhân</a
│           > -->
│           <button
│             type="button"
│             class="btn btn-custom w-100"
│             data-bs-toggle="modal"
│             data-bs-target="#infoModal"
│           >
│             <i class="fas fa-user"></i> Thông tin cá nhân
│           </button>
│         </div>
│         <div class="col-md-3">
│           <a
│             th:href="@{/user/baiviet/tatcabaiviethientai}"
│             class="btn btn-custom w-100"
│             ><i class="fas fa-eye"></i>Bài viết của tôi</a
│           >
│         </div>
│       </div>
│     </div>
│ 
│     <!-- Modal hiển thị thông tin cá nhân -->
│     <div
│       class="modal fade"
│       id="infoModal"
│       tabindex="-1"
│       aria-labelledby="infoModalLabel"
│       aria-hidden="true"
│     >
│       <div class="modal-dialog" role="document">
│         <div class="modal-content">
│           <div class="modal-header">
│             <h5 class="modal-title" id="infoModalLabel">Thông tin cá nhân</h5>
│             <button
│               type="button"
│               class="btn-close"
│               data-bs-dismiss="modal"
│               aria-label="Close"
│             ></button>
│           </div>
│           <div class="modal-body">
│             <div class="container">
│               <h1>Thông Tin Cá Nhân</h1>
│               <p class="info">🆔 ID: <span th:text="${nguoiDung.id}"></span></p>
│               <p class="info">
│                 👤 Tên đăng nhập:
│                 <span th:text="${nguoiDung.tenDangNhap}"></span>
│               </p>
│               <p class="info">
│                 ✉️ Email: <span th:text="${nguoiDung.email}"></span>
│               </p>
│               <p class="info">
│                 🎖️ Cấp bậc: <span th:text="${nguoiDung.capBac}"></span>
│               </p>
│               <p class="info">
│                 🔑 Vai trò: <span th:text="${nguoiDung.vaiTro}"></span>
│               </p>
│               <!-- <p class="info">
│                 📊 Số lần đăng nhập:
│                 <span th:text="${nguoiDung.soLanDangNhap}"></span>
│               </p> -->
│               <p class="info">
│                 📅 Ngày tạo:
│                 <span
│                   th:text="${#temporals.format(nguoiDung.ngayTao, 'dd/MM/yyyy')}"
│                 ></span>
│               </p>
│               <div class="mb-3 mt-3 d-flex justify-content-between">
│                 <div class="text-center mt-3">
│                   <a th:href="@{/user/hoso}" class="btn btn-light"
│                     >🏠 Trang Chủ</a
│                   >
│                 </div>
│                 <div class="text-center mt-3">
│                   <button
│                     type="button"
│                     class="btn btn-warning"
│                     data-bs-toggle="modal"
│                     data-bs-target="#editModal"
│                     data-bs-dismiss="modal"
│                   >
│                     <i class="fas fa-edit"></i>Sửa
│                   </button>
│                 </div>
│               </div>
│             </div>
│           </div>
│           <div class="modal-footer">
│             <button
│               type="button"
│               class="btn btn-secondary"
│               data-bs-dismiss="modal"
│             >
│               Đóng
│             </button>
│           </div>
│         </div>
│       </div>
│     </div>
│ 
│     <!-- Modal sửa thông tin cá nhân -->
│     <div
│       class="modal fade"
│       id="editModal"
│       tabindex="-1"
│       aria-labelledby="editModalLabel"
│       aria-hidden="true"
│     >
│       <div class="modal-dialog" role="document">
│         <div class="modal-content">
│           <div class="modal-header">
│             <h5 class="modal-title" id="editModalLabel">
│               Sửa thông tin cá nhân
│             </h5>
│             <button
│               type="button"
│               class="btn-close"
│               data-bs-dismiss="modal"
│               aria-label="Close"
│             ></button>
│           </div>
│           <div class="modal-body">
│             <div class="container">
│               <h1>Sửa Thông Tin Cá Nhân</h1>
│               <form
│                 th:action="@{/user/sua/{id}(id=${nguoiDung.id})}"
│                 th:object="${nguoiDung}"
│                 method="post"
│               >
│                 <div class="mb-3">
│                   <label for="tenDangNhap" class="form-label"
│                     >Tên đăng nhập</label
│                   >
│                   <input
│                     type="text"
│                     class="form-control"
│                     id="tenDangNhap"
│                     th:field="*{tenDangNhap}"
│                   />
│                 </div>
│                 <div class="mb-3">
│                   <label for="email" class="form-label">Email</label>
│                   <input
│                     type="email"
│                     class="form-control"
│                     id="email"
│                     th:field="*{email}"
│                   />
│                 </div>
│                 <!-- <div class="mb-3">
│                   <label for="matKhau" class="form-label">Mật khẩu</label>
│                   <input
│                     type="password"
│                     class="form-control"
│                     id="matKhau"
│                     th:field="*{matKhau}"
│                   />
│                 </div> -->
│                 <!-- <div class="mb-3">
│                   <label for="vaiTro" class="form-label">Vai trò</label>
│                   <input
│                     type="text"
│                     class="form-control"
│                     id="vaiTro"
│                     th:field="*{vaiTro}"
│                   />
│                 </div> -->
│                 <div class="mb-3 mt-3 d-flex justify-content-between">
│                   <div class="text-center mt-3">
│                     <a th:href="@{/user/hoso}" class="btn btn-light"
│                       >🏠 Trang Chủ</a
│                     >
│                   </div>
│                   <div class="text-center mt-3">
│                     <button type="submit" class="btn btn-primary">
│                       <i class="fas fa-save"></i> Lưu
│                     </button>
│                   </div>
│                 </div>
│               </form>
│             </div>
│           </div>
│           <div class="modal-footer">
│             <button
│               type="button"
│               class="btn btn-secondary"
│               data-bs-dismiss="modal"
│             >
│               Đóng
│             </button>
│           </div>
│         </div>
│       </div>
│     </div>
│     <footer class="footer">
│       <div class="container">
│         <p>&copy; 2025 Trang web của bạn. Mọi quyền được bảo lưu.</p>
│         <div>
│           <h3>Tài liệu tham khảo</h3>
│           <ul class="list-unstyled">
│             <li>
│               <a href="https://github.com">Github</a>
│             </li>
│             <li>
│               <a href="https://chatgpt.com">ChatGPT</a>
│             </li>
│             <li>
│               <a href="https://spring.io">Sping Boot</a>
│             </li>
│             <li>
│               <a href="https://thymeleaf.org">Thymeleaf</a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </footer>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── sua_baiviet.html

--------------------------------------------------
│--- Nội dung file: sua_baiviet.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Sửa Bài Viết</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/jodit/3.24.4/jodit.min.css"
│     />
│     <script src="https://cdnjs.cloudflare.com/ajax/libs/jodit/3.24.4/jodit.min.js"></script>
│     <link
│       href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap"
│       rel="stylesheet"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/user/user.png"
│       type="image/x-icon"
│     />
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: #f8f9fa; /* Màu nền sáng */
│         color: #343a40; /* Màu chữ tối */
│         min-height: 100vh;
│         display: flex;
│         flex-direction: column;
│       }
│ 
│       .navbar {
│         background: #ffffff; /* Nền trắng cho navbar */
│         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Hiệu ứng đổ bóng nhẹ */
│       }
│ 
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 10px;
│       }
│ 
│       .content {
│         padding: 2rem;
│         flex-grow: 1;
│         padding-top: 80px;
│       }
│ 
│       .card {
│         background: #ffffff; /* Nền trắng cho card */
│         border: 1px solid #e0e0e0; /* Viền xám nhạt */
│         border-radius: 10px;
│         box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
│         transition: all 0.3s;
│       }
│ 
│       .card:hover {
│         transform: translateY(-5px);
│       }
│ 
│       .card-header {
│         background: #007bff; /* Nền xanh dương cho header */
│         border-bottom: 1px solid #e0e0e0;
│         padding: 1rem 1.5rem;
│         font-weight: 600;
│         color: #ffffff; /* Màu chữ trắng */
│       }
│ 
│       .card-body {
│         padding: 2rem;
│       }
│ 
│       .btn-custom {
│         background: #007bff; /* Màu xanh dương */
│         color: white;
│         border: none;
│         transition: all 0.3s;
│       }
│ 
│       .btn-custom:hover {
│         background: #0056b3; /* Màu xanh dương đậm hơn khi hover */
│         transform: scale(1.05);
│       }
│ 
│       .form-label {
│         color: #343a40; /* Màu chữ tối */
│       }
│ 
│       .form-control {
│         background-color: #ffffff; /* Nền trắng cho input */
│         border: 1px solid #e0e0e0; /* Viền xám nhạt */
│         color: #343a40; /* Màu chữ tối */
│       }
│ 
│       .form-control:focus {
│         background-color: #ffffff; /* Nền trắng cho input khi focus */
│         border: 1px solid #007bff; /* Viền xanh dương khi focus */
│         color: #343a40; /* Màu chữ tối */
│         box-shadow: none;
│       }
│       .footer {
│         background: #343a40;
│         color: white;
│         padding: 1rem 0;
│         text-align: center;
│         margin-top: auto;
│       }
│       .footer h3 {
│         margin-bottom: 1rem;
│       }
│       .footer ul {
│         padding: 0;
│         list-style: none;
│       }
│       .footer ul li {
│         margin-bottom: 0.5rem;
│       }
│       .footer ul li a {
│         color: #ffc107;
│         text-decoration: none;
│       }
│       .footer ul li a:hover {
│         text-decoration: underline;
│       }
│     </style>
│   </head>
│   <body>
│     <nav class="navbar navbar-expand-lg navbar-light fixed-top">
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/user}">
│           <img src="/images/user/user.png" alt="User" width="40" height="40" />
│           MENU
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarNav"
│           aria-controls="navbarNav"
│           aria-expanded="false"
│           aria-label="Toggle navigation"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarNav"
│         >
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/hoso}">
│                 <i class="fas fa-home me-1"></i> Trang Chủ
│               </a>
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/diem/bangxephang}">
│                 <i class="fas fa-trophy me-1"></i> Bảng Xếp Hạng
│               </a>
│             </li>
│ 
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/baiviet/tao}">
│                 <i class="fas fa-file-alt me-1"></i> Viết Bài
│               </a>
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 ><i class="fas fa-sign-out-alt me-1"></i> Đăng Xuất</a
│               >
│             </li>
│ 
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <div class="content">
│       <div class="container-fluid">
│         <div class="card">
│           <div class="card-header">Sửa Bài Viết</div>
│           <div class="card-body">
│             <form
│               id="editPostForm"
│               th:action="@{/user/baiviet/sua/{id}(id=${baiViet.id})}"
│               th:object="${baiViet}"
│               method="post"
│             >
│               <input type="hidden" id="baiVietId" th:value="${baiViet.id}" />
│               <div class="mb-3">
│                 <label for="tieuDe" class="form-label">Tiêu Đề</label>
│                 <input
│                   type="text"
│                   class="form-control"
│                   id="tieuDe"
│                   th:field="*{tieuDe}"
│                   required
│                 />
│               </div>
│               <div class="mb-3">
│                 <label for="noiDung" class="form-label">Nội Dung</label>
│                 <textarea
│                   class="form-control"
│                   id="noiDung"
│                   th:field="*{noiDung}"
│                   required
│                 ></textarea>
│                 <script>
│                   const editor = new Jodit("#noiDung", {
│                     height: 300,
│                   });
│                 </script>
│               </div>
│               <button type="submit" class="btn btn-custom mt-3">
│                 Lưu Thay Đổi
│               </button>
│               <a
│                 th:href="@{'/user/baiviet/chitiet/' + ${baiViet.id} + '#baiviet-' + ${baiViet.id}}"
│                 class="btn btn-success mt-3 ms-2"
│               >
│                 Quay lại
│               </a>
│             </form>
│           </div>
│         </div>
│       </div>
│     </div>
│     <footer class="footer">
│       <div class="container">
│         <p>&copy; 2025 Trang web của bạn. Mọi quyền được bảo lưu.</p>
│         <div>
│           <h3>Tài liệu tham khảo</h3>
│           <ul class="list-unstyled">
│             <li>
│               <a href="https://github.com">Github</a>
│             </li>
│             <li>
│               <a href="https://chatgpt.com">ChatGPT</a>
│             </li>
│             <li>
│               <a href="https://spring.io">Sping Boot</a>
│             </li>
│             <li>
│               <a href="https://thymeleaf.org">Thymeleaf</a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </footer>
│     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
│     <script>
│       $(document).ready(function () {
│         $("#editPostForm").on("submit", function (event) {
│           event.preventDefault();
│           var form = $(this);
│           var baiVietId = $("#baiVietId").val();
│           $.ajax({
│             type: form.attr("method"),
│             url: form.attr("action"),
│             data: form.serialize(),
│             success: function () {
│               window.location.href = `/user/baiviet/chitiet/${baiVietId}#baiviet-${baiVietId}`;
│             },
│             error: function () {
│               alert("Có lỗi xảy ra khi lưu bài viết.");
│             },
│           });
│         });
│       });
│     </script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── sua_binhluan.html

--------------------------------------------------
│--- Nội dung file: sua_binhluan.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Sửa Bình Luận</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.1/emojionearea.min.css"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/user/user.png"
│       type="image/x-icon"
│     />
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
│         color: white;
│         display: flex;
│         flex-direction: column;
│         min-height: 100vh;
│       }
│       .container {
│         background: rgba(255, 255, 255, 0.1);
│         backdrop-filter: blur(10px);
│         border-radius: 20px;
│         padding: 2rem;
│         box-shadow: 0 8px 16px rgba(255, 255, 255, 0.2);
│       }
│       .form-label {
│         color: #ffc107;
│       }
│       .btn-primary {
│         background: linear-gradient(135deg, #ff6b6b, #ff4757);
│         border: none;
│       }
│       .btn-secondary {
│         background: linear-gradient(135deg, #1c1c1c, #2b2b2b);
│         border: none;
│       }
│       .footer {
│         background: #343a40;
│         color: white;
│         padding: 1rem 0;
│         text-align: center;
│         margin-top: auto;
│       }
│       .footer h3 {
│         margin-bottom: 1rem;
│       }
│       .footer ul {
│         padding: 0;
│         list-style: none;
│       }
│       .footer ul li {
│         margin-bottom: 0.5rem;
│       }
│       .footer ul li a {
│         color: #ffc107;
│         text-decoration: none;
│       }
│       .footer ul li a:hover {
│         text-decoration: underline;
│       }
│     </style>
│   </head>
│   <body>
│     <div class="container mt-5">
│       <h2 class="mb-4 text-center text-warning">Sửa Bình Luận</h2>
│       <form
│         id="editCommentForm"
│         th:action="@{'/user/binhluan/sua/' + ${binhLuan.id}}"
│         method="post"
│       >
│         <input type="hidden" id="binhLuanId" th:value="${binhLuan.id}" />
│         <input type="hidden" id="baiVietId" th:value="${binhLuan.baiViet.id}" />
│         <div class="mb-3">
│           <label for="noiDung" class="form-label">Nội Dung</label>
│           <textarea
│             class="form-control"
│             id="noiDung"
│             name="noiDung"
│             required
│             th:text="${binhLuan.noiDung}"
│           ></textarea>
│         </div>
│         <div class="d-flex justify-content-between">
│           <button type="submit" class="btn btn-primary">
│             <i class="fas fa-save"></i> Lưu
│           </button>
│           <a
│             th:href="@{'/user/baiviet/chitiet/' + ${binhLuan.baiViet.id} + '#binhluan-' + ${binhLuan.id}}"
│             class="btn btn-secondary"
│           >
│             <i class="fas fa-arrow-left"></i> Quay Lại
│           </a>
│         </div>
│       </form>
│     </div>
│     <footer class="footer">
│       <div class="container">
│         <p>&copy; 2025 Trang web của bạn. Mọi quyền được bảo lưu.</p>
│         <div>
│           <h3>Tài liệu tham khảo</h3>
│           <ul class="list-unstyled">
│             <li>
│               <a href="https://github.com">Github</a>
│             </li>
│             <li>
│               <a href="https://chatgpt.com">ChatGPT</a>
│             </li>
│             <li>
│               <a href="https://spring.io">Spring Boot</a>
│             </li>
│             <li>
│               <a href="https://thymeleaf.org">Thymeleaf</a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </footer>
│     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
│     <script src="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.1/emojionearea.min.js"></script>
│     <script>
│       $(document).ready(function () {
│         $("#noiDung").emojioneArea({
│           pickerPosition: "bottom",
│           tonesStyle: "bullet",
│         });
│ 
│         $("#editCommentForm").on("submit", function (event) {
│           event.preventDefault();
│           var form = $(this);
│           var binhLuanId = $("#binhLuanId").val();
│           var baiVietId = $("#baiVietId").val();
│           $.ajax({
│             type: form.attr("method"),
│             url: form.attr("action"),
│             data: form.serialize(),
│             success: function () {
│               window.location.href = `/user/baiviet/chitiet/${baiVietId}#binhluan-${binhLuanId}`;
│             },
│             error: function () {
│               alert("Có lỗi xảy ra khi lưu bình luận.");
│             },
│           });
│         });
│       });
│     </script>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
│   </body>
│ </html>--------------------------------------------------

│   │   │   │   │   │   ├── tao_baiviet.html

--------------------------------------------------
│--- Nội dung file: tao_baiviet.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>VIP - Tạo Bài Viết Mới</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdn.jsdelivr.net/npm/jodit@3.24.7/build/jodit.min.css"
│     />
│     <link
│       rel="shortcut icon"
│       href="/images/user/user.png"
│       type="image/x-icon"
│     />
│     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
│     <script src="https://cdn.jsdelivr.net/npm/jodit@3.24.7/build/jodit.min.js"></script>
│     <style>
│       body,
│       html {
│         height: 100%;
│         margin: 0;
│         padding: 0;
│         font-family: "Poppins", sans-serif;
│         background-color: #eef2f5;
│       }
│ 
│       .header {
│         background: #0056b3;
│         color: white;
│         text-align: center;
│         padding: 15px;
│         font-size: 24px;
│         position: fixed;
│         top: 0;
│         width: 100%;
│         z-index: 1000;
│         box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
│       }
│ 
│       .content-container {
│         max-width: 95%; /* Chiếm gần full màn hình */
│         margin: 100px auto 20px auto;
│         padding: 20px;
│         background: white;
│         border-radius: 10px;
│         box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
│       }
│ 
│       .jodit-container {
│         min-height: 500px; /* Tăng chiều cao editor */
│       }
│ 
│       .btn-custom {
│         background: #17a2b8;
│         color: white;
│         border-radius: 8px;
│         padding: 12px;
│         width: 100%;
│         margin-top: 10px;
│         font-size: 18px;
│         font-weight: bold;
│         transition: 0.3s;
│       }
│ 
│       .btn-custom:hover {
│         background: #138496;
│       }
│ 
│       input.form-control,
│       textarea {
│         border-radius: 6px;
│         border: 1px solid #ced4da;
│       }
│ 
│       input.form-control:focus,
│       textarea:focus {
│         border-color: #17a2b8;
│         box-shadow: 0 0 6px rgba(23, 162, 184, 0.5);
│       }
│ 
│       .navbar {
│         background: #0056b3;
│         color: white;
│         position: fixed;
│         top: 0;
│         width: 100%;
│         z-index: 1001;
│         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
│       }
│ 
│       .navbar-brand img {
│         border-radius: 50%;
│         margin-right: 10px;
│       }
│ 
│       /* Thêm khoảng trắng giữa các video/ảnh */
│       .jodit-container img,
│       .jodit-container video {
│         margin-bottom: 20px;
│       }
│       .footer {
│         background: #343a40;
│         color: white;
│         padding: 1rem 0;
│         text-align: center;
│         margin-top: auto;
│       }
│       .footer h3 {
│         margin-bottom: 1rem;
│       }
│       .footer ul {
│         padding: 0;
│         list-style: none;
│       }
│       .footer ul li {
│         margin-bottom: 0.5rem;
│       }
│       .footer ul li a {
│         color: #ffc107;
│         text-decoration: none;
│       }
│       .footer ul li a:hover {
│         text-decoration: underline;
│       }
│     </style>
│   </head>
│   <body>
│     <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
│       <div class="container-fluid">
│         <a class="navbar-brand" th:href="@{/user}">
│           <img src="/images/user/user.png" alt="User" width="40" height="40" />
│           MENU
│         </a>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarNav"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│         <div class="collapse navbar-collapse" id="navbarNav">
│           <ul class="navbar-nav ms-auto">
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/hoso}">Trang chủ</a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/diem/bangxephang}"
│                 >Bảng xếp hạng</a
│               >
│             </li>
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/user/baiviet/tao}"
│                 >Viết bài</a
│               >
│             </li>
│             <li class="nav-item">
│               <a
│                 class="nav-link"
│                 href="javascript:void(0);"
│                 onclick="document.getElementById('logoutForm').submit();"
│                 >Đăng xuất</a
│               >
│             </li>
│             <form
│               id="logoutForm"
│               th:action="@{/logout}"
│               method="post"
│               style="display: none"
│             ></form>
│           </ul>
│         </div>
│       </div>
│     </nav>
│     <div class="content-container">
│       <form th:action="@{/user/baiviet/tao}" method="post">
│         <input
│           type="text"
│           class="form-control mb-3"
│           id="tieuDe"
│           name="tieuDe"
│           placeholder="Tiêu đề bài viết"
│           required
│         />
│         <textarea id="noiDung" name="noiDung"></textarea>
│         <button type="submit" class="btn btn-custom">
│           <i class="fas fa-plus-circle"></i> Đăng Bài
│         </button>
│       </form>
│     </div>
│     <footer class="footer">
│       <div class="container">
│         <p>&copy; 2025 Trang web của bạn. Mọi quyền được bảo lưu.</p>
│         <div>
│           <h3>Tài liệu tham khảo</h3>
│           <ul class="list-unstyled">
│             <li>
│               <a href="https://github.com">Github</a>
│             </li>
│             <li>
│               <a href="https://chatgpt.com">ChatGPT</a>
│             </li>
│             <li>
│               <a href="https://spring.io">Sping Boot</a>
│             </li>
│             <li>
│               <a href="https://thymeleaf.org">Thymeleaf</a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </footer>
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
│     <script>
│       document.addEventListener("DOMContentLoaded", function () {
│         var editor = new Jodit("#noiDung", {
│           height: 500,
│           placeholder: "Nhập nội dung tại đây...",
│           toolbarSticky: false,
│           theme: "default",
│           buttons:
│             "bold,italic,underline,strikethrough,|,ul,ol,|,link,align,undo,redo,|,fontsize,font,brush,paragraph,source,image,video",
│           extraButtons: ["image", "video"],
│           uploader: {
│             insertImageAsBase64URI: true,
│           },
│         });
│         editor.events.on("beforeFileUpload", function (files) {
│           if (files.length === 0) return;
│           const file = files[0];
│           const reader = new FileReader();
│           reader.onload = function (event) {
│             if (file.type.startsWith("image/")) {
│               editor.s.insertImage(event.target.result);
│             } else if (file.type.startsWith("video/")) {
│               const videoTag = `<video controls width="300"><source src="${event.target.result}" type="${file.type}"></video>`;
│               editor.s.insertHTML(videoTag);
│             } else {
│               alert("Chỉ hỗ trợ tải ảnh và video!");
│             }
│           };
│           reader.readAsDataURL(file);
│           return false;
│         });
│         $(document).ready(function () {
│           $(".comment-box textarea").emojioneArea({ pickerPosition: "top" });
│         });
│       });
│     </script>
│   </body>
│ </html>
--------------------------------------------------

│   │   │   │   │   │   ├── trang_chu.html

--------------------------------------------------
│--- Nội dung file: trang_chu.html ---
│ <!DOCTYPE html>
│ <html lang="vi" xmlns:th="http://www.thymeleaf.org">
│   <head>
│     <meta charset="UTF-8" />
│     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
│     <title>Trang chủ</title>
│     <link
│       href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
│       rel="stylesheet"
│     />
│     <link
│       rel="stylesheet"
│       href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
│     />
│     <link
│       href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap"
│       rel="stylesheet"
│     />
│     <link rel="shortcut icon" href="/images/user/user.png" type="image/x-icon">
│     <!-- <link rel="stylesheet" href="/css/user/trang_chu.css" /> -->
│     <style>
│       body {
│         font-family: "Poppins", sans-serif;
│         background: #f8f9fa; /* Màu nền sáng */
│         color: #343a40; /* Màu chữ tối */
│         min-height: 100vh;
│         display: flex;
│         flex-direction: column;
│       }
│ 
│       .content {
│         padding: 2rem;
│         flex-grow: 1;
│         padding-top: 50px;
│       }
│ 
│       .card-custom {
│         background: #ffffff; /* Nền trắng cho card */
│         border: 1px solid #e0e0e0; /* Viền xám nhạt */
│         border-radius: 10px;
│         box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
│         transition: all 0.3s;
│       }
│ 
│       .card-custom:hover {
│         transform: translateY(-5px);
│       }
│ 
│       .scrollable-table {
│         max-height: 300px; /* Adjusted height for 5 items */
│         overflow-y: auto; /* Add scrollbar when content exceeds height */
│         border-radius: 10px;
│         border: 1px solid #e0e0e0;
│         padding: 10px;
│       }
│ 
│       .scrollable-table table {
│         width: 100%;
│         text-align: left;
│         font-weight: bold;
│       }
│ 
│       .scrollable-table th {
│         background: #007bff;
│         color: white;
│         padding: 10px;
│         border-radius: 5px;
│       }
│ 
│       .scrollable-table td {
│         padding: 10px;
│       }
│ 
│       .scrollable-table tr:hover {
│         background: rgba(0, 123, 255, 0.1);
│         transform: scale(1.02);
│       }
│ 
│       .rank-1 {
│         color: gold;
│         font-weight: bold;
│       }
│ 
│       .rank-2 {
│         color: silver;
│         font-weight: bold;
│       }
│ 
│       .rank-3 {
│         color: #cd7f32;
│         font-weight: bold;
│       }
│ 
│       .navbar {
│         background-color: #343a40; /* Màu nền navbar */
│       }
│ 
│       .navbar-brand {
│         font-size: 1.5rem;
│         font-weight: bold;
│         color: #ffffff; /* Màu chữ navbar brand */
│       }
│ 
│       .navbar-nav .nav-link {
│         font-size: 1.1rem;
│         margin-right: 1rem;
│         transition: color 0.3s;
│         color: #ffffff; /* Màu chữ nav link */
│       }
│ 
│       .navbar-nav .nav-link:hover {
│         color: #007bff;
│       }
│ 
│       .btn-custom {
│         background: #007bff; /* Màu xanh dương */
│         color: white;
│         border: none;
│         transition: all 0.3s;
│       }
│ 
│       .btn-custom:hover {
│         background: #0056b3; /* Màu xanh dương đậm hơn khi hover */
│         transform: scale(1.05);
│       }
│ 
│       .row {
│         display: flex;
│         align-items: stretch;
│       }
│ 
│       .img-thumbnail {
│         border-radius: 50%;
│         width: 60px;
│         height: 60px;
│         border: 2px solid #007bff;
│       }
│       .search-bar {
│         margin-left: 20px;
│         display: flex;
│         align-items: center;
│         border: 1px solid #dfe1e5; /* Viền xám nhạt */
│         border-radius: 24px; /* Bo tròn viền */
│         padding: 8px 16px; /* Khoảng cách bên trong */
│         width: 500px; /* Chiều rộng thanh tìm kiếm */
│         background-color: #f8f9fa; /* Nền xám nhạt */
│       }
│ 
│       .search-bar i {
│         margin-left: 10px; /* Khoảng cách giữa biểu tượng và input */
│         color: #9aa0a6; /* Màu biểu tượng */
│       }
│ 
│       .search-bar input {
│         border: none;
│         outline: none;
│         flex-grow: 1;
│         background-color: transparent; /* Nền trong suốt */
│         font-size: 16px;
│       }
│ 
│       .footer {
│         background: #343a40;
│         color: white;
│         padding: 1rem 0;
│         text-align: center;
│         margin-top: auto;
│       }
│       .footer h3 {
│         margin-bottom: 1rem;
│       }
│       .footer ul {
│         padding: 0;
│         list-style: none;
│       }
│       .footer ul li {
│         margin-bottom: 0.5rem;
│       }
│       .footer ul li a {
│         color: #ffc107;
│         text-decoration: none;
│       }
│       .footer ul li a:hover {
│         text-decoration: underline;
│       }
│     </style>
│   </head>
│   <body>
│     <!-- Navbar -->
│     <nav class="navbar navbar-expand-lg navbar-light">
│       <div class="container">
│         <form class="navbar-brand search-bar" action="/" method="get">
│           <input type="text" name="keyword" placeholder="Tìm kiếm" />
│           <button
│             type="submit"
│             style="background: none; border: none; cursor: pointer"
│           >
│             <i class="fas fa-search"></i>
│           </button>
│         </form>
│         <button
│           class="navbar-toggler"
│           type="button"
│           data-bs-toggle="collapse"
│           data-bs-target="#navbarNav"
│         >
│           <span class="navbar-toggler-icon"></span>
│         </button>
│ 
│         <div
│           class="collapse navbar-collapse justify-content-end"
│           id="navbarNav"
│         >
│           <!-- <form class="d-flex me-2">
│             <input
│               class="form-control me-2"
│               type="search"
│               placeholder="Tìm kiếm"
│               aria-label="Tìm kiếm"
│             />
│             <button class="btn btn-outline-success" type="submit">
│               <i class="fas fa-search" style="cursor: pointer"></i>
│             </button>
│           </form> -->
│ 
│           <ul class="navbar-nav">
│             <li class="nav-item">
│               <a class="nav-link active" th:href="@{/user/hoso}">
│                 <i class="fas fa-home me-1"></i> Trang Chủ
│               </a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/user/baiviet/tao}">
│                 <i class="fas fa-pencil-alt"></i> Viết bài
│               </a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/register}">
│                 <i class="fas fa-user-plus"></i> Đăng ký
│               </a>
│             </li>
│             <li class="nav-item">
│               <a class="nav-link" th:href="@{/login}">
│                 <i class="fas fa-sign-in-alt"></i> Đăng nhập
│               </a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </nav>
│ 
│     <div class="content container">
│       <h3>
│         Hãy tương tác cùng mọi người bằng cách đăng bài viết, video, hình ảnh,
│         bình luận... để lên rank nhé!
│       </h3>
│       <div class="row mt-3">
│         <!-- Danh sách bài viết -->
│         <div class="col-md-7">
│           <div class="card-custom p-4">
│             <!-- <div class="d-flex justify-content-between">
│               <h4 class="text-center mb-3">Tất cả bài viết</h4>
│               <a th:href="@{/user/baiviet/tatca}" class="btn btn-custom mb-3"
│                 ><i class="fas fa-eye"></i>Xem chi tiết</a
│               >
│             </div> -->
│             <div class="scrollable-table">
│               <table>
│                 <thead>
│                   <tr>
│                     <th>Các bài viết</th>
│                     <th class="text-end">
│                       <a
│                         th:href="@{/user/baiviet/tatca}"
│                         class="btn btn-link text-warning text-decoration-none"
│                         ><i class="fas fa-eye"></i>Xem chi tiết</a
│                       >
│                     </th>
│                   </tr>
│                 </thead>
│                 <tbody>
│                   <tr th:each="baiViet : ${danhSachBaiViet}">
│                     <td>
│                       <a
│                         th:href="@{/user/baiviet/chitiet/{id}(id=${baiViet.id})}"
│                         th:text="${baiViet.tieuDe}"
│                       ></a>
│                     </td>
│                     <td>
│                       <span th:text="${baiViet.nguoiDung.tenDangNhap}"></span>
│                       <span
│                         th:text="' đã đăng vào ngày ' + ${#temporals.format(baiViet.ngayDang, 'dd/MM/yyyy')}"
│                       ></span>
│                     </td>
│                   </tr>
│                   <tr th:if="${danhSachBaiViet.isEmpty()}">
│                     <td colspan="2" class="text-center text-danger">
│                       Không có bài viết nào
│                     </td>
│                   </tr>
│                 </tbody>
│               </table>
│             </div>
│           </div>
│         </div>
│ 
│         <!-- Bảng xếp hạng -->
│         <div class="col-md-5">
│           <div class="card-custom p-4">
│             <h4 class="text-center mb-3">🏆 Bảng Xếp Hạng</h4>
│             <div class="scrollable-table">
│               <table>
│                 <thead>
│                   <tr>
│                     <th>Top</th>
│                     <th>Ảnh đại diện</th>
│                     <th>Tên Đăng Nhập</th>
│                     <th>Điểm</th>
│                     <th>Cấp Bậc</th>
│                   </tr>
│                 </thead>
│                 <tbody>
│                   <tr
│                     th:each="nguoiDung, iterStat : ${danhSachNguoiDung}"
│                     th:classappend="${iterStat.count == 1} ? 'rank-1' : (${iterStat.count == 2} ? 'rank-2' : (${iterStat.count == 3} ? 'rank-3' : ''))"
│                   >
│                     <td th:text="${iterStat.count}"></td>
│                     <td>
│                       <img
│                         src="/images/user/user.png"
│                         alt="Avatar"
│                         class="img-thumbnail"
│                       />
│                     </td>
│                     <td th:text="${nguoiDung.tenDangNhap}"></td>
│                     <td
│                       th:text="${diemNguoiDungService.tinhTongDiemByNguoiDungId(nguoiDung.id)}"
│                     ></td>
│                     <td th:text="${nguoiDung.capBac}"></td>
│                   </tr>
│                   <tr th:if="${danhSachNguoiDung.isEmpty()}">
│                     <td colspan="4" class="text-center text-danger">
│                       Không có người dùng nào
│                     </td>
│                   </tr>
│                 </tbody>
│               </table>
│             </div>
│           </div>
│         </div>
│       </div>
│     </div>
│ 
│     <footer class="footer">
│       <div class="container">
│         <p>&copy; 2025 Trang web của bạn. Mọi quyền được bảo lưu.</p>
│         <div>
│           <h3>Tài liệu tham khảo</h3>
│           <ul class="list-unstyled">
│             <li>
│               <a href="https://github.com">Github</a>
│             </li>
│             <li>
│               <a href="https://chatgpt.com">ChatGPT</a>
│             </li>
│             <li>
│               <a href="https://spring.io">Sping Boot</a>
│             </li>
│             <li>
│               <a href="https://thymeleaf.org">Thymeleaf</a>
│             </li>
│           </ul>
│         </div>
│       </div>
│     </footer>
│ 
│     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
│   </body>
│ </html>
--------------------------------------------------

│   ├── test/
│   │   ├── java/
│   │   │   ├── com/
│   │   │   │   ├── example/
│   │   │   │   │   ├── xephangnguoidung/
│   │   │   │   │   │   ├── XephangnguoidungApplicationTests.java

--------------------------------------------------
│--- Nội dung file: XephangnguoidungApplicationTests.java ---
│ package com.example.xephangnguoidung;
│ 
│ import org.junit.jupiter.api.Test;
│ import org.springframework.boot.test.context.SpringBootTest;
│ 
│ @SpringBootTest
│ class XephangnguoidungApplicationTests {
│ 
│ 	@Test
│ 	void contextLoads() {
│ 	}
│ 
│ }
--------------------------------------------------

